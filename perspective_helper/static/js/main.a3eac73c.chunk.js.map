{"version":3,"sources":["lib/jsmatrix.js","utils.js","inputComponents.js","pointUtils.js","HelpWindow.js","components.js","color.js","style.js","renderoutput.js","camera.js","commonView.js","geom.js","viewUtils.js","tools.js","actions.js","App.js","serviceWorker.js","index.js"],"names":["f32","Float32Array","currentDefaultType","Float64Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","BigInt64Array","BigUint64Array","optional","v","defaultValue","undefined","Mat","data","rows","cols","innerStride","outerStride","this","_data","_rows","_cols","_innerStride","_outerStride","i","j","idx","index","length","Error","constructor","TypedMatFactory","type","_type","n","new","datat","r","c","result","uninitialized","insert","row","col","all","m","zeros","fill","diag","at","Math","random","Function","Array","MatF32","TypedVecFactory","_factory","from","id","isVec","copy","rand","VecF32","Diagonal","stride","_stride","min","toArray","TypedDiagonalFactory","DiagonalView","_m","_size","set","BlockView","_i","_j","ColumnView","RowView","TransposeView","TriangularMode","TriangularView","mode","_mode","checkIndex","b","out","solveUpperTriagonal","solveLowerTriagonal","RowPermutation","PaddedView","offDiagonalValue","diagonalValue","_offDiagonalValue","_diagonalValue","_colsm","similar","add","a","sub","cwiseMin","map","cwiseMax","max","block","mult","p","s","k","neg","setZero","setId","transpose","f","reduce","initValue","no_init","accum","argmax","acc","Infinity","push","mat","colwise","norm","norm2","sqrt","norm2Squared","normalize","scale","rowreduce","swapRow","row0","row1","r0","swapCol","col0","col1","c0","brows","bcols","bc","sumOffDiag","inv","d","e","g","h","factor","A","B","C","D","E","F","G","H","I","solve","isSquare","plu","computePLUD","computeSVD","newFromMat","PLUD","P","L","U","numSwaps","pb","y","solvePLU","M","N","rnmin","permutes","maxIndex","maxEl","abs","l","outkk","subcol","subvec","rowRho","subrowvec","rho","subrow","blockL","blockU","hypot","absa","absb","sqr","x","householderVector","sigma","vi","x0","beta","my","v0","v02","dot","start","applyHouseholderLeft","aj","wj","bwj","a0j","applyHouseholderRight","ai","wi","bwi","a0i","UBVD","Vt","createGivens","t","s1","c1","svd2","V","a11","a12","a21","a22","d0","f0","d1","giv","Vip","Viq","t1","t2","sh","apq","tau","createSchur","Uip","Uiq","chaseOutIntermediateZero","k0","z","qrstep","ak","bk","zk","ap","bp","aq","da","db","fa","fb","tb","tab","dt","trailingEigenvalue","bk1","ap1","bp1","zp1","aq1","giv2","ak1","zk1","chaseOutTrailingZero","SVD","S","svd","bj","zj","zr","solveSVD","si","isTransposed","K","ubv","fac","house","hv","cj","cjs","betaj","blockj","ri","ris","betai","blocki","unpackUBV","rj","computeUBVD","sd","d_i","f_i","d_ip1","chopSmallElements","iter","sdbm1","isNaN","sdam1","nBlock","Sj","Vij","rowMax","toJSON","cross","a0","a1","a2","b0","b1","b2","centralPerspective","near","far","vecFrom","perspective","fov","aspect","xsize","tan","ysize","O","left","right","bottom","top","ortho","rtol","viewport","y0","w","flipy","homogenize","points","hvec","hcoord","axisAngle","axis","angle","crossMatrix","K2","cos","sin","deg2rad","deg","PI","translation","T","scaling","spherical","theta","phi","st","cartesianToSpherical","atan2","acos","fromTo","X","Y","Z","genID","formatNumber","toPrecision","replace","Observable","name","_name","observers","Screen","_canvas","_ctx","_w","_h","_screenOrigin","_flip","observable","create","Data","entries","o","Object","assign","prototype","arguments","observe","info","object","ctx","func","topic","observableName","remove","splice","notify","call","screenOrigin","concat","updateValues","pixelWidth","_v","_u","orig","setTransform","canvas","width","height","getContext","clear","save","clearRect","restore","flip","toScreen","toImage","setColor","style","color","toString","get","key","val","keys","dn","valCp","cp","PI2","AngleSlider","angleName","handleChange","precision","clockwise","angleMin","angleMax","normalizeAngle","angleDeg","ad","sliderAngle","value","className","onChange","convPerc2Deg","Number","target","CheckBox","checked","labelText","useMemo","uuidv4","htmlFor","ValueSlider","valueName","step","NumberInput","otherProps","useState","vs","setVs","useEffect","allowEmptyFormatting","onValueChange","floatValue","NumberInputTimeout","timeout","timeRef","useRef","current","clearTimeout","setTimeout","valChanged","distanceSquaredPointLineSegment","dir","pa","d2","computeFrustumPlanes","mag","pointInBounds2d","bmin","bmax","pi","computeBounds","intersectLinePlane","plane","planeFromPointNormal","transformPlane","pointInside","sign","pointSide","mat2points","drawpoints","isClockwise","parray","sum","isLeft","P0","P1","P2","addz","closestVertex","objects","r2","pWorld","closest","closestRadius","di2","findIntersectSet","mousePosWorld","tolerance","intersectSet","ci","drawableWorld","isInsideXY","obj","sort","obja","objb","options","HelpWindow","props","show","setShow","window","onClick","useEventHandler","element","eventName","handleEvent","handlerRef","listener","addEventListener","removeEventListener","RGBA","_r","_g","_b","_a","RGBtoHSV","HSVtoRGB","q","floor","DashArray","args","slice","dashes","omitAlpha","toSVG","prefix","changeValue","percentage","RED","LIME","BLUE","WHITE","BLACK","YELLOW","FUCHSIA","AQUA","GREEN","PURPLE","ORANGE","SALMON","TEAL","GRAY","GREY","VIOLET","AMBER","ANDROID_GREEN","BALL_BLUE","BITTERSWEET","BRILLIANT_ROSE","CELADON","CEIL","DEFAULT_COLORS","getIndexColor","SOLID","DASH_EVEN","DASH_EVEN_SPACED","DASH_ODD","CanvasOutput","screen","filename","document","createElement","href","toDataURL","download","click","strokeStyle","linewidth","lineWidth","beginPath","moveTo","lineTo","stroke","alpha_min","alpha_max","fillStyle","dashArray","arc","setLineDash","text","font","flipped","getHeight","fillText","strokeText","lineCap","p0","closePath","SVGOutput","drawLineStrip","line","attributes","svg","doc","py","blob","Blob","URL","createObjectURL","textEl","scalingStroke","circle","polyFill","pp","point","moveCamera","move","pos","up","moveCameraLongitudinal","cam","moveCameraLateral","moveCameraNormal","useFirstPersonController","setCam","camUp","speed","lastPos","currentPos","pressed","mouse","setMouse","keyMap","setKeyMap","mouseMove","useCallback","evt","mpos","rect","getBoundingClientRect","clientX","clientY","event2Coordinate","mouseDown","mouseUp","keyDown","newMap","keyUp","updateKeys","movement","currentCam","newCam","makeCamera","changed","interval","setInterval","clearInterval","delta","rad1","zoom_scale","level","subdivision","base","pow","curLevel","intra_size","MIN_GRID_SIZE","computeViewportHalfSize","gridResolution","createProperties","showBoundVanishingLines","showBoundGridBottom","showBoundGridTop","showSideGridFront","showSideGridBack","gridCellLength","gridCellHeight","displayCellLength","sideGridStart","Transform","alpha","update","R","R4","DrawObject","drawable","styleData","transform","drawobject","properties","output","VP","clipplanes","draw","center","toMat","xyboundsWorld","xybounds","clone","Displayable","Polygon","drawPoly","outputList","inputPoints","numIn","pushPoint","list","num","wn","vip","insidePoly","LineStrip","vtol","Point","radius","drawArc","Text","drawText","computeTransformedDistanceSquared","am","bm","CreatePointTool","reset","state","currentObject","hoverIndex","toolState","overlay","viewTransforms","snappedMousePosWorld","setOverlayObjects","cursorStyle","co","previewPoints","fromCols","currentStyle","hoverPoint","oi","lastPoint","mid","MCanvas2Viewport","textpos","toFixed","action","actionType","context","setObjects","requestVisUpdate","editPoints","cellSize","zoomLevel","polypoints","reverse","poly","round","dobj","CreateRectTool","currentStart","p1","b3","dx","dy","cellsize","PropertyWindow","combineCellSize","setCombineCellSize","fillColor","strokeColor","onScaleChange","sx","sy","values","onBoundChange","handlePropertyChange","prop","cellSizeSetters","size","handleDelete","ColorPicker","rgb","newcolor","newData","displayPicker","setDisplayPicker","styles","reactCSS","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","SelectEditTool","currentSelectIndex","moveDownMouseWorld","selIdx","handleNoObject","newOptions","trans","setAlpha","setScale","objectsNew","newObjects","centerxy","pDrawable","objIndex","curIdx","selectIdx","oit","tOld","dt3","setTranslation","ViewEditTool","setViewport","dw","cur","vp","lastMousePos","viewMin","halfSize","viewMax","camPos","clampedPos","outside","camBGStyle","pcenter","mousePosCanvas","currentCenter","deltaCanvas","CameraEditTool","setPerspective","camDir","camZ","handleAngleChange","handleCamChange","jsonMatToMat","entry","jsonReviver","LoadSaveComponent","showLoadWindow","setShowLoadWindow","textRef","ref","scene","JSON","parse","stringify","currentTime","Date","formattedTime","getFullYear","getMonth","getDate","LoadSaveTool","FreeHandPolyTool","simplifyLine","eps","last","p2","x21","y21","dMax","updateViewportAspect","zoom","hw","hh","useComponentRef","setElement","transformMouse","mp","mp4","ToolSelect","onToolChange","currentTool","tool","disabled","TOOL_CREATE_RECT","TOOL_CREATE","TOOL_FREEDRAW","TOOL_SELECT","TOOL_VIEW","TOOL_CAMERA","TOOL_LOAD_SAVE","EditCanvas","canvasRef","useContext","ModelContext","setTool","snappedMousePosCanvas","inside","overlayObjects","setCurrentTool","snapToGrid","setSnapToGrid","MNormalized2Canvas","MViewport2Normalized","MViewPort2Canvas","canvasSize","setViewTransforms","toolVisNeedsUpdate","setToolVisNeedsUpdate","setToolState","dragState","setDragState","setLastMousePos","handleMouseMove","handleMouseDown","button","preventDefault","stopPropagation","handleMouseUp","useCanvasDrag","enabled","borderSize","moving","moveState","setMoveState","curdx","curdy","curmoving","handle","useViewportMove","resetTool","transforms","wh","onResize","boundgridData","viewc","viewh","initFrame","MView","displayObjects","floorGridData","floorgrid","bx","by","numX","ceil","numY","vx","vy","lj","prepareAndAdd","dp","boundData","bb","polySideGrids","createConstantLengthGrid","upDir","upHeight","cellLength","cullOptions","CULL_NONE","prepareAll","queue","drawables","forEach","di","finishFrame","handleAction","updateVis","snapMousePos","onMouseMove","mpWorld","mpWorldSnapped","mouseNew","onMouseLeave","onMouseEnter","onMouseDown","onMouseUp","onWheel","deltaY","CanvasResizer","buttonName","handleSizeChange","render","options2CullTypeSide","doCull","cullType","cellHeight","zticks","zOffset","topOffset","maxSteps","sideLength","ticks","offset","lines","createSideGridFromTicks","tticks","v1","l0","l1","overwriteZ","clip","clipDrawable","drawableDisplayable","makePerspectiveBoundDrawables","backgroundQueue","foregroundQueue","bbLower","li","bbUpper","ui","createVanishingLinePoints","aWorld","bWorld","nearPlane","clipplanesWindow","dataPoint","dataLine","dirWorld","dirH","aH","bH","isBBehind","createBoundVanishing","perspectiveRender","frustumPlanes","drawFloorGrid","linewidthScale","W","getWidth","WVP","planeLeft","planeRight","textClipPlanes","horizonPoints","horizonPointsHom","vph","vz","sleft","sright","horizonDrawable","horizon","fc","fh","vanishingLineData","gpoints","zStart","zHeight","dObj","TZ","drawTrans","pw","pt","lineData","culltype","noCullLast","pj","pjn","normal","clipped","pjz","textStart","numZ","isScaleLineWidth","PerspectiveView","imageSizeMultiplier","setImageSizeMultiplier","camSpeedLevel","setCamSpeedLevel","setDrawFloorGrid","camSpeed","tabIndex","canvasNew","curWidth","setCurWidth","curHeight","setCurHeight","React","createContext","ObjectHandler","eye","changeObject","onAddObject","onDeleteObject","Provider","objChangeHandler","App","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a3eac73c.chunk.js","sourcesContent":["// Linter comments\n/* global Float32Array, Float64Array, Int8Array, Uint8Array, Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,BigInt64Array,BigUint64Array */\n\n/**\n * Storage types used for matrices\n */\nconst f32 = Float32Array;\nconst f64 = Float64Array;\nconst i8 = Int8Array;\nconst ui8 = Uint8Array;\nconst ui8c = Uint8ClampedArray;\nconst i16 = Int16Array;\nconst ui16 = Uint16Array;\nconst i32 = Int32Array;\nconst ui32 = Uint32Array;\nconst i64 = BigInt64Array;\nconst ui64 = BigUint64Array;\nconst any = Array;\n\n//*****************************************************\nlet currentDefaultType = f32;\n\n\n//*****************************************************\nfunction optional(v, defaultValue) {\n    return v !== undefined ? v : defaultValue;\n}\n\n//*****************************************************\n/** void => int\n *\n * Generic function\n @name intVoidFunction\n @function\n @returns {number}\n */\n//*****************************************************\n/** (i,j) => *\n *\n * Function to access elements\n @name atFunction\n @function\n @param {number} i - The row\n @param {number} [j=0] - The column\n @returns {*} The matrix element at location (i,j)\n */\n//*****************************************************\n/** (v,i,j) => AbstractMat\n *\n * Function to set element values.\n @name setFunction\n @function\n @param {number} v - The new value\n @param {number} i - The row\n @param {number} [j=0] - The column\n @returns {AbstractMat} this\n */\n//*****************************************************\n/** void => function\n *\n * Generic function\n @name funcFunction\n @function\n @returns {function}\n */\n//*****************************************************\n/**\n * An abstract matrix\n * @typedef {Object} AbstractMat\n * @property {intVoidFunction} rows - The number of rows\n * @property {intVoidFunction} cols - The number of cols\n * @property {atFunction} at - The function to retrieve elements from. Access is only valid in the ranges i=[0,rows-1] and j=[0,cols-1]\n * @property {setFunction} set - The function to set elements. Access is only valid in the ranges i=[0,rows-1] and j=[0,cols-1]. Some matrices may not allow setting certain entries\n * @property {funcFunction} type - The function to get the underlying type of the matrix. This should either be Array or any TypedArray\n */\n\n//*****************************************************\n/**\n * An array-based matrix class. It can work with strided data.\n *\n * @extends AbstractMat\n */\nclass Mat {\n    /**\n     *\n     * @param {Array | TypedArray} data Input Array. Can be typed or generic.\n     * @param {number} rows Number of rows\n     * @param {number} cols Number of colums\n     * @param {number} [innerStride=1] Units from one element to the next. By default 1\n     * @param {number} [outerStride=rows] Units from one column to the next. By default the number of rows\n     */\n    constructor(data, rows, cols, innerStride, outerStride) {\n        /** @private */\n        this._data = data;\n        /** @private */\n        this._rows = rows;\n        /** @private */\n        this._cols = cols;\n        /** @private */\n        this._innerStride = optional(innerStride, 1);\n        /** @private */\n        this._outerStride = optional(outerStride, this._rows);\n    }\n\n    /**\n     *\n     * @param {Array | TypedArray} data Input Array. Can be typed or generic.\n     * @param {number} rows Number of rows\n     * @param {number} cols Number of colums\n     * @param {number} [innerStride=1] Units from one element to the next. By default 1\n     * @param {number} [outerStride=rows] Units from one column to the next. By default the number of rows\n     *\n     * @returns {Mat} A new\n     * @see constructor\n     */\n    static new(data, rows, cols, innerStride, outerStride) {\n        return new Mat(data, rows, cols, innerStride, outerStride);\n    }\n\n    rows() {\n        return this._rows;\n    }\n\n    cols() {\n        return this._cols;\n    }\n\n\n    index(i, j) {\n        j = j !== undefined ? j : 0;\n\n        return this._innerStride * (i + j * this._outerStride);\n    }\n\n    at(i, j) {\n\n        var idx = this.index(i, j);\n\n        if (idx > this._data.length) {\n            throw new Error(\"Trying to access data outside of range\");\n        }\n\n        return this._data[idx];\n    }\n\n    set(v, i, j) {\n        const idx = this.index(i, j);\n        if (idx > this._data.length) {\n            throw new Error(\"Trying to access data outside of range\");\n        }\n        this._data[idx] = v;\n        return this;\n    }\n\n    type() {\n        return this._data.constructor;\n    }\n\n\n}\n\n//*****************************************************\n/**\n * Helper to create special matrices with a given underlying array type\n */\nclass TypedMatFactory {\n    /**\n     *\n     * @param {function} type - The base type to be used. This should be either Array or a TypedArray\n     */\n    constructor(type) {\n        this._type = type;\n    }\n\n    /**\n     * Creates a new TypedMatFactory object\n     *\n     * @param {function} type - The base type to be used. This should be either Array or a TypedArray\n     * @returns {TypedMatFactory}\n     *\n     * @see TypedMatFactory.constructor\n     */\n    static new(type) {\n        return new TypedMatFactory(type);\n    }\n\n    static newFromMat(m) {\n        return new TypedMatFactory(m.type !== undefined && m.type instanceof Function ? m.type() : Array);\n    }\n\n    uninitialized(rows, cols) {\n        const n = rows * cols;\n        const data = new this._type(n);\n        return Mat.new(data, rows, cols);\n    }\n\n    from(data, rows, cols) {\n        const n = rows * cols;\n        const datat = new this._type(n);\n\n        for (let i = 0; i < n; i++) {\n            datat[i] = data[i];\n        }\n        return Mat.new(datat, rows, cols);\n    }\n\n    /**\n     * Creates a new matrix from an array of rows\n     * @param {Array<AbstractMat>} rows - An array of row vectors. All vectors need to have the same size\n     * @returns {AbstractMat} A newly created matrix\n     */\n    fromRows(rows) {\n        const r = rows.length;\n        if (r < 1) {\n            throw new Error(\"At least one row needed\");\n        }\n\n        const c = rows[0].cols();\n\n        const result = this.uninitialized(r, c);\n\n        for (let i = 0; i < r; i++) {\n            insert(row(result, i), rows[i]);\n        }\n\n        return result;\n\n    }\n\n    /**\n     * Creates a new matrix from an array of columns\n     * @param {Array<AbstractMat>} cols - An array of column vectors. All vectors need to have the same size\n     * @returns {AbstractMat} A newly created matrix\n     */\n    fromCols(cols) {\n        const c = cols.length;\n        if (c < 1) {\n            throw new Error(\"At least one column needed\");\n        }\n\n        const r = cols[0].rows();\n\n        const result = this.uninitialized(r, c);\n\n        for (let i = 0; i < c; i++) {\n            insert(col(result, i), cols[i]);\n        }\n\n        return result;\n\n    }\n\n    all(v, rows, cols) {\n        const n = rows * cols;\n        const data = new this._type(n);\n        for (let i = 0; i < n; i++) {\n            data[i] = v;\n        }\n        return Mat.new(data, rows, cols);\n    }\n\n    zeros(rows, cols) {\n        return this.all(0, rows, cols);\n    }\n\n    ones(rows, cols) {\n        return this.all(1, rows, cols);\n    }\n\n    id(rows, cols) {\n        cols = optional(cols, rows);\n        const m = this.zeros(rows, cols);\n\n        const dm = diag(m);\n        fill(dm, 1);\n\n        return m;\n    }\n\n    copy(m) {\n        const c = m.cols();\n        const r = m.rows();\n        const n = c * r;\n\n        const data = new this._type(n);\n\n        let idx = 0;\n        for (let j = 0; j < c; j++) {\n            for (let i = 0; i < r; i++) {\n                data[idx] = m.at(i, j);\n                idx++;\n            }\n        }\n        return Mat.new(data, r, c);\n    }\n\n    rand(rows, cols) {\n        const r = rows;\n        const c = cols;\n        const n = c * r;\n\n        const data = new this._type(n);\n\n        let idx = 0;\n        for (let j = 0; j < c; j++) {\n            for (let i = 0; i < r; i++) {\n                data[idx] = Math.random();\n                idx++;\n            }\n        }\n        return Mat.new(data, r, c);\n    }\n}\n\n//*****************************************************\n/**\n * A TypedMatFactory to create Float32Array based matrices\n */\nconst MatF32 = new TypedMatFactory(Float32Array);\n/**\n * A TypedMatFactory to create Float64Array based matrices\n */\nconst MatF64 = new TypedMatFactory(Float64Array);\n/**\n * A TypedMatFactory to create generic Array based matrices\n */\nconst MatAny = new TypedMatFactory(Array);\n/**\n * A TypedMatFactory to create Int8Array based matrices\n */\nconst MatI8 = new TypedMatFactory(Int8Array);\n/**\n * A TypedMatFactory to create Uint8Array based matrices\n */\nconst MatUI8 = new TypedMatFactory(Uint8Array);\n/**\n * A TypedMatFactory to create Uint8ClampedArray based matrices\n */\nconst MatUI8Clamped = new TypedMatFactory(Uint8ClampedArray);\n\n/**\n * A TypedMatFactory to create Int16Array based matrices\n */\nconst MatI16 = new TypedMatFactory(Int16Array);\n/**\n * A TypedMatFactory to create Uint16Array based matrices\n */\nconst MatUI16 = new TypedMatFactory(Uint16Array);\n\n/**\n * A TypedMatFactory to create Int32Array based matrices\n */\nconst MatI32 = new TypedMatFactory(Int32Array);\n/**\n * A TypedMatFactory to create Uint32Array based matrices\n */\nconst MatUI32 = new TypedMatFactory(Uint32Array);\n\n/**\n * A TypedMatFactory to create BigInt64Array based matrices\n */\nconst MatI64 = new TypedMatFactory(BigInt64Array);\n/**\n * A TypedMatFactory to create BigUint64Array based matrices\n */\nconst MatUI64 = new TypedMatFactory(BigUint64Array);\n\n//*****************************************************\n/**\n * Helper to create special vectors with a given underlying array type\n */\nclass TypedVecFactory {\n    /**\n     *\n     * @param {function} type - The base type to be used. This should be either Array or a TypedArray\n     */\n    constructor(type) {\n        /** @private */\n        this._type = type;\n        /** @private */\n        this._factory = TypedMatFactory.new(type);\n    }\n\n    /**\n     * Creates a new TypedVecFactory object\n     *\n     * @param {function} type - The base type to be used. This should be either Array or a TypedArray\n     * @returns {TypedVecFactory}\n     *\n     * @see TypedVecFactory.constructor\n     */\n    static new(type) {\n        return new TypedVecFactory(type);\n    }\n\n    static newFromMat(m) {\n        return new TypedVecFactory(m.type !== undefined && m.type instanceof Function ? m.type() : Array);\n    }\n\n    from(data, n) {\n        n = optional(n, data.length);\n        return this._factory.from(data, n, 1);\n    }\n\n    uninitialized(n) {\n        return this._factory.uninitialized(n, 1);\n    }\n\n    all(v, n) {\n        return this._factory.all(v, n, 1);\n    }\n\n    zeros(n) {\n        return this.all(0, n);\n    }\n\n    ones(n) {\n        return this.all(1, n);\n    }\n\n    id(n) {\n        return this._factory.id(n);\n    }\n\n    copy(m) {\n\n        if (!isVec(m)) {\n            throw new Error(\"Vector factory can't copy from non-vector\");\n        }\n\n        return this._factory.copy(m);\n    }\n\n    rand(n) {\n\n        return this._factory.rand(n, 1);\n    }\n}\n\n//*****************************************************\n/**\n * A TypedVecFactory to create Float32Array based vectors\n */\nconst VecF32 = new TypedVecFactory(Float32Array);\n/**\n * A TypedVecFactory to create Float64Array based vectors\n */\nconst VecF64 = new TypedVecFactory(Float64Array);\n/**\n * A TypedVecFactory to create generic Array based vectors\n */\nconst VecAny = new TypedVecFactory(Array);\n/**\n * A TypedVecFactory to create Int8Array based vectors\n */\nconst VecI8 = new TypedVecFactory(Int8Array);\n/**\n * A TypedVecFactory to create Uint8Array based vectors\n */\nconst VecUI8 = new TypedVecFactory(Uint8Array);\n/**\n * A TypedVecFactory to create Uint8ClampedArray based vectors\n */\nconst VecUI8Clamped = new TypedVecFactory(Uint8ClampedArray);\n\n/**\n * A TypedVecFactory to create Int16Array based vectors\n */\nconst VecI16 = new TypedVecFactory(Int16Array);\n/**\n * A TypedVecFactory to create Uint16Array based vectors\n */\nconst VecUI16 = new TypedVecFactory(Uint16Array);\n\n/**\n * A TypedVecFactory to create Int32Array based vectors\n */\nconst VecI32 = new TypedVecFactory(Int32Array);\n/**\n * A TypedVecFactory to create Uint32Array based vectors\n */\nconst VecUI32 = new TypedVecFactory(Uint32Array);\n\n/**\n * A TypedVecFactory to create BigInt64Array based vectors\n */\nconst VecI64 = new TypedVecFactory(BigInt64Array);\n/**\n * A TypedVecFactory to create BigUint64Array based vectors\n */\nconst VecUI64 = new TypedVecFactory(BigUint64Array);\n\n//*****************************************************\n/**\n * A diagonal matrix that only stores the diagonal as data.\n *\n * @extends AbstractMat\n */\nclass Diagonal {\n    constructor(data, rows, cols, stride) {\n        this._data = data;\n        this._rows = rows !== undefined ? rows : this._data.length;\n        this._cols = cols !== undefined ? cols : this._rows;\n        this._stride = stride !== undefined ? stride : 1;\n\n        if (this._data.length < this._stride * Math.min(this._rows, this._cols)) {\n            throw new Error(\"Not enough data for diagonal construction\");\n        }\n    }\n\n    static new(data, rows, cols, stride) {\n        return new Diagonal(data, rows, cols, stride);\n    }\n\n    static fromMat(m, rows, cols, stride) {\n        if (!isVec(m)) {\n            throw new Error(\"Diagonal only takes vectors as input\");\n        }\n\n        const data = toArray(m);\n        return this.new(data, rows, cols, stride);\n    }\n\n    rows() {\n        return this._rows;\n    }\n\n    cols() {\n        return this._cols;\n    }\n\n    at(i, j) {\n        if (i !== j) {\n            return 0;\n        }\n\n        return this._data[this._stride * i];\n    }\n\n    set(v, i, j) {\n        if (i !== j) {\n            throw new Error(\"Trying to set offdiagonal element of diagonal matrix\");\n        }\n        this._data[this._stride * i] = v;\n        return this;\n    }\n\n    type() {\n        return this._data.constructor;\n    }\n}\n\n//*****************************************************\n/**\n * Helper to create special diagonal matrices with a given underlying array type\n */\nclass TypedDiagonalFactory {\n    constructor(type) {\n        this._type = type;\n    }\n\n    static new(type) {\n        return new TypedDiagonalFactory(type);\n    }\n\n    static newFromMat(m) {\n        return new TypedDiagonalFactory(m.type !== undefined && m.type instanceof Function ? m.type() : Array);\n    }\n\n\n    from(data, rows, cols) {\n        cols = optional(cols, rows);\n        const n = Math.min(rows, cols);\n        const datat = new this._type(n);\n        for (let i = 0; i < n; i++) {\n            datat[i] = data[i];\n        }\n\n        return Diagonal.new(datat, rows, cols);\n    }\n\n    uninitialized(rows, cols) {\n        cols = cols !== undefined ? cols : rows;\n        const n = Math.min(rows, cols);\n        const data = new this._type(n);\n        return Diagonal.new(data, rows, cols);\n    }\n\n    all(v, rows, cols) {\n        cols = optional(cols, rows);\n        const n = Math.min(rows, cols);\n        const data = new this._type(n);\n        for (let i = 0; i < n; i++) {\n            data[i] = v;\n        }\n        return Diagonal.new(data, rows, cols);\n    }\n\n    id(rows, cols) {\n        return this.all(1, rows, cols);\n    }\n\n    rand(rows, cols) {\n        cols = cols !== undefined ? cols : rows;\n        const n = Math.min(rows, cols);\n        const data = new this._type(n);\n        for (let i = 0; i < data.length; i++) {\n            data[i] = Math.random();\n        }\n        return Diagonal.new(data, rows, cols);\n    }\n}\n\n//*****************************************************\n/**\n * A TypedDiagonalFactory to create Float32Array based diagonal matrices\n */\nconst DiagonalF32 = new TypedDiagonalFactory(Float32Array);\n\n/**\n * A TypedDiagonalFactory to create Float64Array based diagonal matrices\n */\nconst DiagonalF64 = new TypedDiagonalFactory(Float64Array);\n\n/**\n * A TypedDiagonalFactory to create generic Array based diagonal matrices\n */\nconst DiagonalAny = new TypedDiagonalFactory(Array);\n\n/**\n * A TypedDiagonalFactory to create Int8Array based matrices\n */\nconst DiagonalI8 = new TypedDiagonalFactory(Int8Array);\n/**\n * A TypedDiagonalFactory to create Uint8Array based matrices\n */\nconst DiagonalUI8 = new TypedDiagonalFactory(Uint8Array);\n/**\n * A TypedDiagonalFactory to create Uint8ClampedArray based matrices\n */\nconst DiagonalUI8Clamped = new TypedDiagonalFactory(Uint8ClampedArray);\n\n/**\n * A TypedDiagonalFactory to create Int16Array based matrices\n */\nconst DiagonalI16 = new TypedDiagonalFactory(Int16Array);\n/**\n * A TypedDiagonalFactory to create Uint16Array based matrices\n */\nconst DiagonalUI16 = new TypedDiagonalFactory(Uint16Array);\n\n/**\n * A TypedDiagonalFactory to create Int32Array based matrices\n */\nconst DiagonalI32 = new TypedDiagonalFactory(Int32Array);\n/**\n * A TypedDiagonalFactory to create Uint32Array based matrices\n */\nconst DiagonalUI32 = new TypedDiagonalFactory(Uint32Array);\n\n/**\n * A TypedDiagonalFactory to create BigInt64Array based matrices\n */\nconst DiagonalI64 = new TypedDiagonalFactory(BigInt64Array);\n/**\n * A TypedDiagonalFactory to create BigUint64Array based matrices\n */\nconst DiagonalUI64 = new TypedDiagonalFactory(BigUint64Array);\n\n//*****************************************************\n/**\n * A view of the diagonal of a matrix\n *\n * @extends AbstractMat\n */\nclass DiagonalView {\n    /**\n     *\n     * @param {*} m\n     */\n    constructor(m) {\n        this._m = m;\n        this._size = Math.min(this._m.rows(), this._m.cols());\n    }\n\n    static new(m) {\n        return new DiagonalView(m);\n    }\n\n    rows() {\n        return this._size;\n    }\n\n    cols() {\n        // row vector\n        return 1;\n    }\n\n    at(i) {\n        return this._m.at(i, i);\n    }\n\n    set(v, i) {\n        this._m.set(v, i, i);\n        return this;\n    }\n\n    type() {\n        return this._m.type();\n    }\n}\n\n//*****************************************************\n/**\n * A view of a block of a matrix\n *\n * @extends AbstractMat\n */\nclass BlockView {\n    constructor(m, i, j, rows, cols) {\n        this._m = m;\n        this._i = i;\n        this._j = j;\n        this._rows = rows;\n        this._cols = cols;\n    }\n\n    static new(m, i, j, rows, cols) {\n        return new BlockView(m, i, j, rows, cols);\n    }\n\n    rows() {\n        return this._rows;\n    }\n\n    cols() {\n        return this._cols;\n    }\n\n    at(i, j) {\n        j = j !== undefined ? j : 0;\n        return this._m.at(i + this._i, j + this._j);\n    }\n\n    set(v, i, j) {\n        j = j !== undefined ? j : 0;\n        return this._m.set(v, i + this._i, j + this._j);\n    }\n\n    type() {\n        return this._m.type();\n    }\n}\n\n//*****************************************************\n/**\n * A view of a column of a matrix. This will be a column vector\n *\n * @extends BlockView\n */\nclass ColumnView extends BlockView {\n    constructor(m, j) {\n        const r = m.rows();\n        super(m, 0, j, r, 1);\n    }\n\n    static new(m, j) {\n        return new ColumnView(m, j);\n    }\n}\n\n//*****************************************************\n/**\n * A view of a row of a matrix. This will be a row vector\n *\n * @extends BlockView\n */\nclass RowView extends BlockView {\n    constructor(m, i) {\n        const c = m.cols();\n        super(m, i, 0, 1, c);\n    }\n\n    static new(m, i) {\n        return new RowView(m, i);\n    }\n}\n\n//*****************************************************\n/**\n * Transpose view of a matrix. Functions as a transpose without copy\n *\n * @extends AbstractMat\n */\nclass TransposeView {\n    constructor(m) {\n        this._m = m;\n    }\n\n    static new(m) {\n        return new TransposeView(m);\n    }\n\n    rows() {\n        return this._m.cols();\n    }\n\n    cols() {\n        return this._m.rows();\n    }\n\n    at(i, j) {\n        j = j !== undefined ? j : 0;\n        return this._m.at(j, i);\n    }\n\n    set(v, i, j) {\n        j = j !== undefined ? j : 0;\n        return this._m.set(v, j, i);\n    }\n\n    type() {\n        return this._m.type();\n    }\n}\n\n//*****************************************************\n/**\n * Specifies the type of triangular matrix.\n *\n * All elements not included in the triangular part are considered zero\n */\nconst TriangularMode = {\n    /**\n     * Upper diagonal matrix including the diagonal\n     */\n    UPPER: 0,\n    /**\n     * Upper diagonal matrix including the diagonal\n     */\n    LOWER: 1,\n    /**\n     * Strictly upper diagonal matrix excluding the diagonal\n     */\n    STRICTLY_UPPER: 2,\n    /**\n     * Strictly lower diagonal matrix excluding the diagonal\n     */\n    STRICTLY_LOWER: 3,\n    /**\n     * Upper diagonal matrix. The diagonal entries entries are 1\n     */\n    UNIT_UPPER: 4,\n    /**\n     * Lower diagonal matrix. The diagonal entries entries are 1\n     */\n    UNIT_LOWER: 5\n};\n\n//*****************************************************\n/**\n * A view of a triangular portion of a given matrix.\n *\n * The type of portion may be specified by one of the values in TriangularMode.\n * Entries that are part of the view may be changed in the underlying matrix.\n * When specifying TriangularMode.UNIT_UPPER or TriangularMode.UNIT_LOWER, the diagonal accessor will return 1, but setting the diagonal is not possible.\n * @see TriangularMode\n *\n * @extends AbstractMat\n */\nclass TriangularView {\n    constructor(m, mode) {\n        this._m = m;\n        this._mode = mode;\n    }\n\n    static new(m, mode) {\n        return new TriangularView(m, mode);\n    }\n\n    rows() {\n        return this._m.rows();\n    }\n\n    cols() {\n        return this._m.cols();\n    }\n\n    checkIndex(i, j) {\n        return (this._mode === TriangularMode.UPPER && i <= j) ||\n            (this._mode === TriangularMode.LOWER && i >= j) ||\n            ((this._mode === TriangularMode.STRICTLY_UPPER || this._mode === TriangularMode.UNIT_UPPER) && i < j) ||\n            ((this._mode === TriangularMode.STRICTLY_LOWER || this._mode === TriangularMode.UNIT_LOWER) && i > j);\n    }\n\n    at(i, j) {\n        switch (this._mode) {\n            case TriangularMode.UPPER:\n                if (i > j) {\n                    return 0;\n                } else {\n                    return this._m.at(i, j);\n                }\n            case TriangularMode.LOWER:\n                if (i < j) {\n                    return 0;\n                } else {\n                    return this._m.at(i, j);\n                }\n            case TriangularMode.STRICTLY_UPPER:\n                if (i >= j) {\n                    return 0;\n                } else {\n                    return this._m.at(i, j);\n                }\n            case TriangularMode.STRICTLY_LOWER:\n                if (i <= j) {\n                    return 0;\n                } else {\n                    return this._m.at(i, j);\n                }\n\n            case TriangularMode.UNIT_LOWER:\n                if (i < j) {\n                    return 0;\n                } else if (i === j) {\n                    return 1;\n                } else {\n                    return this._m.at(i, j);\n                }\n            case TriangularMode.UNIT_UPPER:\n                if (i >= j) {\n                    return 0;\n                } else if (i === j) {\n                    return 1;\n                } else {\n                    return this._m.at(i, j);\n                }\n            default:\n                break;\n        }\n\n    }\n\n    set(v, i, j) {\n        if (!this.checkIndex(i, j)) {\n            throw new Error(\"Trying to set value outside triangular part\");\n        }\n\n        this._m.set(v, i, j);\n        return this;\n    }\n\n    type() {\n        return this._m.type();\n    }\n\n    solve(b, out) {\n        if (this._mode === TriangularMode.UPPER ||\n            this._mode === TriangularMode.STRICTLY_UPPER ||\n            this._mode === TriangularMode.UNIT_UPPER) {\n            return solveUpperTriagonal(this, b, out);\n        } else {\n            return solveLowerTriagonal(this, b, out);\n        }\n    }\n}\n\n//*****************************************************\n\n/**\n * Represents a row permutation matrix without explicit storage of the matrix.\n *\n * Permutations are represented by a permutation table given as an array.\n * The underlying type can be set explicitly.\n *\n * @extends AbstractMat\n */\nclass RowPermutation {\n    constructor(data, rows, cols, type) {\n        /** @private */\n        this._data = data;\n        /** @private */\n        this._rows = optional(rows, this._data.length);\n        /** @private */\n        this._cols = optional(cols, this._rows);\n        this._type = optional(type, currentDefaultType);\n    }\n\n    static new(data, rows, cols, type) {\n        return new RowPermutation(data, rows, cols, type);\n    }\n\n    at(i, j) {\n        // permute rows then map to identity\n        i = this._data[i];\n        j = optional(j, 0);\n\n        return i === j ? 1 : 0;\n    }\n\n    set(/**v,i,j */) {\n        throw new Error(\"Permuation matrix is immutable\");\n    }\n\n    rows() {\n        return this._cols;\n    }\n\n    cols() {\n        return this._cols;\n    }\n\n    type() {\n        return this._type;\n    }\n}\n\n//*****************************************************\n/**\n * A view of the minor submatrix of a given matrix.\n *\n * The minor is the matrix with one deleted row and column\n *\n * @extends AbstractMat\n */\nclass MinorView {\n    constructor(m, i, j) {\n        if (i >= m.rows() || j >= m.cols()) {\n            throw new Error(\"Trying to remove row/column outside of source\");\n        }\n\n        /** @private */\n        this._m = m;\n        /** @private */\n        this._i = i;\n        /** @private */\n        this._j = j;\n    }\n\n    static new(m, i, j) {\n        return new MinorView(m, i, j);\n    }\n\n    rows() {\n        return this._m.rows() - 1;\n    }\n\n    cols() {\n        return this._m.cols() - 1;\n    }\n\n    at(i, j) {\n        // skip row, if it was deleted\n        if (i >= this._i) {\n            i += 1;\n        }\n        // skip col, if it was deleted\n        if (j >= this._j) {\n            j += 1;\n        }\n\n        return this._m.at(i, j);\n    }\n\n    set(v, i, j) {\n        // skip row, if it was deleted\n        if (i >= this._i) {\n            i += 1;\n        }\n        // skip col, if it was deleted\n        if (j >= this._j) {\n            j += 1;\n        }\n\n        return this._m.set(v, i, j);\n    }\n\n    type() {\n        return this._m.type();\n    }\n\n}\n\n//*****************************************************\n/**\n * A padded view to embed another matrix in.\n *\n * Its size needs to be bigger then the size of the underlying matrix. Offdiagonal and diagonal constant values may be specified\n *\n * @extends AbstractMat\n */\nclass PaddedView {\n    constructor(m, rows, cols, offDiagonalValue, diagonalValue) {\n        /** @private */\n        this._m = m;\n        /** @private */\n        this._rows = rows;\n        /** @private */\n        this._cols = cols;\n\n        if (this._rows < m.rows() || this._cols < m.cols()) {\n            throw new Error(\"Padded View needs to be at least as big as source\");\n        }\n        /** @private */\n        this._offDiagonalValue = optional(offDiagonalValue, 0);\n        /** @private */\n        this._diagonalValue = optional(diagonalValue, 1);\n    }\n\n    static new(m, rows, cols, offDiagonalValue, diagonalValue) {\n        return new PaddedView(m, rows, cols, offDiagonalValue, diagonalValue);\n    }\n\n    rows() {\n        return this._rows;\n    }\n\n    cols() {\n        return this._cols;\n    }\n\n    at(i, j) {\n        if (i < this._m.rows() && j < this._m.cols()) {\n            return this._m.at(i, j);\n        }\n\n        if (i === j) {\n            return this._diagonalValue;\n        } else {\n            return this._offDiagonalValue;\n        }\n    }\n\n    set(v, i, j) {\n        if (i < this._m.rows() && j < this._colsm.cols()) {\n            return this._m.set(v, i, j);\n        }\n\n        throw new Error(\"Trying to set values in padding\");\n    }\n\n    type() {\n        return this._m.type();\n    }\n}\n\n//*****************************************************\n/**\n * Creates an uninitialized matrix similar to the given one\n *\n * The copy will have the same size and underlying type as m\n * @param {AbstractMat} m - The input matrix\n * @param [rows] - Number of rows of the resulting matrix\n * @param [cols]- Number of cols of the resulting matrix\n * @returns {AbstractMat} An uninitialized matrix of the same size and type as m\n */\nfunction similar(m, rows, cols) {\n    rows = rows !== undefined ? rows : m.rows();\n    cols = cols !== undefined ? cols : m.cols();\n\n\n    return TypedMatFactory.new(m.type()).uninitialized(rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a copy of the given matrix.\n *\n * The copy will have the same underlying type as m\n * @param {AbstractMat} m - The input matrix\n * @returns {Mat} A copy of m\n */\nfunction copy(m) {\n    return TypedMatFactory.new(m.type()).copy(m);\n}\n\n//*****************************************************\n/**\n * Checks whether a matrix is a vector.\n *\n * Only column vectors are considered vectors, that is matrices with one column\n *\n * @param {AbstractMat} m - The matrix to check\n * @returns {boolean} True, if the matrix is a column vector, false otherwise\n */\nfunction isVec(m) {\n    return m.cols() === 1;\n}\n\n/**\n * Checks whether a matrix is a row vector, that is matrices with one row\n *\n * @param {AbstractMat} m - The matrix to check\n * @returns {boolean} True, if the matrix is a row vector, false otherwise\n */\nfunction isRowVec(m) {\n    return m.rows() === 1;\n}\n\n//*****************************************************\n//*****************************************************\n/**\n * Adds a value to each entry in the matrix\n * @param {AbstractMat} a - First matrix\n * @param {number | string} v - The value to add\n * @returns {AbstractMat} a\n */\nfunction addScalar(a, v) {\n\n    const r = a.rows();\n    const c = a.cols();\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            a.set(a.at(i, j) + v, i, j);\n        }\n    }\n\n    return a;\n}\n\n//*****************************************************\n/**\n * Adds matrix b to matrix a.\n * @param {AbstractMat} a - First matrix\n * @param {AbstractMat} b - Second matrix\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created.\n * @returns {AbstractMat} a+b\n */\nfunction add(a, b, out) {\n\n\n    if (a.cols() !== b.cols() || a.rows() !== b.rows()) {\n        throw new Error(\"Trying to add input of different sizes\");\n    }\n    const r = a.rows();\n    const c = a.cols();\n\n    out = out !== undefined ? out : similar(a);\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            let v = a.at(i, j) + b.at(i, j);\n            out.set(v, i, j);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Subtracts matrix b from matrix a.\n * @param {AbstractMat} a - First matrix\n * @param {AbstractMat} b - Second matrix\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} a-b\n */\nfunction sub(a, b, out) {\n\n    if (a.cols() !== b.cols() || a.rows() !== b.rows()) {\n        throw new Error(\"Trying to add input of different sizes\");\n    }\n\n    const r = a.rows();\n    const c = a.cols();\n\n    out = out !== undefined ? out : similar(a);\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            let v = a.at(i, j) - b.at(i, j);\n            out.set(v, i, j);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Sets all entries in a matrix equal to a given value\n *\n * @param {AbstractMat} m - The matrix to change\n * @param {*} v - The value\n * @returns {AbstractMat} m\n */\nfunction fill(a, v) {\n    const r = a.rows();\n    const c = a.cols();\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            a.set(v, i, j);\n        }\n    }\n\n    return a;\n}\n\n//*****************************************************\n/**\n * Computes a componenwise multiplication of two matrices of the same size\n *\n * Computes (i,j) => a.at(i,j)*b.at(i,j)\n *\n * @param {AbstractMat} a - The first input matrix\n * @param {AbstractMat} b - The second input matrix\n * @param {AbstractMat} out - The output matrix. If not specified, a new matrix will be created\n */\nfunction cwiseMult(a, b, out) {\n\n    return map(a, (v, row, col) => v * b.at(row, col), out);\n}\n\n//*****************************************************\n/**\n * Computes a componenwise minimum of two matrices of the same size\n *\n * Computes (i,j) => Math.min(a.at(i,j),b.at(i,j))\n *\n * @param {AbstractMat} a - The first input matrix\n * @param {AbstractMat} b - The second input matrix\n * @param {AbstractMat} out - The output matrix. If not specified, a new matrix will be created\n */\nfunction cwiseMin(a, b, out) {\n\n    return map(a, (v, row, col) => Math.min(v, b.at(row, col)), out);\n}\n\n//*****************************************************\n/**\n * Computes a componenwise maximum of two matrices of the same size\n *\n * Computes (i,j) => Math.max(a.at(i,j),b.at(i,j))\n *\n * @param {AbstractMat} a - The first input matrix\n * @param {AbstractMat} b - The second input matrix\n * @param {AbstractMat} out - The output matrix. If not specified, a new matrix will be created\n */\nfunction cwiseMax(a, b, out) {\n\n    return map(a, (v, row, col) => Math.max(v, b.at(row, col)), out);\n}\n\n//*****************************************************\n/**\n * Computes a componenwise division of two matrices of the same size\n *\n * Computes (i,j) => a.at(i,j)/b.at(i,j)\n *\n * @param {AbstractMat} a - The first input matrix\n * @param {AbstractMat} b - The second input matrix\n * @param {AbstractMat} out - The output matrix. If not specified, a new matrix will be created\n */\nfunction cwiseDiv(a, b, out) {\n\n    return map(a, (v, row, col) => v / b.at(row, col), out);\n}\n\n//*****************************************************\n/**\n * Creates a new DiagonalView of a given matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {DiagonalView} A DiagonalView of m\n *\n * @see DiagonalView\n */\nfunction diag(m) {\n    return DiagonalView.new(m);\n}\n\n//*****************************************************\n/**\n * Creates a new BlockView of a given matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @param {number} i - The start row\n * @param {number} j - The start column\n * @param {number} rows - The number of rows\n * @param {number} cols - The number of columns\n * @returns {BlockView} A BlockView of m\n *\n * @see BlockView\n */\nfunction block(m, i, j, rows, cols) {\n    rows = optional(rows, m.rows() - i);\n    cols = optional(cols, m.cols() - j);\n    return BlockView.new(m, i, j, rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a new RowView for the i-th row of a given matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @param {number} i - The row\n * @returns {ColumnView} A RowView of the i-th row of m\n *\n * @see RowView\n */\nfunction row(m, i) {\n    return RowView.new(m, i);\n}\n\n//*****************************************************\n/**\n * Creates a new ColumnView for the j-th column of a given matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @param {number} j - The column\n * @returns {ColumnView} A ColumnView of the j-th column of m\n *\n * @see ColumnView\n */\nfunction col(m, j) {\n    return ColumnView.new(m, j);\n}\n\n//*****************************************************\n/**\n * Multiplies a MxN matrix A with a NxP matrix B resulting in a MxP matrix C, so C = A*B\n *\n * @param {AbstractMat} a - Matrix to multiply on the left\n * @param {AbstractMat} b - Matrix to multiply on the right\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created. Should not be the same as a or b\n * @returns {AbstractMat} The output matrix a*b\n */\nfunction mult(a, b, out) {\n    const n = a.rows();\n    const m = a.cols();\n\n    if (m !== b.rows()) {\n        throw new Error(\"Incompatible matrix dimensions\");\n    }\n    const p = b.cols();\n\n    out = out !== undefined ? out : similar(a, n, p);\n\n    if (out.rows() !== n || out.cols() !== p) {\n        throw new Error(\"Output dimension does not match input\");\n    }\n\n    for (let j = 0; j < p; j++) {\n        for (let i = 0; i < n; i++) {\n            let s = 0;\n            for (let k = 0; k < m; k++) {\n                s += a.at(i, k) * b.at(k, j);\n            }\n            out.set(s, i, j);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Negates all entries in a given matrix\n *\n * @param {AbstractMat} m - The source matrix\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created. May be the same as m\n * @returns {AbstractMat} The output matrix\n */\nfunction neg(m, out) {\n    const r = m.rows();\n    const c = m.cols();\n\n    out = out !== undefined ? out : similar(m);\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            out.set(-m.at(i, j), i, j);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Maps each element to its absolute value\n *\n * @param {AbstractMat} a - The input matrix\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output matrix\n */\nfunction abs(a, out) {\n    return map(a, x => Math.abs(x), out);\n}\n\n//*****************************************************\n/**\n * Sets all entries in a matrix to zero\n *\n * @param {AbstractMat} m - The matrix to change\n * @returns {AbstractMat} m\n */\nfunction setZero(m) {\n    return fill(m, 0);\n}\n\n//*****************************************************\n/**\n * Sets all entries in a matrix to one\n *\n * @param {AbstractMat} m - The matrix to change\n * @returns {AbstractMat} m\n */\nfunction setOne(m) {\n    return fill(m, 1);\n}\n\n//*****************************************************\n/**\n * Sets the given MxN matrix to the identity.\n *\n * Each entriy (i,j) will be replace by 1, if i=j and 0 else\n *\n * @param {AbstractMat} m - The matrix to change\n * @returns {AbstractMat} m\n */\nfunction setId(m) {\n    const r = m.rows();\n    const c = m.cols();\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            let v = i === j ? 1 : 0;\n            m.set(v, i, j);\n        }\n    }\n\n    return m;\n\n}\n\n//*****************************************************\n/**\n * Create a transpose view of the given matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {TransposeView} A TransposeView of the input\n */\nfunction transpose(m) {\n    return TransposeView.new(m);\n}\n\n//*****************************************************\n/**\n * Maps each element of the given matrix to a new value computed by the given function\n *\n * @param {AbstractMat} m - The input matrix\n * @param {function} f - (value,row,col) => *. Function to map a value at position (row,col) to a new value\n * @param {AbstractMat} [out] - The output matrix. If none is specified, a new matrix will be created\n */\nfunction map(m, f, out) {\n    const r = m.rows();\n    const c = m.cols();\n\n    out = out !== undefined ? out : similar(m);\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            out.set(f(m.at(i, j), i, j), i, j);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Creates a copy of the given matrix with a new underlying storage type\n *\n * @param {AbstractMat} m - The input matrix\n * @param {*} type - The type type of data storage to be used for the converted matrix\n * @returns {Mat} A new matrix with the given type and contents converted from the input matrix\n */\nfunction convert(m, type) {\n    const out = TypedMatFactory.new(type).uninitialized(m.rows(), m.cols());\n\n    return map(m, x => x, out);\n\n}\n\n//*****************************************************\n/**\n * Reduces a matrix to a single value.\n *\n * The reducer function is called for each element. The return value is passed to the next invocation as the accumulator.\n *\n * If initValue is given, this will be the initial value of the accumulator.\n * If initValue is not specified the initial value of the accumulator will be the matrix's first element.\n * In that case, the first element the reducer is called with is the second matrix element.\n *\n * @param {AbstractMat} m - The input matrix\n * @param {*} f - (accum,v,row,col,m) => *. The reduce function\n * @param {*} [initValue] Initial value used for accumulation\n * @returns {*} The accumulated result\n */\nfunction reduce(m, f, initValue) {\n    let no_init = initValue === undefined;\n\n    const r = m.rows();\n    const c = m.cols();\n    if (no_init && r * c === 0) {\n        throw new Error(\"Calling reduce on empty input without initial value\");\n    }\n\n    let accum = no_init ? m.at(0, 0) : initValue;\n\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            if (no_init) {\n                // skip first, if no initvalue is given\n                no_init = false;\n                continue;\n            }\n            accum = f(accum, m.at(i, j), i, j, m);\n        }\n    }\n\n    return accum;\n}\n\n//*****************************************************\n/**\n * Computes the sum of all matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The sum of all elements\n */\nfunction sum(m) {\n    return reduce(m, (acc, v) => acc + v);\n}\n\n//*****************************************************\n/**\n * Computes the absolute sum of all matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The absolute sum of all elements\n */\nfunction absSum(m) {\n    return reduce(m, (acc, v) => acc + Math.abs(v), 0);\n}\n\n//*****************************************************\n/**\n * Computes the sum of all squared matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The sum of all squared elements\n */\nfunction sqrSum(m) {\n    return reduce(m, (acc, v) => acc + v * v, 0);\n}\n\n//*****************************************************\n/**\n * Computes the trace of the given matrix.\n *\n * The trace is the sum of the diagonal elements\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The trace of the matrix\n */\nfunction trace(m) {\n    return sum(diag(m));\n}\n\n//*****************************************************\n/**\n * Computes the rank of a matrix\n *\n * The rank is computed using the SVD\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The rank of the matrix\n */\nfunction rank(m) {\n    const svd = computeSVD(m);\n    return rankSVD(svd);\n}\n\n//*****************************************************\n/**\n * Computes the rank of a matrix given its SVD\n *\n * @param {SVD} m - The SVD of a matrix\n * @returns {number} The rank of the matrix\n */\nfunction rankSVD(svd) {\n    // count non-zero singular values\n    const s = svd.S;\n\n    for (let i = 0; i < s.rows(); i++) {\n        if (s.at(i) < 1E-7) {\n            return i;\n        }\n    }\n\n    return s.rows();\n}\n\n//*****************************************************\n/**\n * Computes the condition number of a matrix\n *\n * It is computed as the ration sigma_{max}/sigma_{min}, where the sigmas are the singular values of the matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The condition number\n */\nfunction cond(m) {\n    const svd = computeSVD(m);\n    return condSVD(svd);\n}\n\n//*****************************************************\n/**\n * Computes the condition number of a matrix given its SVD\n *\n * It is computed as the ration sigma_{max}/sigma_{min}, where the sigmas are the singular values of the matrix\n *\n * @param {SVD} m - The SVD of the input matrix\n * @returns {number} The condition number\n */\nfunction condSVD(svd) {\n\n    const s = svd.S;\n    const smax = s.at(0);\n    const smin = s.at(s.rows() - 1);\n\n    return smax / smin;\n\n}\n\n//*****************************************************\n/**\n * Computes the maximum of all matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The maximum of all elements\n */\nfunction max(m) {\n    return reduce(m, (acc, v) => Math.max(acc, v));\n}\n\n//*****************************************************\n/**\n * Computes the minimum of all matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The minimum of all elements\n */\nfunction min(m) {\n    return reduce(m, (acc, v) => Math.min(acc, v));\n}\n\n//*****************************************************\n/**\n * @typedef {Object} ArgResult\n * @property {*} v - The value\n * @property {number} row - The row in which v was found\n * @property {number} col - The column in which v was found\n */\n\n//*****************************************************\n/**\n * Computes the location of the maximum of all matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {ArgResult} The maximum of all elements and where it is\n */\nfunction argmax(m) {\n    return reduce(m, (acc, v, i, j) => {\n        if (v > acc.v) {\n            acc.v = v;\n            acc.row = i;\n            acc.col = j;\n        }\n        return acc;\n    }, { v: -Infinity, row: -1, col: -1 });\n}\n\n//*****************************************************\n/**\n * Computes the location of the minimum of all matrix elements\n * @param {AbstractMat} m - The input matrix\n * @returns {ArgResult} The minimum of all elements and where it is\n */\nfunction argmin(m) {\n    return reduce(m, (acc, v, i, j) => {\n        if (v < acc.v) {\n            acc.v = v;\n            acc.row = i;\n            acc.col = j;\n        }\n        return acc;\n    }, { v: Infinity, row: -1, col: -1 });\n}\n\n//*****************************************************\n/**\n * Produces an Array from all values in the matrix in column-major order\n * @param {AbstractMat} m - The input matrix\n * @returns {Array} An array with all matrix entries\n */\nfunction toArray(m) {\n    const c = m.cols();\n    const r = m.rows();\n    const result = [];\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            result.push(m.at(i, j));\n        }\n    }\n\n    return result;\n}\n\n//*****************************************************\n/**\n * Creates an identiy matrix with the currently set default type\n *\n * @param {number} rows - The number of rows\n * @param {number} [cols=rows] - The number of cols\n * @param type - The type of the matrix\n * @returns {Diagonal} The identity matrix\n */\nfunction id(rows, cols, type) {\n    type = optional(type, currentDefaultType);\n    return TypedDiagonalFactory.new(type).id(rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a zero matrix with the currently set default type\n *\n * @param {number} rows - The number of rows\n * @param {number} cols - The number of cols\n * @param type - The type of the matrix\n * @returns {Mat} The zero matrix\n */\nfunction zeros(rows, cols, type) {\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).zeros(rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a random matrix\n *\n * @param {number} rows - The number of rows\n * @param {number} cols - The number of cols\n * @param type - The type of the matrix\n * @returns {Mat} The zero matrix\n */\nfunction rand(rows, cols, type) {\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).rand(rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a ones matrix with the currently set default type\n *\n * @param {number} rows - The number of rows\n * @param {number} cols - The number of cols\n * @param type - The type of the matrix\n * @returns {Mat} The ones matrix\n */\nfunction ones(rows, cols, type) {\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).ones(rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a new uninitialized matrix with the currently set default type\n *\n * @param {number} rows - The number of rows\n * @param {number} cols - The number of cols\n * @param type - The type of the matrix\n * @returns {Mat} An uninitialized matrix\n */\nfunction mat(rows, cols, type) {\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).uninitialized(rows, cols);\n}\n\n//*****************************************************\n/**\n * Creates a Mat from data with a given underlying type\n * @param {Array | TypedArray} data - The input data\n * @param {number} rows - The rows\n * @param {number} cols - The columns\n * @param {Object} [type] - The underlying type. Defaults to the current default type\n * @returns {Mat} A mat with a typed copy of the given data\n */\nfunction from(data, rows, cols, type) {\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).copy(Mat.new(data, rows, cols));\n}\n\n//*****************************************************\n/**\n * Creates a vector from data with a given underlying type\n * @param {Array | TypedArray} data - The input data\n * @param {Object} [type] - The underlying type. Defaults to the current default type\n * @returns {Mat} A vector with a typed copy of the given data\n */\nfunction vecFrom(data, type) {\n    const n = data.length;\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).copy(Mat.new(data, n, 1));\n}\n\n//*****************************************************\n/**\n * Creates a new uninitialized vector with the currently set default type\n *\n * @param {number} n - The number of elements\n * @param type - The type of the matrix\n * @returns {Mat} An uninitialized vector\n */\nfunction vec(n, type) {\n    type = optional(type, currentDefaultType);\n    return TypedMatFactory.new(type).uninitialized(n, 1);\n}\n\n//*****************************************************\n/**\n * Reduces a matrix along its columns.\n *\n * A MxN Matrix will be reduced to a 1xM row vector.\n * The callback function is used to compute the reduced result of a column that is written in the corresponding output slot\n *\n * @param {Abstractmat} m - The input matrix\n * @param {function} f - Function (col,j) => *. Will be called for each column. The return value will be written in the output at position j\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output\n */\nfunction colreduce(m, f, out) {\n    out = out !== undefined ? out : similar(m, 1, m.cols());\n\n    for (let j = 0; j < m.cols(); j++) {\n        out.set(f(col(m, j), j), 0, j);\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Calls a function for each column.\n *\n * This allows for changing the columns.\n *\n * @param {Abstractmat} m - The input matrix\n * @param {function} f - Function (col,j) => void. Will be called for each column.\n * @returns {AbstractMat} m\n */\nfunction colwise(m, f) {\n\n    for (let j = 0; j < m.cols(); j++) {\n        f(col(m, j), j);\n    }\n\n    return m;\n}\n\n//*****************************************************\n/**\n * Computes the norm of the given matrix.\n *\n * This computes the 2 p-norm. For vectors, this corresponds to the euclidean norm and for general matrices the frobenius norm\n * @see norm2\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The norm\n */\nfunction norm(m) {\n    return norm2(m);\n}\n\n//*****************************************************\n/**\n * Computes the 2 p-norm of the given matrix.\n *\n * For vectors, this corresponds to the euclidean norm and for general matrices the frobenius norm\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The 2 p-norm\n */\nfunction norm2(m) {\n    return Math.sqrt(norm2Squared(m));\n}\n\n//*****************************************************\n/**\n * Computes the squared 2 p-norm of the given matrix.\n *\n * This equals the square of the 2 p-norm\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The squared 2 p-norm\n */\nfunction norm2Squared(m) {\n    return reduce(m, (acc, v) => acc + v * v, 0.0);\n}\n\n//*****************************************************\n/**\n * Alias for norm2\n * @see norm2\n */\nconst normFrobenius = norm2;\n\n//*****************************************************\n/**\n * Computes the 1 p-norm of the given matrix.\n *\n * This is the taxicab norm\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The 1 p-norm\n */\nfunction norm1(m) {\n    return reduce(m, (acc, v) => acc + Math.abs(v), 0.0);\n}\n\n//*****************************************************\n/**\n * Computes the Inf p-norm of the given matrix.\n *\n * This is the maximum norm\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The 1 p-norm\n */\nfunction normInf(m) {\n    return reduce(m, (acc, v) => Math.max(acc, Math.abs(v)), 0.0);\n}\n\n//*****************************************************\n/**\n * Normalizes the given matrix with respect to the 2 p-norm\n *\n * This computes for each element m_{i,j} = m_{i,j}/norm(m)\n * @param {AbstractMat} m - The input matrix\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output\n */\nfunction normalize(m, out) {\n    const n = norm(m);\n\n    out = out !== undefined ? out : copy(m);\n\n    return scale(m, 1.0 / n, out);\n}\n\n//*****************************************************\n/**\n * Reduces a matrix along its rows.\n *\n * A MxN Matrix will be reduced to a Mx1 vector.\n * The callback function is used to compute the reduced result of a row that is written in the corresponding output slot\n *\n * @param {Abstractmat} m - The input matrix\n * @param {function} f - Function (row,i) => *. Will be called for each row. The return value will be written in the output at position i\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output\n */\nfunction rowreduce(m, f, out) {\n    out = out !== undefined ? out : similar(m, m.rows(), 1);\n\n    for (let i = 0; i < m.rows(); i++) {\n        out.set(f(row(m, i), i), i, 0);\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Calls a function for each row.\n *\n * This allows for changing the rows.\n *\n * @param {Abstractmat} m - The input matrix\n * @param {function} f - Function (row,i) => void. Will be called for each row.\n * @returns {AbstractMat} m\n */\nfunction rowwise(m, f) {\n\n    for (let i = 0; i < m.rows(); i++) {\n        f(row(m, i), i);\n    }\n\n    return m;\n}\n\n//*****************************************************\n/**\n * Copies the contents for b into a.\n *\n * Both matrices need to be of the same size\n *\n * @param {AbstractMat} a - The matrix to write into\n * @param {Mat} b - The matrix to be read from\n * @returns {AbstractMat} a\n */\nfunction insert(a, b) {\n    if (a.rows() !== b.rows() || a.cols() !== b.cols()) {\n        throw new Error(\"Insertion failed: Source and target have different sizes\");\n    }\n\n    const c = a.cols();\n    const r = b.rows();\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            a.set(b.at(i, j), i, j);\n        }\n    }\n\n    return a;\n\n}\n\n//*****************************************************\n/**\n * Swaps two rows of a matrix\n *\n * @param {AbstractMat} a - The input matrix\n * @param {number} row0 - The first row\n * @param {number} row1 - The second row\n * @returns {AbstractMat} a\n */\nfunction swapRow(a, row0, row1) {\n    const r0 = copy(row(a, row0));\n    insert(row(a, row0), row(a, row1));\n    insert(row(a, row1), r0);\n\n    return a;\n}\n\n//*****************************************************\n/**\n * Swaps two columns of a matrix\n *\n * @param {AbstractMat} a - The input matrix\n * @param {number} col0 - The first column\n * @param {number} col1 - The second column\n * @returns {AbstractMat} a\n */\nfunction swapCol(a, col0, col1) {\n    const c0 = copy(col(a, col0));\n    insert(col(a, col0), col(a, col1));\n    insert(col(a, col1), c0);\n\n    return a;\n}\n\n//*****************************************************\n/**\n * Computes the determinant of a square matrix\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {number} The determinant\n */\nfunction det(m) {\n    if (m.rows() !== m.cols()) {\n        throw new Error(\"Determinant only defined for square sources\");\n    }\n\n    // check if m has a dedicated det function\n    if (m.det && m.det instanceof Function) {\n        return m.det();\n    }\n\n    const n = m.rows();\n\n    if (n === 1) {\n        return m.at(0, 0);\n    } else if (n === 2) {\n        return m.at(0, 0) * m.at(1, 1) - m.at(0, 1) * m.at(1, 0);\n    } else if (n === 3) {\n        const a = m.at(0, 0);\n        const b = m.at(0, 1);\n        const c = m.at(0, 2);\n\n        const d = m.at(1, 0);\n        const e = m.at(1, 1);\n        const f = m.at(1, 2);\n\n        const g = m.at(2, 0);\n        const h = m.at(2, 1);\n        const i = m.at(2, 2);\n\n\n        return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h;\n\n    } else {\n\n        // TODO use more efficient formulation\n\n        const lu = computePLUD(m);\n\n        // singular matrix\n        if (!lu) {\n            return 0.0;\n        }\n        // lower diagonal is 1s -> determinant is 1\n        // total determinant is therefore just product of u diagonal\n        let s = (lu.numSwaps % 2 === 0 ? 1 : -1) * reduce(diag(lu.U), (acc, v) => acc * v);\n        // every invertable matrix can be PLU decomposed\n        // if there are any NaNs, the matrix was not invertible\n        if (isNaN(s)) {\n            s = 0.0;\n        }\n        return s;\n    }\n}\n\n//*****************************************************\n/**\n * Solves mx = b for x, where m is a lower triagonal matrix.\n *\n * @param {AbstractMat} m - The lower triagonal matrix\n * @param {AbstractMat} b - The matrix to solve for\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new one will be created\n * @returns {AbstractMat} The result\n */\nfunction solveLowerTriagonal(m, b, out) {\n    const rows = m.rows();\n    const cols = m.cols();\n\n    const brows = b.rows();\n    const bcols = b.cols();\n\n\n    if (rows !== cols) {\n        throw new Error(\"Lower triagonal matrix not square\");\n    }\n\n    if (rows !== brows) {\n        throw new Error(\"b does not have correct size\");\n    }\n\n    out = out !== undefined ? out : similar(b);\n\n    for (let bc = 0; bc < bcols; bc++) {\n        for (let i = 0; i < rows; i++) {\n            let sumOffDiag = 0;\n            for (let j = 0; j < i; j++) {\n                sumOffDiag += m.at(i, j) * out.at(j, bc);\n            }\n\n            out.set((b.at(i, bc) - sumOffDiag) / m.at(i, i), i, bc);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Solves mx = b for x, where m is a upper triagonal matrix.\n *\n * @param {AbstractMat} m - The upper triagonal matrix\n * @param {AbstractMat} b - The matrix to solve for\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new one will be created\n * @returns {AbstractMat} The result\n */\nfunction solveUpperTriagonal(m, b, out) {\n    const rows = m.rows();\n    const cols = m.cols();\n\n    const brows = b.rows();\n    const bcols = b.cols();\n\n\n    if (rows !== cols) {\n        throw new Error(\"Lower triagonal matrix not square\");\n    }\n\n    if (rows !== brows) {\n        throw new Error(\"b does not have correct size\");\n    }\n\n    out = out !== undefined ? out : similar(b);\n\n    for (let bc = 0; bc < bcols; bc++) {\n        for (let i = rows - 1; i >= 0; i--) {\n            let sumOffDiag = 0;\n            for (let j = rows - 1; j > i; j--) {\n                sumOffDiag += m.at(i, j) * out.at(j, bc);\n            }\n\n            out.set((b.at(i, bc) - sumOffDiag) / m.at(i, i), i, bc);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Checks, if the given matrix is square\n *\n * @param {AbstractMat} a - The input matrix\n * @returns {boolean} True, if the matrix is square, false otherwise\n */\nfunction isSquare(a) {\n    return a.rows() === a.cols();\n}\n\n//*****************************************************\n/**\n * Solves the linear system ax = b for x\n *\n * This will not check, if the matrix is invertable and assume it is in the square case.\n *\n * Solving for square matrices is accomplished via a PLU decomposition. If that fails due to singularities,\n * the result will be computed with an SVD.\n * Rectangular matrices are solved using the SVD, thus not solving exactly, but minimizing |Ax - b|_2\n *\n * @param {AbstractMat} a - The linear system\n * @param {AbstractMat} b - The matrix to solve for\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output\n */\nfunction solve(a, b, out) {\n\n    // check if a has a dedicated solve function\n    if (a.solve && a.solve instanceof Function) {\n        return a.solve(b, out);\n    }\n    if (isSquare(a)) {\n        // try plu\n        const plu = computePLUD(a);\n\n        // singular matrix solve with svd instead\n        if (!plu) {\n            return computeSVD(a).solve(b, out);\n        }\n        return plu.solve(b, out);\n    }\n\n    // for non square matrices -> use svd\n\n    const svd = computeSVD(a);\n    return svd.solve(b, out);\n}\n\n//*****************************************************\n/**\n * Solves the linear system ax = b for x using an already computed PLU decomposition.\n *\n * This will not check, if the matrix is invertable and assume it is\n *\n * @param {PLUD} plu - The PLU decomposition\n * @param {AbstractMat} b - The matrix to solve for\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output\n */\nfunction solvePLU(plu, b, out) {\n    const pb = mult(plu.P, b);\n\n    const y = solveLowerTriagonal(plu.L, pb);\n    const x = solveUpperTriagonal(plu.U, y, out);\n\n    return x;\n\n}\n\n//*****************************************************\n/**\n * Solves the linear system Ax = b for x using an already computed SVD decomposition.\n *\n * This will find x, such that |Ax - b|_2 is minimized\n *\n * @param {SVD} svd - The SVD\n * @param {AbstractMat} b - The matrix to solve for\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n * @returns {AbstractMat} The output\n */\nfunction solveSVD(svd, b, out) {\n    const U = svd.U;\n    const V = svd.V;\n    const S = svd.S;\n\n    const N = V.rows();\n\n    const P = b.cols();\n\n    let r = 0;\n\n    out = out !== undefined ? out : similar(b, N, P);\n    setZero(out);\n\n    for (let j = 0; j < P; j++) {\n        const bj = col(b, j);\n        const zj = col(out, j);\n\n        for (r = 0; r < S.rows(); r++) {\n            const sigma = S.at(r);\n            // TODO relative epsilon?\n            if (sigma <= 1E-7) {\n                break;\n            }\n\n            const zr = dot(col(U, r), bj) / sigma;\n            add(zj, scale(col(V, r), zr), zj);\n        }\n\n    }\n\n    return out;\n}\n\n//*****************************************************\n/**\n * Computes the inverse of a square matrix\n *\n * This will not check, whether a matrix is invertable\n *\n * @param {AbstractMat} m - The input matrix\n * @returns {AbstractMat} The inverse\n */\nfunction inv(m) {\n    if (m.rows() !== m.cols()) {\n        throw new Error(\"Inverse only defined for square sources\");\n    }\n\n    // check if m has a dedicated inv function\n    if (m.inv && m.inv instanceof Function) {\n        return m.inv();\n    }\n\n    const n = m.rows();\n\n    if (n === 1) {\n        return similar(m).set(1 / m.at(0, 0), 0, 0);\n    } else if (n === 2) {\n        let a = m.at(0, 0);\n        let b = m.at(0, 1);\n        let c = m.at(1, 0);\n        let d = m.at(1, 1);\n\n        let f = 1 / (a * d - b * c);\n\n        let result = similar(m);\n        result.set(f * d, 0, 0);\n        result.set(f * a, 1, 1);\n        result.set(-f * c, 1, 0);\n        result.set(-f * b, 0, 1);\n        return result;\n    } else if (n === 3) {\n        let a = m.at(0, 0);\n        let b = m.at(0, 1);\n        let c = m.at(0, 2);\n\n        let d = m.at(1, 0);\n        let e = m.at(1, 1);\n        let f = m.at(1, 2);\n\n        let g = m.at(2, 0);\n        let h = m.at(2, 1);\n        let i = m.at(2, 2);\n\n        let det = a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h;\n        let factor = 1 / det;\n        let A = (e * i - f * h);\n        let B = -(d * i - f * g);\n        let C = (d * h - e * g);\n        let D = -(b * i - c * h);\n        let E = (a * i - c * g);\n        let F = -(a * h - b * g);\n        let G = (b * f - c * e);\n        let H = -(a * f - c * d);\n        let I = (a * e - b * d);\n\n        let result = similar(m);\n\n        result.set(factor * A, 0, 0);\n        result.set(factor * B, 1, 0);\n        result.set(factor * C, 2, 0);\n\n        result.set(factor * D, 0, 1);\n        result.set(factor * E, 1, 1);\n        result.set(factor * F, 2, 1);\n\n        result.set(factor * G, 0, 2);\n        result.set(factor * H, 1, 2);\n        result.set(factor * I, 2, 2);\n\n\n        return result;\n    } else {\n\n        // Blockwise inversion\n        // Old\n        // let na = Math.max(n - 1, Math.floor(n / 2));\n\n        // let A = block(m, 0, 0, na, na);\n        // let B = block(m, 0, na, na, 1);\n        // let C = block(m, na, 0, 1, na);\n        // let D = block(m, na, na, 1, 1);\n\n\n        // let Ai = inv(A);\n        // let CAi = mult(C, Ai);\n        // let DCA1B = sub(D, mult(CAi, B));\n        // let DCA1Bi = inv(DCA1B);\n\n        // var tl = mult(Ai, add(DiagonalF.id(na), mult(B, mult(DCA1Bi, CAi))));\n        // var tr = mult(Ai, mult(B, DCA1Bi));\n        // neg(tr, tr);\n\n        // var bl = mult(DCA1Bi, CAi);\n        // neg(bl, bl);\n\n        // var br = DCA1Bi;\n\n        // var result = similar(m);\n\n        // insert(block(result, 0, 0, na, na), tl);\n        // insert(block(result, 0, na, na, 1), tr);\n        // insert(block(result, na, 0, 1, na), bl);\n        // insert(block(result, na, na, 1, 1), br);\n\n        // Invert using PLU decomposition\n        let id = TypedDiagonalFactory.newFromMat(m).id(n);\n        let result = solve(m, id);\n\n        return result;\n\n    }\n\n}\n\n//*****************************************************\n/**\n * LU decomposition with partial pivoting\n */\nclass PLUD {\n    /**\n     *\n     * @param {AbstractMat} P - Permutation matrix\n     * @param {AbstractMat} L - Lower unit triangular matrix\n     * @param {AbstractMat} U - Upper triangular matrix\n     * @param {number} numSwaps - The number of swaps in the permutation matrix\n     */\n    constructor(P, L, U, numSwaps) {\n        this.P = P;\n        this.L = L;\n        this.U = U;\n        this.numSwaps = numSwaps;\n    }\n\n    /**\n     * Creates a new PLUD object\n     *\n     * @param {AbstractMat} P - Permutation matrix\n     * @param {AbstractMat} L - Lower unit triangular matrix\n     * @param {AbstractMat} U - Upper triangular matrix\n     * @param {number} numSwaps - The number of swaps in the permutation matrix\n     *\n     * @returns {PLUD} - A new PLUD object\n     *\n     * @see constructor\n     */\n    static new(P, L, U, numSwaps) {\n        return new PLUD(P, L, U, numSwaps);\n    }\n\n    /**\n     * Solves Ax=b for x, where A is the matrix represented as this decomposition\n     *\n     * @param {AbstractMat} b - The matrix to solve for\n     * @param {AbstractMat} [out] - Optional output\n     */\n    solve(b, out) {\n        return solvePLU(this, b, out);\n    }\n\n    toMat(out) {\n        var M = this.P.rows();\n        var N = this.U.cols();\n\n        out = out !== undefined ? out : similar(this.U, M, N);\n\n        if (out.rows() !== M || out.cols() !== N) {\n            throw new Error(\"Output has wrong size\");\n        }\n\n        return mult(transpose(this.P), mult(this.L, this.U), out);\n    }\n\n\n}\n\n//*****************************************************\n/**\n * Computes an LU decomposition with partial pivoting.\n *\n * The decomposition of a Matrix A is defined by: P * A = L * U\n *\n * P is a permutation matrix\n * L is an upper triangular matrix\n * U is a lower triangular matrix\n *\n * A can be reconstructed by A = P^T * L * U\n *\n * @param {AbstractMat} a Input matrix\n * @param {AbstractMat} [out] Output whre LU will be compactly stored. If not specified a new matrix will be created.\n * @returns {PLUD} The LU decomposition with partial pivoting\n */\nfunction computePLUD(a, out) {\n\n    const n = a.rows();\n    const r = a.cols();\n    const rnmin = Math.min(a.rows(), a.cols());\n\n    const permutes = TypedMatFactory.new(Int32Array).uninitialized(n, 1);\n    map(permutes, (v, i) => i, permutes);\n\n    if (out === undefined) {\n        out = similar(a);\n\n    }\n    insert(out, a);\n    let numSwaps = 0;\n\n    for (let k = 0; k < rnmin; k++) {\n\n        // find largest value in colum for partial pivot\n\n        let maxIndex = k;\n        let maxEl = Math.abs(out.at(maxIndex, k));\n        for (let l = k + 1; l < n; l++) {\n            if (Math.abs(out.at(l, k)) > maxEl) {\n                maxIndex = l;\n                maxEl = Math.abs(out.at(l, k));\n            }\n        }\n\n        // swap row k with maxIndex\n        if (maxIndex !== k) {\n            numSwaps++;\n            swapRow(permutes, maxIndex, k);\n            swapRow(out, maxIndex, k);\n        }\n\n        // Algorithm from \"Matrix computations\"\n\n        const outkk = out.at(k, k);\n\n        // singularity detected\n        if (Math.abs(outkk) < 1E-7) {\n            return null;\n        }\n        const subcol = subvec(col(out, k), k + 1);\n        scale(subcol, 1.0 / outkk, subcol);\n\n        // update lower block\n        // case n > r\n        if (k < r) {\n            const rowRho = subrowvec(row(out, k), k + 1);\n\n            for (let rho = k + 1; rho < n; rho++) {\n                const subrow = subrowvec(row(out, rho), k + 1);\n                const arhok = out.at(rho, k);\n                sub(subrow, scale(rowRho, arhok), subrow);\n\n            }\n        }\n    }\n\n    const blockL = block(out, 0, 0, a.rows(), rnmin);\n    const blockU = block(out, 0, 0, rnmin, a.cols());\n    const L = TriangularView.new(blockL, TriangularMode.UNIT_LOWER);\n    const U = TriangularView.new(blockU, TriangularMode.UPPER);\n    const P = RowPermutation.new(toArray(permutes), permutes.rows(), permutes.rows(), a.type());\n    return PLUD.new(P, L, U, numSwaps);\n}\n\n//*****************************************************\n/**\n * Scales an input matrix by some value\n *\n * @param {AbstractMat} a - The input matrix\n * @param {number} v - The value to scale by\n * @param {AbstractMat} [out] - Output of the operation. If not specified, a new matrix will be created\n * @returns {AbstractMat} The result of a*v\n */\nfunction scale(a, v, out) {\n    out = out !== undefined ? out : similar(a);\n\n    for (let j = 0; j < a.cols(); j++) {\n        for (let i = 0; i < a.rows(); i++) {\n            out.set(a.at(i, j) * v, i, j);\n        }\n    }\n\n    return out;\n}\n\n//*****************************************************\n// Over-/underflow safe (a^2 + b^2)^(1/2)\nfunction hypot(a, b) {\n    const absa = Math.abs(a);\n    const absb = Math.abs(b);\n\n    const sqr = function (x) {\n        return x * x;\n    };\n    if (absa > absb) {\n\n        return absa * Math.sqrt(1.0 + sqr(absb / absa));\n    }\n\n    return absb === 0.0 ? 0.0 : absb * Math.sqrt(1.0 + sqr(absa / absb));\n}\n\n//*****************************************************\nfunction householderVector(x, out) {\n    if (!isVec(x)) {\n        throw new Error(\"Householder transform needs to operate on vector\");\n    }\n\n    let v = out !== undefined ? out : copy(x);\n    const m = x.rows();\n\n    // compute squared length of subvector starting at i = 1\n\n    let sigma = 0.0;\n    for (let i = 1; i < m; i++) {\n        let vi = x.at(i);\n        sigma += vi * vi;\n    }\n\n    const x0 = x.at(0);\n    v.set(1.0, 0);\n\n\n    if (sigma === 0.0) {\n        return { beta: 0.0, v: v };\n    }\n\n    const my = Math.sqrt(x0 * x0 + sigma);\n\n    if (x0 <= 0.0) {\n        v.set(x0 - my, 0);\n    } else {\n        v.set(-sigma / (x0 + my), 0);\n    }\n\n\n    const v0 = v.at(0);\n    const v02 = v0 * v0;\n    const beta = 2.0 * v02 / (sigma + v02);\n\n    scale(v, 1.0 / v0, v);\n    return { beta: beta, v: v };\n\n}\n\n//*****************************************************\n/**\n * Computes sum_{j}^{cols}sum_{i}^{rows} a[i,j]*b[i,j]\n *\n * For vectors this is the standard dot product\n *\n * @param {AbstractMat} a - The first matrix\n * @param {AbstractMat} b - The second matrix\n * @returns {Number }The sum of all multiplied corresponding elements in a and b\n */\nfunction dot(a, b) {\n    const r = a.rows();\n    const c = a.cols();\n\n    if (r !== b.rows() || c !== b.cols()) {\n        throw new Error(\"Inputs must match in size for dot product\");\n    }\n\n    let s = 0.0;\n\n    for (let j = 0; j < c; j++) {\n        for (let i = 0; i < r; i++) {\n            s += a.at(i, j) * b.at(i, j);\n        }\n    }\n\n    return s;\n}\n\n//*****************************************************\n/**\n * Constructs a subvector view for a given vector\n *\n * @param {AbstractMat} v - The base vector\n * @param {number} start - The start index\n * @param {number} [rows] - The number of rows. When not specified, the rows will be the remaining one in the base vector\n * @returns {BlockView} A subvector view of the base vector\n */\nfunction subvec(v, start, rows) {\n    if (!isVec(v)) {\n        throw new Error(\"Input for subvec needs to be a vector\");\n    }\n    rows = rows !== undefined ? rows : v.rows() - start;\n    return block(v, start, 0, rows, 1);\n}\n\n//*****************************************************\n/**\n * Constructs a subvector view for a given row vector\n *\n * @param {AbstractMat} v - The base row vector\n * @param {number} start - The start index\n * @param {number} [cols] - The number of columns. When not specified, the columns will be the remaining one in the base vector\n * @returns {BlockView} A subvector view of the base vector\n */\nfunction subrowvec(v, start, cols) {\n    if (!isRowVec(v)) {\n        throw new Error(\"Input for subvec needs to be a row vector\");\n    }\n    cols = cols !== undefined ? cols : v.cols() - start;\n    return block(v, 0, start, 1, cols);\n}\n\n//*****************************************************\n// Adapted from Matrix Multiplication 5.1\nfunction applyHouseholderLeft(beta, v, a, out) {\n    out = out !== undefined ? out : copy(a);\n    if (beta === 0.0) {\n        return out;\n    }\n\n    const r = a.rows();\n    const c = a.cols();\n\n    // apply per col\n    for (let j = 0; j < c; j++) {\n        // compute v^T * A[:,j]\n\n        const aj = col(out, j);\n        let wj = aj.at(0);\n\n        wj += dot(subvec(v, 1), subvec(aj, 1));\n\n        const bwj = beta * wj;\n\n        // apply to column: (aj)_i' = (aj)_i - (w_j*beta)*v_i\n        {\n            let a0j = aj.at(0);\n            aj.set(a0j - beta * wj, 0);\n        }\n        for (let i = 1; i < r; i++) {\n            aj.set(aj.at(i) - bwj * v.at(i), i);\n        }\n\n    }\n\n    return out;\n\n}\n\n//*****************************************************\n// Adapted from Matrix Multiplication 5.1\nfunction applyHouseholderRight(beta, v, a, out) {\n    out = out !== undefined ? out : copy(a);\n    if (beta === 0.0) {\n        return out;\n    }\n\n    const r = a.rows();\n    const c = a.cols();\n\n    // apply per row\n    for (let i = 0; i < r; i++) {\n        const ai = transpose(row(out, i));\n\n        let wi = ai.at(0);\n\n        wi += dot(subvec(v, 1), subvec(ai, 1));\n\n        const bwi = beta * wi;\n\n        // apply to entries in row\n        {\n            let a0i = ai.at(0);\n            ai.set(a0i - beta * wi, 0);\n        }\n        for (let j = 1; j < c; j++) {\n            ai.set(ai.at(j) - bwi * v.at(j), j);\n        }\n    }\n\n    return out;\n}\n\n/* eslint-disable no-unused-vars */\n// TODO use\nfunction computeQR(a, out) {\n    const M = a.rows();\n    const N = a.cols();\n\n    const P = Math.min(M, N);\n    if (out !== undefined) {\n        insert(out, a);\n        a = out;\n    } else {\n        a = copy(a);\n    }\n\n\n    for (let j = 0; j < N; j++) {\n        let cj = subvec(col(a, j), j);\n        let house = householderVector(cj);\n\n        const blockj = block(a, j, j, M - j, N - j);\n        applyHouseholderLeft(house.beta, house.v, blockj, blockj);\n\n        insert(subvec(cj, 1), subvec(house.v, 1, M - j - 1));\n\n    }\n\n}\n/* eslint-enable no-unused-vars */\n\n//*****************************************************\n/**\n * Computes an upper bidiagonal decomposition.\n *\n * This decomposition algorithm is only defined for rows >= cols.\n *\n * The decomposition is defined by: B = U^T * A * V. A can then be computed from B with A = U * B * V^T\n * B is an upper diagonal matrix. U and V are products of Householder matrices, with U = U_0 *... * U_n and V = V_0 * ... * V_{n-3}\n *\n * The result is stored in a matrix the same size as the input.\n * The essential parts of the U_i are stored in the columns below the diagonal, where only zeroes would be.\n * The essential parts of V_i  are analogously stored in the rows above the bidiagonal. The matrices themselves can be retrieved via the unpackUBV function\n *\n * @param {AbstractMat} a - The input matrix with a.rows() >= a.cols()\n * @param {AbstractMat} [out] - Output matrix. If none is specified, a new matrix is created. a itself can be used\n * @returns {AbstractMat} The packed result of the bidiagonalization\n */\nfunction computeUBVD(a, out) {\n    const M = a.rows();\n    const N = a.cols();\n\n    if (M < N) {\n        throw new Error(\"Biadiagonal only implemented for M >= N\");\n    }\n    if (out !== undefined) {\n        insert(out, a);\n        a = out;\n    } else {\n        a = copy(a);\n    }\n\n    for (let j = 0; j < N; j++) {\n        let cj = subvec(col(a, j), j);\n        let house = householderVector(cj);\n\n        const blockj = block(a, j, j, M - j, N - j);\n        applyHouseholderLeft(house.beta, house.v, blockj, blockj);\n\n        insert(subvec(cj, 1), subvec(house.v, 1, M - j - 1));\n\n        if (j < N - 2) {\n            let rj = subvec(transpose(row(a, j)), j + 1);\n            let blockj = block(a, j, j + 1, M - j, N - (j + 1));\n            let house = householderVector(rj);\n            applyHouseholderRight(house.beta, house.v, blockj, blockj);\n\n            insert(subvec(rj, 1), subvec(house.v, 1, N - j - 2));\n        }\n    }\n\n\n    return a;\n}\n\n//*****************************************************\n/**\n * Represents a UBV decomposition of some matrix A.\n *\n * B is an upper bidiagonal matrix with B = U^T * A * V\n */\nclass UBVD {\n\n    constructor(U, Vt, B) {\n        this.U = U;\n        this.Vt = Vt;\n        this.B = B;\n    }\n\n    static new(U, Vt, B) {\n        return new UBVD(U, Vt, B);\n    }\n}\n\n//*****************************************************\n/**\n * Reconstructs U,B and V^T matrices from a packed bidiagonalization decomposition.\n *\n * @see decomposeBidiag\n *\n * @param {AbstractMat} ubv The packed bidiagonal decomposition\n * @returns {UBVD} Object containg the U,B and V^T matrices\n */\nfunction unpackUBV(ubv) {\n\n    let M = ubv.rows();\n    let N = ubv.cols();\n    const fac = TypedMatFactory.newFromMat(ubv);\n    const B = fac.zeros(ubv.rows(), ubv.cols());\n\n    insert(diag(B), diag(ubv));\n    // superdiag\n    for (let i = 0; i < N - 1; i++) {\n        B.set(ubv.at(i, i + 1), i, i + 1);\n    }\n\n    const U = fac.zeros(M, M);\n    fill(subvec(diag(U), 0, N), 1.0);\n\n    let house = fac.zeros(M, 1);\n\n\n    for (let j = N - 1; j >= 0; j--) {\n        // extract essential\n        let hv = subvec(house, j);\n        hv.set(1.0, 0);\n\n        let cj = subvec(col(ubv, j), j);\n        let cjs = subvec(cj, 1);\n        insert(subvec(hv, 1), cjs);\n\n        let sigma = dot(cjs, cjs);\n        let betaj = sigma === 0.0 ? 0.0 : 2.0 / (1.0 + sigma);\n        let blockj = block(U, j, j, M - j, N - j);\n\n        applyHouseholderLeft(betaj, hv, blockj, blockj);\n    }\n\n    const Vt = fac.id(N);\n    house = fac.zeros(N - 1, 1);\n    for (let i = N - 3; i >= 0; i--) {\n        let hv = subvec(house, i);\n        hv.set(1.0, 0);\n\n        let ri = subvec(transpose(row(ubv, i)), i + 1);\n        let ris = subvec(ri, 1);\n        insert(subvec(hv, 1), ris);\n\n        let sigma = dot(ris, ris);\n        let betai = sigma === 0.0 ? 0.0 : 2.0 / (1.0 + sigma);\n        let blocki = block(Vt, i + 1, i + 1, N - (i + 1), N - (i + 1));\n        applyHouseholderRight(betai, hv, blocki, blocki);\n    }\n\n    return UBVD.new(U, Vt, B);\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction createGivens(a, b) {\n    let c, s;\n    if (b === 0.0) {\n        c = 1.0;\n        s = 0.0;\n    } else if (Math.abs(b) > Math.abs(a)) {\n        let t = -a / b;\n        let s1 = 1.0 / Math.sqrt(1 + t * t);\n        s = s1;\n        c = s1 * t;\n    } else {\n        let t = -b / a;\n        let c1 = 1.0 / Math.sqrt(1 + t * t);\n        c = c1;\n        s = c1 * t;\n    }\n\n    return { c: c, s: s };\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction trailingEigenvalue(d, f) {\n    const n = d.rows();\n\n    const da = d.at(n - 2);\n    const db = d.at(n - 1);\n    const fa = (n > 2) ? f.at(n - 3) : 0.0;\n    const fb = f.at(n - 2);\n\n    const ta = da * da + fa * fa;\n    const tb = db * db + fb * fb;\n    const tab = da * fb;\n\n    const dt = (ta - tb) / 2.0;\n\n    let mu;\n\n    if (dt >= 0) {\n        mu = tb - (tab * tab) / (dt + hypot(dt, tab));\n    } else {\n        mu = tb + (tab * tab) / ((-dt) + hypot(dt, tab));\n    }\n\n    return mu;\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction createSchur(d0, f0, d1) {\n    const apq = 2.0 * d0 * f0;\n    let c, s;\n    if (d0 === 0.0 || f0 === 0.0) {\n        c = 1.0;\n        s = 0.0;\n        return { c: c, s: s };\n    }\n\n    // TODO implement rescaling\n\n    if (apq !== 0.0) {\n        let t;\n        let tau = (f0 * f0 + (d1 + d0) * (d1 - d0)) / apq;\n\n        if (tau >= 0.0) {\n            t = 1.0 / (tau + hypot(1.0, tau));\n        } else {\n            t = -1.0 / (-tau + hypot(1.0, tau));\n        }\n\n        c = 1.0 / hypot(1.0, t);\n        s = t * c;\n    } else {\n        c = 1.0;\n        s = 0.0;\n    }\n\n    return { c: c, s: s };\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction svd2(d, f, U, V) {\n    let i;\n    let c, s, a11, a12, a21, a22;\n\n    const M = U.rows();\n    const N = V.rows();\n\n    const d0 = d.at(0);\n    const f0 = f.at(0);\n\n    const d1 = d.at(1);\n\n    if (d0 === 0.0) {\n        /* Eliminate off-diagonal element in [0,f0;0,d1] to make [d,0;0,0] */\n\n        let giv = createGivens(f0, d1);\n        c = giv.c;\n        s = giv.s;\n\n        /* compute B <= G^T B X,  where X = [0,1;1,0] */\n\n        d.set(c * f0 - s * d1, 0);\n        f.set(s * f0 + c * d1, 0);\n        d.set(0.0, 1);\n\n        /* Compute U <= U G */\n\n        for (i = 0; i < M; i++) {\n            let Uip = U.at(i, 0);\n            let Uiq = U.at(i, 1);\n\n            U.set(c * Uip - s * Uiq, i, 0);\n            U.set(s * Uip + c * Uiq, i, 1);\n        }\n\n        /* Compute V <= V X */\n\n        swapCol(V, 0, 1);\n\n        return;\n    } else if (d1 === 0.0) {\n        /* Eliminate off-diagonal element in [d0,f0;0,0] */\n\n        let giv = createGivens(d0, f0);\n        c = giv.c;\n        s = giv.s;\n        /* compute B <= B G */\n\n        d.set(d0 * c - f0 * s, 0);\n        f.set(0.0, 0);\n\n        /* Compute V <= V G */\n\n        for (i = 0; i < N; i++) {\n            let Vip = V.at(i, 0);\n            let Viq = V.at(i, 1);\n\n            V.set(c * Vip - s * Viq, i, 0);\n            V.set(s * Vip + c * Viq, i, 1);\n        }\n\n    } else {\n        /* Make columns orthogonal, A = [d0, f0; 0, d1] * G */\n\n        const sh = createSchur(d0, f0, d1);\n        c = sh.c;\n        s = sh.s;\n        /* compute B <= B G */\n\n        a11 = c * d0 - s * f0;\n        a21 = -s * d1;\n\n        a12 = s * d0 + c * f0;\n        a22 = c * d1;\n\n        /* Compute V <= V G */\n\n        for (i = 0; i < N; i++) {\n            let Vip = V.at(i, 0);\n            let Viq = V.at(i, 1);\n\n            V.set(c * Vip - s * Viq, i, 0);\n            V.set(s * Vip + c * Viq, i, 1);\n        }\n\n        /* Eliminate off-diagonal elements, bring column with largest\n           norm to first column */\n\n        if (hypot(a11, a21) < hypot(a12, a22)) {\n            let t1, t2;\n\n            /* B <= B X */\n\n            t1 = a11;\n            a11 = a12;\n            a12 = t1;\n            t2 = a21;\n            a21 = a22;\n            a22 = t2;\n\n            /* V <= V X */\n            swapCol(V, 0, 1);\n        }\n\n        let giv = createGivens(a11, a21);\n        c = giv.c;\n        s = giv.s;\n\n        /* compute B <= G^T B */\n\n        d.set(c * a11 - s * a21, 0);\n        f.set(c * a12 - s * a22, 0);\n        d.set(s * a12 + c * a22, 1);\n\n        /* Compute U <= U G */\n\n        for (i = 0; i < M; i++) {\n            let Uip = U.at(i, 0);\n            let Uiq = U.at(i, 1);\n\n            U.set(c * Uip - s * Uiq, i, 0);\n            U.set(s * Uip + c * Uiq, i, 1);\n        }\n\n    }\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction chaseOutIntermediateZero(d, f, U, k0) {\n\n    const M = U.rows();\n\n    const n = d.rows();\n    let c, s;\n    let x, y;\n    let k;\n\n    x = f.at(k0);\n    y = d.at(k0 + 1);\n\n    for (k = k0; k < n - 1; k++) {\n        const giv = createGivens(y, -x);\n        c = giv.c;\n        s = giv.s;\n        /* Compute U <= U G */\n\n\n        {\n            let i;\n\n            for (i = 0; i < M; i++) {\n                let Uip = U.at(i, k0);\n                let Uiq = U.at(i, k + 1);\n\n                U.set(c * Uip - s * Uiq, i, k0);\n                U.set(s * Uip + c * Uiq, i, k + 1);\n            }\n        }\n\n        /* compute B <= G^T B */\n\n        d.set(s * x + c * y, k + 1);\n\n        if (k === k0) {\n            f.set(c * x - s * y, k);\n        }\n\n        if (k < n - 2) {\n            let z = f.at(k + 1);\n            f.set(c * z, k + 1);\n\n            x = -s * z;\n            y = d.at(k + 2);\n        }\n    }\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction chaseOutTrailingZero(d, f, V) {\n\n    const N = V.rows();\n    const n = d.rows();\n    let c, s;\n    let x, y;\n    let k;\n\n    x = d.at(n - 2);\n    y = f.at(n - 2);\n\n    for (k = n - 1; k-- > 0;) {\n        const giv = createGivens(x, y);\n        c = giv.c;\n        s = giv.s;\n        /* Compute V <= V G where G = [c, s ; -s, c] */\n\n        {\n            let i;\n\n            for (i = 0; i < N; i++) {\n                let Vip = V.at(i, k);\n                let Viq = V.at(i, n - 1);\n\n                V.set(c * Vip - s * Viq, i, k);\n                V.set(s * Vip + c * Viq, i, n - 1);\n            }\n        }\n\n        /* compute B <= B G */\n\n        d.set(c * x - s * y, k);\n\n        if (k === n - 2) {\n\n            f.set(s * x + c * y, k);\n\n        }\n        if (k > 0) {\n            let z = f.at(k - 1);\n            f.set(c * z, k - 1);\n\n            x = d.at(k - 1);\n            y = s * z;\n        }\n    }\n}\n\n//*****************************************************\n// Adapted from GSL library\nfunction qrstep(d, f, U, V) {\n\n    const M = U.rows();\n    const N = V.rows();\n    const n = d.rows();\n    let y, z;\n    let ak, bk, zk, ap, bp, aq;\n    let i, k;\n\n    if (n === 1)\n        return;  /* shouldn't happen */\n\n    /* Compute 2x2 svd directly */\n\n    if (n === 2) {\n        svd2(d, f, U, V);\n        return;\n    }\n\n    /* Chase out any zeroes on the diagonal */\n\n    for (i = 0; i < n - 1; i++) {\n        let d_i = d.at(i);\n\n        if (d_i === 0.0) {\n            chaseOutIntermediateZero(d, f, U, i);\n            return;\n        }\n    }\n\n    /* Chase out any zero at the end of the diagonal */\n\n    {\n        let d_nm1 = d.at(n - 1);\n\n        if (d_nm1 === 0.0) {\n            chaseOutTrailingZero(d, f, V);\n            return;\n        }\n    }\n\n\n    /* Apply QR reduction steps to the diagonal and offdiagonal */\n\n    {\n        let d0 = d.at(0);\n        let f0 = f.at(0);\n\n        let d1 = d.at(1);\n\n        {\n            let mu = trailingEigenvalue(d, f);\n\n            y = d0 * d0 - mu;\n            z = d0 * f0;\n        }\n\n        /* Set up the recurrence for Givens rotations on a bidiagonal matrix */\n\n        ak = 0;\n        bk = 0;\n\n        ap = d0;\n        bp = f0;\n\n        aq = d1;\n    }\n\n    for (k = 0; k < n - 1; k++) {\n        let c, s;\n        const giv = createGivens(y, z);\n        c = giv.c;\n        s = giv.s;\n\n        /* Compute V <= V G */\n\n\n        for (i = 0; i < N; i++) {\n            let Vip = V.at(i, k);\n            let Viq = V.at(i, k + 1);\n\n            V.set(c * Vip - s * Viq, i, k);\n            V.set(s * Vip + c * Viq, i, k + 1);\n        }\n\n\n        /* compute B <= B G */\n\n        {\n            let bk1 = c * bk - s * z;\n\n            let ap1 = c * ap - s * bp;\n            let bp1 = s * ap + c * bp;\n            let zp1 = -s * aq;\n\n            let aq1 = c * aq;\n\n            if (k > 0) {\n                f.set(bk1, k - 1);\n            }\n\n            ak = ap1;\n            bk = bp1;\n            zk = zp1;\n\n            ap = aq1;\n\n            if (k < n - 2) {\n                bp = f.at(k + 1);\n            } else {\n                bp = 0.0;\n            }\n\n            y = ak;\n            z = zk;\n        }\n\n        let giv2 = createGivens(y, z);\n        c = giv2.c;\n        s = giv2.s;\n        /* Compute U <= U G */\n\n\n        for (i = 0; i < M; i++) {\n            let Uip = U.at(i, k);\n            let Uiq = U.at(i, k + 1);\n\n            U.set(c * Uip - s * Uiq, i, k);\n            U.set(s * Uip + c * Uiq, i, k + 1);\n        }\n\n        /* compute B <= G^T B */\n\n        {\n            let ak1 = c * ak - s * zk;\n            let bk1 = c * bk - s * ap;\n            let zk1 = -s * bp;\n\n            let ap1 = s * bk + c * ap;\n            let bp1 = c * bp;\n\n            d.set(ak1, k);\n\n            ak = ak1;\n            bk = bk1;\n            zk = zk1;\n\n            ap = ap1;\n            bp = bp1;\n\n            if (k < n - 2) {\n                aq = d.at(k + 2);\n            } else {\n                aq = 0.0;\n            }\n\n            y = bk;\n            z = zk;\n        }\n    }\n\n    f.set(bk, n - 2);\n    d.set(ap, n - 1);\n}\n\n//*****************************************************\n// Adapted from GSL library\n// Implements the unit round-off from \"Matrix Computations\" Algorithm 8.6.2\nfunction chopSmallElements(d, f) {\n    const N = d.rows();\n    let d_i = d.at(0);\n\n    for (let i = 0; i < N - 1; i++) {\n        let f_i = f.at(i);\n        let d_ip1 = d.at(i + 1);\n\n        // TODO Use better epsilon\n        if (Math.abs(f_i) < 1E-7 * (Math.abs(d_i) + Math.abs(d_ip1))) {\n            f.set(0.0, i);\n        }\n        d_i = d_ip1;\n    }\n\n}\n\n//*****************************************************\n/**\n * A singular value decomposition U * S * V^T\n */\nclass SVD {\n\n    /**\n     *\n     * @param {AbstractMat} U - The U matrix\n     * @param {AbstractMat} S - The singular values in a vector\n     * @param {AbstractMat} V - The V matrix\n     */\n    constructor(U, S, V) {\n        /** U */\n        this.U = U;\n        /** S matrix represented as a vector containing the singular values */\n        this.S = S;\n        /** V  */\n        this.V = V;\n        /** V^T */\n        this.Vt = transpose(this.V);\n\n    }\n\n    /**\n     * Creates a new SVD object\n     * @param {AbstractMat} U - The U matrix\n     * @param {AbstractMat} S - The singular values in a vector\n     * @param {AbstractMat} V - The V matrix\n     * @returns {SVD} A new SVD object\n     *\n     * @see constructor\n     */\n    static new(U, S, V) {\n        return new SVD(U, S, V);\n    }\n\n    /**\n     * Finds the vector x that minimizes ||Ax - b||_2, where A is the matrix decomposed into this SVD.\n     * @see solveSVD\n     * @param {AbstractMat} b - The vector to solve for\n     * @param {AbstractMat} [out] - Optional output vector\n     */\n    solve(b, out) {\n        return solveSVD(this, b, out);\n    }\n\n    /**\n     * Computes U * S * V^T and produces the matrix this decomposition represents\n     *\n     * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created\n     * @returns {AbstractMat} The result U * S * V^T\n     */\n    toMat(out) {\n        const U = this.U;\n        const V = this.V;\n        const S = this.S;\n\n        const M = U.rows();\n        const N = V.cols();\n        out = out !== undefined ? out : similar(U, M, N);\n\n        if (out.rows() !== M || out.cols() !== N) {\n            throw new Error(\"Output matrix has wrong dimensions\");\n        }\n\n        mult(U, mult(Diagonal.new(toArray(S), M, N), transpose(V)), out);\n\n        return out;\n\n    }\n\n    /**\n     * Creates the pseudo inverse of this SVD\n     * If the matrix has full rank, this will equal the inverse\n     *\n     * @returns {SVD} The SVD of the inverse\n     */\n    inv() {\n        const U = copy(this.U);\n        const V = copy(this.V);\n        const S = copy(this.S);\n\n        // replace every non zero singular value with reciprocal\n        for (let i = 0; i < S.rows(); i++) {\n            let si = S.at(i);\n            // TODO better epsilon\n            if (si < 1E-7) {\n                // arrived at first zero singular value\n                // since they are ordered we are finished\n                break;\n            }\n\n            S.set(1.0 / si, i);\n\n        }\n\n        return SVD.new(V, S, U);\n    }\n}\n\n//*****************************************************\n/**\n * Computes the singular value decomposition of a general matrix.\n *\n * A MxN matrix A can be decomposed into U * S * V^T\n *\n * U is a unitary MxM matrix\n * V is a unitary NxN matrix\n * S is a MxN diagonal matrix\n *\n * The diagonal entries of S are the singular values of A and the columns of U and V are the corresponding left and right singular vectors.\n * The singular values and their singular vectors are sorted in ascending order. S is represented as a vector containing the singular values.\n *\n * Partially adapted from GSL library and based on the SVD algorithm from \"Matrix Computations\" in section 8.6\n * @param {AbstractMat} m - The input matrix\n * @returns {SVD} The SVD\n */\nfunction computeSVD(m) {\n\n    // in case of m < n -> transpose temporarily\n    let isTransposed = false;\n\n    if (m.rows() < m.cols()) {\n        m = transpose(m);\n        isTransposed = true;\n    }\n\n    let M = m.rows();\n    let N = m.cols();\n\n    let K = Math.min(M, N);\n\n    const ubv = unpackUBV(computeUBVD(m));\n\n\n    // diagonal\n    const d = copy(diag(ubv.B));\n    const fac = TypedMatFactory.newFromMat(ubv.B);\n    // superdiagonal\n    const work = fac.uninitialized(N, 1);\n\n    const sd = subvec(work, 1);\n    for (let i = 0; i < N - 1; i++) {\n        sd.set(ubv.B.at(i, i + 1), i);\n    }\n\n    // remove very small elements\n    chopSmallElements(d, sd);\n\n    const U = copy(ubv.U);\n    const V = ubv.Vt;\n\n    // Adapted from GSL \n    let b = N - 1;\n    let iter = 0;\n\n    let a;\n\n    while (b > 0) {\n        const sdbm1 = sd.at(b - 1);\n\n        if (sdbm1 === 0.0 || isNaN(sdbm1)) {\n            b--;\n            continue;\n        }\n        /* Find the largest unreduced block (a,b) starting from b\n         and working backwards */\n\n        a = b - 1;\n\n        while (a > 0) {\n            const sdam1 = sd.at(a - 1);\n\n            if (sdam1 === 0.0 || isNaN(sdam1)) {\n                break;\n            }\n\n            a--;\n        }\n\n        iter++;\n\n        if (iter > 100 * N) {\n            throw new Error(\"SVD did not converge\");\n        }\n\n        {\n            const nBlock = b - a + 1;\n\n\n            const dBlock = subvec(d, a, nBlock);\n            const sdBlock = subvec(sd, a, nBlock - 1);\n\n            const uBlock = block(U, 0, a, U.rows(), nBlock);\n\n            const vBlock = block(V, 0, a, V.rows(), nBlock);\n\n            qrstep(dBlock, sdBlock, uBlock, vBlock);\n        }\n    }\n\n\n    for (let j = 0; j < K; j++) {\n        let Sj = d.at(j);\n\n        if (Sj < 0.0) {\n            for (let i = 0; i < N; i++) {\n                let Vij = V.at(i, j);\n                V.set(-Vij, i, j);\n            }\n\n            d.set(-Sj, j);\n        }\n    }\n\n    // sort singular values\n    for (let i = 0; i < K; i++) {\n        let maxSigma = argmax(subvec(d, i));\n\n        // argmax starts from offset\n        const rowMax = maxSigma.row + i;\n        if (rowMax !== i) {\n            // swap singular values stored in col vec\n            swapRow(d, i, rowMax);\n            // swap cols\n            swapCol(V, i, rowMax);\n            swapCol(U, i, rowMax);\n        }\n    }\n\n\n    // this method return U,V\n    // A = USV^T -> A^T = VSU^T = B\n    // B = U_bS_bV_b^T \n    // => U_b = V\n    // => S_b = S\n    // => V_b^T = U^T\n    // Since we return V instead of V^T, we have V_b = U \n    // redo transpose\n    if (isTransposed) {\n\n        return SVD.new(V, d, U);\n\n    } else {\n        return SVD.new(U, d, V);\n    }\n\n}\n\n//*****************************************************\n// pad strings\nfunction pad(s, n) {\n    if (s.length >= n) {\n        return s;\n    }\n\n    while (s.length < n) {\n        s += \" \";\n    }\n    return s;\n}\n\n//*****************************************************\n/**\n * Creates a pretty printable version of a matrix\n * @param {AbstractMat} m - The input matrix\n * @returns {string} A printable representation of the input matrix\n */\nfunction prettyprint(m) {\n    const mstr = map(m, x => x.toString(), MatAny.uninitialized(m.rows(), m.cols()));\n\n    // find maximum length per col\n    const ls = colreduce(mstr, x => reduce(x, (acc, v) => Math.max(acc, v.length), 0),\n        TypedMatFactory.new(Int16Array).uninitialized(1, m.cols()));\n\n    map(mstr, (x, i, j) => pad(x, ls.at(0, j)), mstr);\n    const rows = rowreduce(mstr, x => toArray(x).join(\" \"), MatAny.uninitialized(m.rows(), 1));\n\n    return toArray(rows).join(\"\\n\");\n\n}\n\n//*****************************************************\n/**\n * Creates a pretty printable version of a matrix\n * @see prettyprint\n * @param {AbstractMat} m - The input matrix\n * @returns {string} A printable representation of the input matrix\n */\nfunction toString(m) {\n    return prettyprint(m);\n}\n\nfunction toJSON(a) {\n    return {\n        rows: a.rows(),\n        cols: a.cols(),\n        data: toArray(a)\n    };\n}\n\n\n//*****************************************************\n/**\n * Get the default storage type used for generic matrices\n * @returns {object} The current default storage type\n */\nfunction getDefaultType() {\n    return currentDefaultType;\n}\n\n//*****************************************************\n/**\n * Sets the default storage type.\n *\n * At the beginning, this will be Float32Array\n * @param {object} type - The new storage type\n */\nfunction setDefaultType(type) {\n    currentDefaultType = type;\n}\n\n//*****************************************************\n\n/*\n * Geometry\n */\n\n/**\n * Computes the cross product between two 3D vectors a x b\n *\n * @param {AbstractMat} a - The first vector\n * @param {AbstractMat} b - The second vector\n * @param {AbstractMat} [out] - The output matrix. If not specified, a new matrix will be created.\n * @returns {AbstractMat} a x b\n */\nfunction cross(a, b, out) {\n    if (!isVec(a) || !isVec(b)) {\n        throw new Error(\"Cross product only defined on vectors\");\n    }\n    if (a.rows() !== 3 || b.rows() !== 3) {\n        throw new Error(\"Cross product only defined in 3D\");\n    }\n\n\n    const a0 = a.at(0);\n    const a1 = a.at(1);\n    const a2 = a.at(2);\n\n    const b0 = b.at(0);\n    const b1 = b.at(1);\n    const b2 = b.at(2);\n\n    out = out !== undefined ? out : similar(a);\n\n    out.set(a1 * b2 - a2 * b1, 0);\n    out.set(a2 * b0 - a0 * b2, 1);\n    out.set(a0 * b1 - a1 * b0, 2);\n\n    return out;\n\n}\n\n/**\n * Computes a 4x4 view matrix for 3D space\n *\n * @param {AbstractMat} eye - The camera center\n * @param {AbstractMat} center - The point to look at\n * @param {AbstractMat} up - The up vector\n * @returns {Mat} The view matrix\n */\nfunction lookAt(eye, center, up) {\n    const z = sub(eye, center);\n    normalize(z, z);\n\n    const x = cross(up, z);\n    normalize(x, x);\n\n    const y = cross(z, x);\n\n    const V = setId(similar(eye, 4, 4));\n\n    const R = block(V, 0, 0, 3, 3);\n\n    insert(row(R, 0), transpose(x));\n    insert(row(R, 1), transpose(y));\n    insert(row(R, 2), transpose(z));\n\n    const T = setId(similar(eye, 4, 4));\n    insert(block(T, 0, 3, 3, 1), neg(eye));\n\n    return mult(V, T);\n\n}\n\n/**\n * Computes a 4x4 orthographic projection for 3D space\n *\n * Note: This does not include a flip in the z-direction\n *\n * @param {number} left - Left plane\n * @param {number} right - Right plane\n * @param {number} bottom - Bottom plane\n * @param {number} top - Top plane\n * @param {number} near - Near plane\n * @param {number} far - Far plane\n * @returns {Mat} The orthographic projection\n */\nfunction ortho(left, right, bottom, top, near, far) {\n    const P = setId(mat(4, 4, f32));\n\n    P.set(2.0 / (right - left), 0, 0);\n    P.set(2.0 / (top - bottom), 1, 1);\n    P.set(2.0 / (far - near), 2, 2);\n\n    const c = col(P, 3);\n    c.set(-(left + right) / (right - left), 0);\n    c.set(-(bottom + top) / (top - bottom), 1);\n    c.set(-(far + near) / (far - near), 2);\n\n    return P;\n}\n\n/**\n * Computes a 4x4 central perspective matrix.\n *\n * This implements the pinhole camera with non-linear z-scale\n *\n * @param {number} near -  Near plane\n * @param {number} far - Far plane\n * @returns {Mat} The central perspective matrix\n */\nfunction centralPerspective(near, far) {\n    const p = setId(mat(4, 4, f32));\n    insert(diag(p), vecFrom([near, near, near + far, 0], f32));\n\n    p.set(1.0, 3, 2);\n    p.set(-near * far, 2, 3);\n\n    return p;\n}\n\n/**\n * Computes a 4x4 frustum projection.\n *\n * Note: This includes a z-coordinate flip\n *\n * @param {number} left - Left plane\n * @param {number} right - Right plane\n * @param {number} bottom - Bottom plane\n * @param {number} top - Top plane\n * @param {number} near - Near plane\n * @param {number} far - Far plane\n * @returns {Mat} The frustum projection\n */\nfunction frustum(left, right, bottom, top, near, far) {\n    const P = setId(mat(4, 4, f32));\n\n    P.set(2.0 * near / (right - left), 0, 0);\n    P.set(2.0 * near / (top - bottom), 1, 1);\n    P.set(-(far + near) / (far - near), 2, 2);\n    P.set(0.0, 3, 3);\n\n\n    P.set((left + right) / (right - left), 0, 2);\n    P.set((bottom + top) / (top - bottom), 1, 2);\n\n    P.set(-1.0, 3, 2);\n\n    P.set(-2.0 * far * near / (far - near), 2, 3);\n\n\n    return P;\n}\n\n/**\n * Computes a 4x4 perspective matrix given a field of view\n *\n * Note: This includes a z-coordinate flip\n *\n * @param {number} fov - The full field of view\n * @param {number} aspect - The aspect ratio width/height\n * @param {number} near - The near plane\n * @param {number} far - The far plane\n * @returns {Mat} The perspective matrix\n */\nfunction perspective(fov, aspect, near, far) {\n\n    const xsize = near * Math.tan(fov * 0.5);\n    const ysize = xsize / aspect;\n\n    const O = ortho(-xsize, xsize, -ysize, ysize, near, far);\n\n    const rtol = setId(mat(4, 4, f32));\n    diag(rtol).set(-1.0, 2);\n\n    const persp = centralPerspective(near, far);\n\n    return mult(O, mult(persp, rtol));\n}\n\n\n/**\n * Computes a 4x4 viewport transform matrix\n *\n * @param {number} x0 - The origin x\n * @param {number} y0 - The origin y\n * @param {number} w - The width of the viewport\n * @param {number} h - The height of the viewport\n * @param {boolean} [flipy=false] - If true, the viewport will be flipped along its y-axis. This is needed if the drawing surface's coordinate system starts on the upper left\n * @returns {Mat} The viewport matrix\n */\nfunction viewport(x0, y0, w, h, flipy) {\n    const V = setId(mat(4, 4, f32));\n\n    const d = diag(V);\n    d.set(w / 2.0, 0);\n\n    if (flipy) {\n        d.set(-h / 2.0, 1);\n\n    } else {\n        d.set(h / 2.0, 1);\n\n    }\n    d.set(0.5, 2);\n\n    const c = col(V, 3);\n\n    c.set(w / 2 + x0, 0);\n    if (flipy) {\n        c.set(h / 2 - y0, 1);\n\n    } else {\n\n        c.set(h / 2 + y0, 1);\n    }\n    c.set(0.5, 2);\n\n    return V;\n}\n\n/**\n * Homogenizes a matrix storing points in its columns\n *\n * For each column, this function will divide the column by its last entry\n *\n * @param {AbstractMat} points - The input points\n * @returns {AbstractMat} points\n */\nfunction homogenize(points) {\n    colwise(points, col => {\n        scale(col, 1.0 / col.at(col.rows() - 1), col);\n    });\n    return points;\n}\n\n/**\n * Creates a new homogeneous matrix from the given one.\n * If the given matrix is NxM, the result will be (N+1)x(M+1)\n * @param mat - The base matrix\n * @param [hcoord] - The homogeneous coordinate. If not given, will be equal to 1\n * @returns {AbstractMat} A homogeneous matrix\n */\nfunction hmat(mat, hcoord) {\n\n    hcoord = optional(hcoord, 1);\n    const result = setZero(similar(mat, mat.rows() + 1, mat.cols() + 1));\n    insert(block(result, 0, 0, mat.rows(), mat.cols()), mat);\n    result.set(hcoord, mat.rows(), mat.cols());\n\n    return result;\n}\n\n/**\n * Creates a new homogeneous vector from the given one.\n * If the given vector is N-d, the result will be (N+1)-d\n * @param v - The base vector\n * @param [hcoord] - The homogeneous coordinate. If not given, will be equal to 1\n * @returns {AbstractMat} A homogeneous vector\n */\nfunction hvec(v, hcoord) {\n    if (!isVec(v)) {\n        throw new Error(\"Not a vector\");\n    }\n\n    hcoord = optional(hcoord, 1);\n    const result = setZero(similar(v, v.rows() + 1));\n    insert(subvec(result, 0, v.rows()), v);\n    result.set(hcoord, v.rows());\n\n    return result;\n}\n\n/**\n * Computes a 3x3 cross product matrix K from a vector k such that for any vector v: Kv = cross(k,v)\n *\n * @param {AbstractMat} k - A 3D vector\n * @returns {Mat} The cross prodcut matrix\n */\nfunction crossMatrix(k) {\n    if (!isVec(k) || k.rows() !== 3) {\n        throw new Error(\"k has to be a 3D vector to compute the cross product matrix\");\n    }\n    const K = setZero(similar(k, 3, 3));\n\n    K.set(-k.at(2), 0, 1);\n    K.set(k.at(2), 1, 0);\n\n    K.set(k.at(1), 0, 2);\n    K.set(-k.at(1), 2, 0);\n\n    K.set(-k.at(0), 1, 2);\n    K.set(k.at(0), 2, 1);\n\n    return K;\n}\n\n/**\n * Computes a 3x3 rotation matrix, which represents a rotaion around an axis\n *\n * @param {AbstractMat} axis - The axis to rotate around\n * @param {number} angle - The angle to rotate in rad\n * @returns {Mat} The rotation matrix\n */\nfunction axisAngle(axis, angle) {\n    axis = copy(axis);\n    normalize(axis, axis);\n    // Rodrigues' formula\n    var K = crossMatrix(axis);\n    var K2 = mult(K, K);\n\n    scale(K2, 1.0 - Math.cos(angle), K2);\n    scale(K, Math.sin(angle), K);\n\n    add(K, K2, K);\n    var R = add(K, id(3, 3), K);\n\n    return R;\n}\n\n/**\n * Computes a 4x4 3D rotation matrix, which represents a rotaion around an axis\n *\n * @param {AbstractMat} axis - The axis to rotate around\n * @param {number} angle - The angle to rotate in rad\n * @returns {Mat} The rotation matrix\n */\nfunction axisAngle4(axis, angle) {\n    const R = axisAngle(axis, angle);\n\n    const R4 = setId(similar(R, 4, 4));\n    insert(block(R4, 0, 0, 3, 3), R);\n\n    return R4;\n}\n\n\n/**\n * Converts degrees to radians with degrees*PI/180\n *\n * @param {number} deg - The angle in degrees\n * @returns {number} The angle in radians\n */\nfunction deg2rad(deg) {\n    return deg * Math.PI / 180.0;\n}\n\n/**\n * Converts radians to degrees with radians*180/PI\n *\n * @param {number} rad - The angle in radians\n * @returns {number} The angle in degrees\n */\nfunction rad2deg(rad) {\n    return rad * 180.0 / Math.PI;\n}\n\n/**\n * Creates a 4x4 translation matrix for a given translation vector\n *\n * @param {AbstractMat} t - 3D translation vector\n * @returns {Mat} A translation matrix\n */\nfunction translation(t) {\n    if (!isVec(t) || t.rows() !== 3) {\n        throw new Error(\"Translation vector needs to be 3-dimensional\");\n    }\n    const T = setId(similar(t, 4, 4));\n\n    const subcol = subvec(col(T, 3), 0, 3);\n    insert(subcol, t);\n    return T;\n}\n\n/**\n * Creates a 4x4 scaling matrix for a given scaling vector.\n * This vector contains the scaling factors for each dimension\n *\n * @param {AbstractMat} s - 3D scaling vector\n * @returns {Mat} The scaling matrix\n */\nfunction scaling(s) {\n    if (!isVec(s) || s.rows() !== 3) {\n        throw new Error(\"Scaling vector needs to be 3-dimensional\");\n    }\n    const S = similar(s, 4, 4);\n\n    const subdiag = subvec(diag(S), 0, 3);\n    insert(subdiag, s);\n    S.set(1, 3, 3);\n    return S;\n}\n\n\n/**\n * Checks whether two matrices are approximately equal\n * @param a - The first matrix\n * @param b - The second matrix\n * @param [eps] - Optional epsilon value, defaults to 1E-7\n * @returns {boolean} True, if both matrices are approximately equal, false otherwise\n */\nfunction approxEqual(a, b, eps) {\n    eps = optional(eps, 1E-7);\n\n    return norm(sub(a, b)) < eps;\n}\n\n\n/**\n * Checks whether a matrix is approximately zero\n * @param a - The  matrix\n * @param [eps] - Optional epsilon value, defaults to 1E-7\n * @returns {boolean} True, if the matrix is approximately zero, false otherwise\n */\nfunction approxZero(a, eps) {\n    eps = optional(eps, 1E-7);\n\n    return norm(a) < eps;\n}\n\n/**\n * Constructs a cartesian vector from spherical coordinates\n * @param theta - The polar angle\n * @param phi - The azimuthal angle\n * @param r - The radial distance\n * @param [type] - The output type, will use the default type if not specified\n * @returns {AbstractMat} The cartesian vector\n */\nfunction spherical(theta, phi, r, type) {\n    const st = Math.sin(theta);\n    type = optional(type, currentDefaultType);\n\n    return TypedVecFactory.new(type).from([r * st * Math.cos(phi), r * st * Math.sin(phi), r * Math.cos(theta)]);\n}\n\n/**\n * Computes the spherical representation of a cartesian vector\n * \n * @param {AbstractMat} p A cartesian vector\n * @returns {{r: Number, theta:Number, phi:Number}} The spherical representation\n */\nfunction cartesianToSpherical(p) {\n    const [x, y, z] = [p.at(0), p.at(1), p.at(2)];\n    const r = norm(p);\n    const phi = Math.atan2(y, x);\n\n    const theta = Math.acos(z / r);\n    return { r, theta, phi };\n}\n\n/**\n * Permutes the rows of a matrix\n * @param a - The input matrix\n * @param indices - An array specifying the at each index, which other row should be put there. Needs to have the same length as a has rows\n * @param [out] - The output array. Will be created, if not given\n * @returns {AbstractMat}\n */\nfunction permuteRows(a, indices, out) {\n    if (indices.length !== a.rows()) {\n        throw new Error(\"Row permutation list length is not equal to rows\");\n    }\n\n    const tmp = similar(a);\n\n    for (let i = 0; i < tmp.rows(); i++) {\n        insert(row(tmp, i), row(a, indices[i]));\n    }\n\n    if (out !== undefined) {\n        insert(out, tmp);\n    } else {\n        out = tmp;\n    }\n\n    return out;\n\n}\n\n/**\n * Returns the vector from a to b\n * @param a - The first point\n * @param b - The second point\n * @returns {AbstractMat} - The difference vector b-a\n */\nfunction fromTo(a, b) {\n    return sub(b, a);\n}\n\n/**\n * 3D x vector [1,0,0]\n */\nconst X = VecF32.from([1, 0, 0]);\n/**\n * 3D y vector [0,1,0]\n */\nconst Y = VecF32.from([0, 1, 0]);\n/**\n * 3D z vector [0,0,1]\n */\nconst Z = VecF32.from([0, 0, 1]);\n\n/**\n * Homogenous 3D x vector [1,0,0,0]\n */\nconst Xh = VecF32.from([1, 0, 0, 0]);\n/**\n * Homogenous 3D y vector [0,1,0,0]\n */\nconst Yh = VecF32.from([0, 1, 0, 0]);\n/**\n * Homogenous 3D z vector [0,0,1,0]\n */\nconst Zh = VecF32.from([0, 0, 1, 0]);\n\n\nexport {\n    f32,\n    f64,\n    i8,\n    ui8,\n    ui8c,\n    i16,\n    ui16,\n    i32,\n    ui32,\n    i64,\n    ui64,\n    any,\n    optional,\n    Mat,\n    TypedMatFactory,\n    MatF32,\n    MatF64,\n    MatAny,\n    MatI8,\n    MatUI8,\n    MatUI8Clamped,\n    MatI16,\n    MatUI16,\n    MatI32,\n    MatUI32,\n    MatI64,\n    MatUI64,\n    mat,\n    VecF32,\n    VecF64,\n    VecAny,\n    VecI8,\n    VecUI8,\n    VecUI8Clamped,\n    VecI16,\n    VecUI16,\n    VecI32,\n    VecUI32,\n    VecI64,\n    VecUI64,\n    vec,\n    Diagonal,\n    TypedDiagonalFactory,\n    DiagonalF32,\n    DiagonalF64,\n    DiagonalAny,\n    DiagonalI8,\n    DiagonalUI8,\n    DiagonalUI8Clamped,\n    DiagonalI16,\n    DiagonalUI16,\n    DiagonalI32,\n    DiagonalUI32,\n    DiagonalI64,\n    DiagonalUI64,\n    DiagonalView,\n    BlockView,\n    ColumnView,\n    RowView,\n    TransposeView,\n    PaddedView,\n    MinorView,\n    TriangularMode,\n    TriangularView,\n    RowPermutation,\n    isVec,\n    add,\n    addScalar,\n    sub,\n    mult,\n    fill,\n    insert,\n    setId,\n    setOne,\n    setZero,\n    ones,\n    zeros,\n    id,\n    rand,\n    copy,\n    similar,\n    from,\n    vecFrom,\n    diag,\n    transpose,\n    block,\n    row,\n    col,\n    subvec,\n    fromTo,\n    map,\n    convert,\n    reduce,\n    sum,\n    neg,\n    abs,\n    cwiseMult, cwiseDiv,\n    cwiseMin, cwiseMax,\n    dot,\n    scale,\n    absSum,\n    sqrSum,\n    trace,\n    max,\n    min,\n    argmax,\n    argmin,\n    norm,\n    norm2,\n    norm2Squared,\n    norm1,\n    normInf,\n    normFrobenius,\n    normalize,\n    toArray,\n    colreduce,\n    rowreduce,\n    rowwise,\n    colwise,\n    det,\n    inv,\n    rank,\n    cond,\n    computePLUD,\n    computeSVD,\n    computeUBVD,\n    unpackUBV,\n    solve,\n    solvePLU,\n    solveSVD,\n    solveLowerTriagonal,\n    solveUpperTriagonal,\n    prettyprint,\n    toString,\n    toJSON,\n    getDefaultType,\n    setDefaultType,\n    rad2deg,\n    deg2rad,\n    cross,\n    lookAt,\n    ortho,\n    frustum,\n    perspective,\n    centralPerspective,\n    viewport,\n    homogenize,\n    hvec, hmat,\n    crossMatrix,\n    axisAngle,\n    axisAngle4,\n    translation,\n    scaling,\n    approxEqual,\n    approxZero,\n    spherical,\n    cartesianToSpherical,\n    permuteRows,\n    X, Y, Z,\n    Xh, Yh, Zh\n};","/**\r\n * @function\r\n */\r\nvar genID = (function () {\r\n    var i = 0;\r\n    return function () {\r\n        return i++;\r\n    };\r\n})();\r\n\r\n\r\nfunction formatNumber(v, precision = 3) {\r\n    return v.toPrecision(10).replace(/(?:\\.0+|(\\.\\d+?)0+)$/, \"$1\");\r\n}\r\n\r\nfunction Observable(name) {\r\n    this._name = name;\r\n    this.observers = [];\r\n}\r\n\r\nObservable.prototype.name = function (name) {\r\n    if (name === undefined)\r\n        return this._name;\r\n\r\n    this._name = name;\r\n    return this;\r\n};\r\n\r\nObservable.create = function () {\r\n    return new Observable(...arguments);\r\n};\r\n\r\n\r\nObservable.new = Observable.create;\r\n\r\n\r\nObservable.prototype.observe = function (info) {\r\n\r\n    var object = info.object === undefined ? null : info.object;\r\n    var ctx = info.ctx === undefined ? info.object : info.ctx;\r\n    var func = info.func === undefined ? function () { } : info.func;\r\n    var topic = info.topic === undefined ? null : info.topic;\r\n    this.observers.push({\r\n        object: object,\r\n        func: func,\r\n        ctx: ctx,\r\n        topic: topic,\r\n        observableName: this.name()\r\n    });\r\n\r\n    return this;\r\n};\r\n\r\nObservable.prototype.remove = function (object) {\r\n    for (var i = 0; i < this.observers.length; i++) {\r\n        if (object === this.observers[i].object) {\r\n            this.observers.splice(i, 1);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\nObservable.prototype.notify = function () {\r\n    for (var i in this.observers) {\r\n        var o = this.observers[i];\r\n        var info = arguments.length > 0 ? arguments[0] : {};\r\n\r\n        if (o.topic === null || o.topic === info.type) {\r\n            o.func.call(o.ctx, o, ...arguments);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\nfunction Screen() {\r\n    this._canvas = null;\r\n    this._ctx = null;\r\n    this._w = 0;\r\n    this._h = 0;\r\n\r\n    this._screenOrigin = [0, 0];\r\n    this._flip = true;\r\n\r\n\r\n    this.observable = Observable.create(\"Screen\");\r\n}\r\n\r\n\r\nScreen.create = function () {\r\n    return new Screen(...arguments);\r\n};\r\nScreen.new = Screen.create;\r\n\r\nScreen.prototype.screenOrigin = function (o) {\r\n    if (o === undefined)\r\n        return this._screenOrigin;\r\n\r\n    this._screenOrigin = o.concat();\r\n\r\n    this.updateValues();\r\n    return this;\r\n};\r\n\r\nScreen.prototype.pixelWidth = function () {\r\n    return 1 / this.w();\r\n};\r\n\r\nScreen.prototype.updateValues = function () {\r\n    this._v = this._u / this._w * this._h;\r\n    var orig = this.screenOrigin();\r\n    if (this._flip) {\r\n        this._ctx.setTransform(1, 0, 0, -1, orig[0], this.h() - orig[1]);\r\n    } else {\r\n        this._ctx.setTransform(1, 0, 0, 1, orig[0], orig[1]);\r\n    }\r\n    this.observable.notify({\r\n        type: \"update\",\r\n    });\r\n};\r\nScreen.prototype.aspect = function () {\r\n    return this._w / this._h;\r\n};\r\n\r\nScreen.prototype.canvas = function (c) {\r\n    if (typeof c === \"undefined\")\r\n        return this._canvas;\r\n\r\n    this._canvas = c;\r\n    this._w = this._canvas.width;\r\n    this._h = this._canvas.height;\r\n    this._ctx = c.getContext(\"2d\");\r\n\r\n    this.updateValues();\r\n\r\n    return this;\r\n};\r\n\r\nScreen.prototype.clear = function () {\r\n    var ctx = this.ctx();\r\n\r\n    ctx.save();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.clearRect(0, 0, this.w(), this.h());\r\n\r\n\r\n    ctx.restore();\r\n};\r\n\r\nScreen.prototype.ctx = function () {\r\n    return this._ctx;\r\n};\r\n\r\nScreen.prototype.flip = function (f) {\r\n    if (f === undefined)\r\n        return this._flip;\r\n    this._flip = f;\r\n    this.updateValues();\r\n};\r\n\r\nScreen.prototype.w = function (w) {\r\n\r\n    if (w === undefined)\r\n        return this._w;\r\n\r\n    this._canvas.width = w;\r\n    this._w = w;\r\n\r\n    this.updateValues();\r\n    return this;\r\n};\r\n\r\nScreen.prototype.h = function (h) {\r\n    if (h === undefined)\r\n        return this._h;\r\n\r\n    this._canvas.height = h;\r\n    this._h = h;\r\n    this.updateValues();\r\n    return this;\r\n};\r\n\r\n\r\n\r\nScreen.prototype.toScreen = function (v) {\r\n\r\n    const w = this.w();\r\n    const h = this.h();\r\n    return [v[0] * w, v[1] * h];\r\n};\r\n\r\nScreen.prototype.toImage = function (v) {\r\n\r\n    const w = this.w();\r\n    const h = this.h();\r\n    return [v[0] / w, v[1] / h];\r\n};\r\n\r\nScreen.prototype.save = function () {\r\n    this.ctx()\r\n        .save();\r\n};\r\n\r\nScreen.prototype.restore = function () {\r\n    this.ctx()\r\n        .restore();\r\n};\r\n\r\nScreen.prototype.setColor = function (style, color) {\r\n    this.ctx()[style] = color.toString();\r\n};\r\n\r\n\r\n/**\r\n * Use for additional data\r\n * @class\r\n * @param {object} [entries] A map of entries\r\n */\r\nfunction Data(entries) {\r\n    /**\r\n     * @member\r\n     */\r\n    this.entries = entries !== undefined ? entries : {};\r\n}\r\n\r\n/**\r\n * Creates a new Data instance\r\n * @function\r\n * @return {Data}\r\n * @param {object} [entries] A map of entries\r\n */\r\nData.new = function (entries) {\r\n    return new Data(entries);\r\n};\r\n/**\r\n * Retrieves data for a given key\r\n * @function\r\n * @param key\r\n * @param defaultValue A default value in case the key is not contained\r\n */\r\nData.prototype.get = function (key, defaultValue) {\r\n    if (!(key in this.entries)) {\r\n        return defaultValue;\r\n    }\r\n    return this.entries[key];\r\n};\r\n\r\n\r\nData.prototype.toJSON = function () {\r\n    return this.entries;\r\n};\r\n\r\n/**\r\n * Sets the value for a key\r\n * @function\r\n * @param key\r\n * @param val\r\n * @return {Data} this\r\n *\r\n */\r\nData.prototype.set = function (key, val) {\r\n    this.entries[key] = val;\r\n    return this;\r\n};\r\n\r\nData.prototype.remove = function (key) {\r\n    delete this.entries[key];\r\n};\r\n/**\r\n * Will copy the object and, if the object allows it, copy the values\r\n * @function\r\n * @return {Data}\r\n */\r\nData.prototype.copy = function () {\r\n    var e = this.entries;\r\n    var keys = Object.keys(e);\r\n    var dn = {};\r\n    for (let i = 0; i < keys.length; i++) {\r\n        var key = keys[i];\r\n        var val = e[key];\r\n        var valCp = val.copy !== undefined ? val.copy() : val;\r\n        dn[key] = valCp;\r\n    }\r\n\r\n    return Data.new(dn);\r\n};\r\n/**\r\n * Will copy the object and, if the object allows it, copy the values\r\n * Alias for copy function\r\n * @function\r\n * @alias Data.prototype.copy\r\n * @return {Data}\r\n */\r\nData.prototype.cp = Data.prototype.copy;\r\n\r\nfunction copy(o) {\r\n    return Object.assign({}, o);\r\n}\r\n\r\nexport {\r\n    Data,\r\n    Screen,\r\n    Observable,\r\n    genID,\r\n    copy,\r\n    formatNumber\r\n};\r\n","import React, { useMemo, useRef, useState, useEffect } from 'react';\r\nimport * as mat from './lib/jsmatrix';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { formatNumber } from './utils.js'\r\n\r\nconst PI2 = Math.PI * 2.0;\r\nfunction normalizeAngle(angle) {\r\n    let result = angle % PI2;\r\n    // modulo takes sign of dividend => normalize\r\n\r\n    if (result < 0) {\r\n        result += PI2;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction AngleSlider({ angle, angleName = \"alpha\", handleChange, precision = 2, clockwise = true,\r\n    angleMin = 0, angleMax = 360 }) {\r\n\r\n\r\n    angle = normalizeAngle(angle);\r\n\r\n\r\n    let angleDeg = mat.rad2deg(angle);\r\n\r\n    // clamp\r\n    angleDeg = Math.max(angleMin, Math.min(angleMax, angleDeg));\r\n    const ad = angleMax - angleMin;\r\n\r\n    const convDeg2Perc = a => (a - angleMin) / ad * 100;\r\n    const convPerc2Deg = a => angleMin + a / 100 * ad;\r\n\r\n    const sliderAngle = convDeg2Perc(angleDeg);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {angleName} : {formatNumber(angleDeg, precision)}[deg]\r\n      </div>\r\n            <input type=\"range\" min=\"0\" max=\"100\" value={clockwise ? 100 - sliderAngle : sliderAngle} className=\"angleSlider\"\r\n                onChange={e => handleChange(mat.deg2rad(convPerc2Deg(clockwise ? 100 - Number(e.target.value) : Number(e.target.value))))}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CheckBox({ checked, labelText, handleChange }) {\r\n\r\n    const id = useMemo(() => uuidv4(), []);\r\n\r\n    return <div>\r\n        <input\r\n            name={id} type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={e =>\r\n                handleChange(e.target.checked)} />\r\n        <label htmlFor={id}> {labelText}</label>\r\n    </div>;\r\n}\r\n\r\nfunction ValueSlider({ value, valueName, handleChange, min = 0, max = 100, step = 1, precision = 2 }) {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {valueName} : {formatNumber(value, precision)}\r\n            </div>\r\n            <input type=\"range\" min={min} max={max} step={step} value={value} className=\"valueSlider\"\r\n                onChange={e => { handleChange(Number(e.target.value)) }}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction NumberInput({ value, valueName, handleChange, precision = 2,\r\n    ...otherProps }) {\r\n\r\n    const [vs, setVs] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setVs(() => value);\r\n    }, [value]);\r\n    // const vs = value.toFixed(precision);\r\n    return (\r\n        <div>\r\n            {valueName}\r\n            <NumberFormat value={vs} allowEmptyFormatting\r\n                {...otherProps}\r\n                onValueChange={e => {\r\n                    const val = e.floatValue;\r\n                    setVs(val);\r\n                    if (val !== value) {\r\n                        handleChange(val);\r\n                    }\r\n                }} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nfunction NumberInputTimeout({ value, valueName, handleChange, timeout = 1000, precision = 2, ...otherProps }) {\r\n\r\n    // const vs = value.toFixed(precision);\r\n    const vs = value;\r\n    const timeRef = useRef(null);\r\n\r\n    const valChanged = e => {\r\n        if (timeRef.current !== null) {\r\n            clearTimeout(timeRef.current);\r\n        }\r\n\r\n        timeRef.current = setTimeout(() => {\r\n            handleChange(e);\r\n        }, timeout);\r\n    };\r\n    return (\r\n        <div>\r\n            {valueName}\r\n            <NumberFormat value={vs} allowEmptyFormatting\r\n                onValueChange={e => valChanged(e.floatValue)}\r\n                {...otherProps}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport {\r\n    AngleSlider,\r\n    CheckBox,\r\n    NumberInput,\r\n    ValueSlider,\r\n    NumberInputTimeout\r\n}","import * as mat from './lib/jsmatrix';\r\nimport { MatF32, VecF32 } from './lib/jsmatrix';\r\n\r\nfunction distanceSquaredPointLineSegment(p, a, b) {\r\n    const dir = mat.fromTo(a, b);\r\n    const pb = mat.fromTo(p, b);\r\n\r\n    let t = mat.dot(dir, pb);\r\n    // closest point is b\r\n    if (t <= 0) {\r\n        return mat.norm2Squared(pb);\r\n    }\r\n\r\n\r\n    const pa = mat.fromTo(p, a);\r\n\r\n    t = mat.dot(dir, pa);\r\n    // closest point is a\r\n    if (t >= 0) {\r\n        return mat.norm2Squared(pa);\r\n    }\r\n\r\n    const d2 = mat.dot(dir, dir);\r\n\r\n    const perpSegment = mat.sub(pa, mat.scale(dir, mat.dot(pa, dir) / d2));\r\n\r\n    return mat.norm2Squared(perpSegment);\r\n}\r\n\r\nfunction transformPoints(p, M) {\r\n    p = mat.PaddedView.new(p, 4, p.cols(), 1, 1);\r\n    p = mat.mult(M, p);\r\n    p = mat.homogenize(p);\r\n\r\n    return MatF32.copy(mat.block(p, 0, 0, 3, p.cols()));\r\n}\r\n\r\n/**\r\n * \r\n * @param {Mat} P \r\n * @param {*} normalize \r\n */\r\nfunction computeFrustumPlanes(P, normalize) {\r\n    const result = [];\r\n    // Left clipping plane\r\n    result.push(VecF32.from([P.at(3, 0) + P.at(0, 0),\r\n    P.at(3, 1) + P.at(0, 1), P.at(3, 2) + P.at(0, 2), P.at(3, 3) + P.at(0, 3)]));\r\n\r\n    // Right clipping plane\r\n    result.push(VecF32.from([P.at(3, 0) - P.at(0, 0),\r\n    P.at(3, 1) - P.at(0, 1),\r\n    P.at(3, 2) - P.at(0, 2),\r\n    P.at(3, 3) - P.at(0, 3)]));\r\n\r\n    // Top clipping plane\r\n    result.push(VecF32.from([P.at(3, 0) - P.at(1, 0),\r\n    P.at(3, 1) - P.at(1, 1),\r\n    P.at(3, 2) - P.at(1, 2),\r\n    P.at(3, 3) - P.at(1, 3)]));\r\n\r\n    // Bottom clipping plane\r\n    result.push(VecF32.from([P.at(3, 0) + P.at(1, 0),\r\n    P.at(3, 1) + P.at(1, 1),\r\n    P.at(3, 2) + P.at(1, 2),\r\n    P.at(3, 3) + P.at(1, 3)]));\r\n\r\n    // Near clipping plane\r\n    result.push(VecF32.from([P.at(3, 0) + P.at(2, 0),\r\n    P.at(3, 1) + P.at(2, 1),\r\n    P.at(3, 2) + P.at(2, 2),\r\n    P.at(3, 3) + P.at(2, 3)]));\r\n\r\n    // Far clipping plane\r\n    result.push(VecF32.from([P.at(3, 0) - P.at(2, 0),\r\n    P.at(3, 1) - P.at(2, 1),\r\n    P.at(3, 2) - P.at(2, 2),\r\n    P.at(3, 3) - P.at(2, 3)]));\r\n\r\n    if (normalize) {\r\n        for (let i = 0; i < result.length; i++) {\r\n            const mag = mat.norm(mat.subvec(result[i], 0, 3));\r\n            mat.scale(result[i], 1.0 / mag);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction pointInBounds2d(p, bmin, bmax) {\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n        let pi = p.at(i);\r\n        if (pi < bmin.at(i) || pi > bmax.at(i)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n\r\nfunction computeBounds(points) {\r\n    const bmin = mat.rowreduce(points, row => mat.min(row));\r\n    const bmax = mat.rowreduce(points, row => mat.max(row));\r\n\r\n\r\n    return [bmin, bmax]\r\n}\r\n\r\nfunction intersectLinePlane(a, b, plane) {\r\n    const l = mat.sub(b, a);\r\n    const d = -mat.dot(plane, mat.hvec(a, 1)) / mat.dot(mat.hvec(l, 0), plane);\r\n\r\n    return [mat.add(a, mat.scale(l, d)), d];\r\n}\r\n\r\nfunction planeFromPointNormal(p, n) {\r\n    const result = VecF32.uninitialized(4);\r\n    mat.insert(mat.subvec(result, 0, 3), n);\r\n    result.set(-mat.dot(n, p), 3);\r\n    return result;\r\n}\r\n\r\n// From rosetta code for now: https://rosettacode.org/wiki/Ramer-Douglas-Peucker_line_simplification#JavaScript\r\n/**\r\n * @param {!Array<pointType>} l\r\n * @param {number} eps\r\n */\r\nfunction simplifyLine(l, eps) {\r\n    const last = l.length - 1;\r\n    const p1 = l[0];\r\n    const p2 = l[last];\r\n    const x21 = p2.at(0) - p1.at(0);\r\n    const y21 = p2.at(1) - p1.at(1);\r\n\r\n    const [dMax, x] = l.slice(1, last)\r\n        .map(p => Math.abs(y21 * p.at(0) - x21 * p.at(1) + p2.at(0) * p1.at(1) - p2.at(1) * p1.at(0)))\r\n        .reduce((p, c, i) => {\r\n            const v = Math.max(p[0], c);\r\n            return [v, v === p[0] ? p[1] : i + 1];\r\n        }, [-1, 0]);\r\n\r\n    if (dMax > eps) {\r\n        return [...simplifyLine(l.slice(0, x + 1), eps), ...simplifyLine(l.slice(x), eps).slice(1)];\r\n    }\r\n    return [l[0], l[last]]\r\n};\r\nfunction transformPlane(plane, M) {\r\n    return mat.mult(mat.transpose(mat.inv(M)), plane);\r\n}\r\n\r\nfunction pointSide(a, plane) {\r\n    return Math.sign(mat.dot(mat.hvec(a, 1), plane));\r\n}\r\n\r\nfunction pointInside(a, plane) {\r\n    return pointSide(a, plane) >= 0;\r\n}\r\n\r\nfunction mat2points(m) {\r\n    let drawpoints = [];\r\n    mat.colwise(m, (c) => {\r\n        drawpoints.push([c.at(0), c.at(1)]);\r\n    });\r\n\r\n    return drawpoints;\r\n}\r\n\r\nfunction isClockwise(parray) {\r\n    let sum = 0.0;\r\n    // from computational geometry in  c\r\n    const n = parray.length;\r\n    for (let i = 0; i < n; i++) {\r\n        const a = parray[i];\r\n        const b = parray[(i + 1) % n];\r\n        sum += (a.at(0) + b.at(0)) * (b.at(1) - a.at(1));\r\n    }\r\n\r\n    return sum < 0.0;\r\n}\r\n\r\nfunction isLeft(P0, P1, P2) {\r\n    return ((P1.at(0) - P0.at(0)) * (P2.at(1) - P0.at(1))\r\n        - (P2.at(0) - P0.at(0)) * (P1.at(1) - P0.at(1)));\r\n}\r\n\r\nfunction normal2D(v) {\r\n    return VecF32.from([-v.at(1), v.at(0), 0]);\r\n}\r\nfunction addz(p, z = 0) {\r\n    return VecF32.from([p.at(0), p.at(1), z]);\r\n}\r\n\r\nfunction closestVertex(objects, r2, pWorld) {\r\n\r\n    let closest = -1;\r\n    let closestRadius = r2;\r\n    for (let i = 0; i < objects.length; i++) {\r\n        const pi = objects[i];\r\n        const di2 = mat.norm2Squared(mat.sub(pi, pWorld));\r\n        if (di2 < closestRadius) {\r\n            closest = i;\r\n            closestRadius = di2;\r\n        }\r\n    }\r\n\r\n    return closest;\r\n}\r\n\r\n\r\nfunction findIntersectSet(objects, mousePosWorld, tolerance) {\r\n    const intersectSet = [];\r\n    for (let i = 0; i < objects.length; i++) {\r\n        const ci = objects[i];\r\n        const dr = ci.drawableWorld;\r\n\r\n        if (dr.isInsideXY(mousePosWorld, tolerance)) {\r\n            intersectSet.push({ obj: ci, index: i });\r\n        }\r\n    }\r\n\r\n    intersectSet.sort((a, b) => {\r\n        const obja = a.obj;\r\n        const objb = b.obj;\r\n\r\n        if (obja.options.z === objb.options.z) {\r\n            return objb.id - obja.id;\r\n        }\r\n\r\n        return objb.z - obja.z;\r\n    });\r\n    return intersectSet;\r\n}\r\n\r\nfunction insidePoly(p, points) {\r\n    const ci = i => MatF32.copy(mat.subvec(mat.col(points, i), 0, 2));\r\n\r\n    const y = p => p.at(1);\r\n\r\n    let wn = 0;    // the  winding number counter\r\n\r\n    // loop through all edges of the polygon\r\n    // edge from V[i] to  V[i+1]\r\n    for (let i = 0; i < points.cols(); i++) {\r\n        const vi = ci(i);\r\n        const vip = ci((i + 1) % points.cols());\r\n\r\n        if (y(vi) <= y(p)) {          // start y <= P.y\r\n            if (y(vip) > y(p))      // an upward crossing\r\n                if (isLeft(vi, vip, p) > 0)  // P left of  edge\r\n                    ++wn;            // have  a valid up intersect\r\n        }\r\n        else {                        // start y > P.y (no test needed)\r\n            if (y(vip) <= y(p))     // a downward crossing\r\n                if (isLeft(vi, vip, p) < 0)  // P right of  edge\r\n                    --wn;            // have  a valid down intersect\r\n        }\r\n    }\r\n    return wn !== 0;\r\n}\r\n\r\nexport {\r\n    distanceSquaredPointLineSegment,\r\n    transformPoints,\r\n    computeFrustumPlanes,\r\n    pointInBounds2d,\r\n    computeBounds,\r\n    intersectLinePlane,\r\n    planeFromPointNormal,\r\n    simplifyLine,\r\n    transformPlane,\r\n    pointSide,\r\n    pointInside,\r\n    mat2points,\r\n    isClockwise,\r\n    isLeft,\r\n    normal2D,\r\n    addz,\r\n    closestVertex,\r\n    findIntersectSet,\r\n    insidePoly\r\n};","import React, { useState } from 'react';\r\n\r\n\r\nfunction HelpWindow(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    // position: absolute;\r\n    // top: 0;\r\n    // bottom: 0;\r\n    // left: 0;\r\n    // right: 0;\r\n    // margin: auto;\r\n    // width: 100px;\r\n    // height: 100px;\r\n    // background - color: blue;\r\n    const window = (\r\n        <div>\r\n            <div className=\"fullscreen transparent\" onClick={\r\n                () => setShow(() => false)\r\n            } />\r\n            <div className=\"help-window\">\r\n                <div>\r\n                    <h3>\r\n                        What you can see:\r\n                    </h3>\r\n                    <p>\r\n                        On the left side is a 3D drawing of your scene. On the right is a top down view.\r\n                        That is also where you change and create elements.\r\n                     </p>\r\n\r\n                    <h3>\r\n                        General controls:\r\n                    </h3>\r\n                    <p>\r\n                        You can move around the 3D scene by dragging the mouse on it to change your viewing direction.\r\n                        WASD is used for movement in your viewplane. 'q' and 'e' lets you move up and down.\r\n                        Alternatively, you can use the Camera tool to enter specific values.\r\n                    </p>\r\n                    <p>\r\n                        In the edit view, you can drag the screen via clicking and dragging the middle mouse button.\r\n                        If you move your mouse to the borders of the view, it will also move in that direction. \r\n                        Helpful, if you want to create objects bigger than the current viewport.\r\n                        You can zoom with the Viewport settings on the right and also with your mousewheel.\r\n                    </p>\r\n                    <h3>\r\n                        Select Tool:\r\n                    </h3>\r\n                    <p>\r\n                        Allows you to select objects. Their properties are displayed below the view.\r\n                        If no object is selected, you can also delete them all.\r\n                    </p>\r\n                    <p>\r\n                        You can set various properties and delete the object there. If there are multiple overlapping objects where you click,\r\n                        the topmost or newest will be selected first.\r\n                        To select the other objects, keep clicking and it will cycle through them.\r\n                        You can deselect objects by clicking on empty space.\r\n                    </p>\r\n                    <p>\r\n                        When an object is selected, a small circle appears at its center.\r\n                        You can move the object around by dragging  that circle.\r\n            \t    </p>\r\n                    <h3>\r\n                        Move Viewport Tool:\r\n                    </h3>\r\n                    <p>\r\n                        Allows you to move the view inside of the edit window. Drag on empty space to move around.\r\n                        The current camera position is displayed as a yellow circle.\r\n                    </p>\r\n                    <h3>\r\n                        Camera Tool:\r\n                    </h3>\r\n                    <p>\r\n                        Allows you to see and change the position and orientation of the camera. You can also reset the values.\r\n                        You can set the field of view.\r\n                    </p>\r\n                    <h3>\r\n                        Points Tool\r\n                    </h3>\r\n                    <p>\r\n                        Allows you to create objects by placing the outer points on the edit window by clicking.\r\n                        With activated snapping, the points will always lie on the displayed grid.\r\n                        You can see the length of each line displayed in the middle of that line.\r\n                        You can close an object by clicking either on the first or last point.\r\n                        If you click on the first point, a polygon is created.\r\n                        Clicking on the last will create a line strip.\r\n                     </p>\r\n                    <h3>\r\n                        Rectangle Tool\r\n                    </h3>\r\n                    <p>\r\n                        Allows you to create rectangles.\r\n                        With activated snapping, the points will always lie on the displayed grid.\r\n                        A rectangle is created by pressing the left mouse button and then moving the mouse to the desired location.\r\n                        Letting go of the button will create the rectangle. No rectangle will be created, if any side has a length of zero.\r\n                    </p>\r\n                    <h3>\r\n                        Freehand Tool\r\n                    </h3>\r\n                    <p>\r\n                        Allows you to freely draw a polygon.\r\n                        The result will be simplified a bit to avoid unnessecarry clutter.\r\n                    </p>\r\n                    <h3>\r\n                        Load/Save Tool\r\n                    </h3>\r\n                    <p>\r\n                        Here you can load and save your current scene.\r\n                        This will save all objects and their properties as well as your current camera position and orientation\r\n                    </p>\r\n                </div>\r\n                <button onClick={() => setShow(false)}>Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setShow(true)}>Show Help</button>\r\n            {show ? window : null}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport {\r\n    HelpWindow\r\n}","import { useRef, useEffect } from 'react';\r\n\r\n\r\nfunction useEventHandler({ element, eventName, handleEvent }) {\r\n    const handlerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        handlerRef.current = handleEvent;\r\n    }, [handleEvent]);\r\n\r\n    useEffect(() => {\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const listener = e => handlerRef.current(e);\r\n        element.addEventListener(eventName, listener);\r\n\r\n        return () => {\r\n            element.removeEventListener(eventName, listener);\r\n\r\n        };\r\n    }, [element, eventName]);\r\n}\r\n\r\nexport {\r\n    useEventHandler\r\n}","/**\r\n * RGBA colors\r\n * @class\r\n * @param {number} [r=1]\r\n * @param {number} [g=1]\r\n * @param {number} [b=1]\r\n * @param {number} [a=1]\r\n */\r\nfunction RGBA(r, g, b, a) {\r\n    this._r = r !== undefined ? r : 1;\r\n    this._g = g !== undefined ? g : 1;\r\n    this._b = b !== undefined ? b : 1;\r\n    this._a = a !== undefined ? a : 1;\r\n}\r\n/**\r\n * Creates a new RGBA instance\r\n * @function\r\n * @param {number} [r=1]\r\n * @param {number} [g=1]\r\n * @param {number} [b=1]\r\n * @param {number} [a=1]\r\n * @return {RGBA}\r\n */\r\nRGBA.new = function (r, g, b, a) {\r\n    return new RGBA(r, g, b, a);\r\n};\r\n\r\n/**\r\n * Creates a copy\r\n * @function\r\n * @return {RGBA}\r\n */\r\nRGBA.prototype.copy = function () {\r\n    return RGBA.new(this._r, this._g, this._b, this._a);\r\n};\r\n/**\r\n * Creates a copy\r\n * @function\r\n * @alias RGBA.prototype.copy\r\n * @return {RGBA}\r\n */\r\nRGBA.prototype.cp = RGBA.prototype.copy;\r\n\r\n/**\r\n * A string representation of the color. Compatible with canvas styles\r\n * @return {string}\r\n */\r\nRGBA.prototype.toString = function (omitAlpha) {\r\n    var s = '';\r\n    if (!omitAlpha) {\r\n        s += 'rgba(';\r\n    } else {\r\n        s += 'rgb(';\r\n    }\r\n\r\n    var r = Math.floor(Math.max(0, Math.min(1, this._r)) * 255);\r\n    var g = Math.floor(Math.max(0, Math.min(1, this._g)) * 255);\r\n    var b = Math.floor(Math.max(0, Math.min(1, this._b)) * 255);\r\n    var a = Math.max(0, Math.min(1, this._a));\r\n\r\n    s += r + ',';\r\n    s += g + ',';\r\n    s += b;\r\n    if (!omitAlpha) {\r\n        s += ',' + a;\r\n    }\r\n\r\n    s += ')';\r\n    return s;\r\n};\r\n\r\n/**\r\n * Creates a svg representation for this color\r\n * @param {string} [prefix='fill'] Should be either fill or stroke\r\n * @return {string}\r\n */\r\nRGBA.prototype.toSVG = function (prefix) {\r\n    var style = '';\r\n    style += prefix + ':' + this.toString(true) + '; ';\r\n    style += prefix + '-opacity:' + this.a() + ';';\r\n    return style;\r\n};\r\n\r\n/**\r\n * Sets or gets the red component\r\n * @function\r\n * @param {number} [val]\r\n * @return {number | RGBA} Returns the value of the red channel, if val is not\r\n * given, this otherwise\r\n */\r\nRGBA.prototype.r = function (val) {\r\n    if (val === undefined) {\r\n        return this._r;\r\n    }\r\n\r\n    this._r = val;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets or gets the green component\r\n * @function\r\n * @param {number} [val]\r\n * @return {number | RGBA} Returns the value of the green channel, if val is not\r\n * given, this otherwise\r\n */\r\nRGBA.prototype.g = function (val) {\r\n    if (val === undefined) {\r\n        return this._g;\r\n    }\r\n\r\n    this._g = val;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets or gets the blue component\r\n * @function\r\n * @param {number} [val]\r\n * @return {number | RGBA} Returns the value of the blue channel, if val is not\r\n * given, this otherwise\r\n */\r\nRGBA.prototype.b = function (val) {\r\n    if (val === undefined) {\r\n        return this._b;\r\n    }\r\n\r\n    this._b = val;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets or gets the alpha component\r\n * @function\r\n * @param {number} [val]\r\n * @return {number | RGBA} Returns the value of the alpha channel, if val is not\r\n * given, this otherwise\r\n */\r\nRGBA.prototype.a = function (val) {\r\n    if (val === undefined) {\r\n        return this._a;\r\n    }\r\n\r\n    this._a = val;\r\n    return this;\r\n};\r\n\r\nfunction RGBtoHSV({ r, g, b }) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n        default: break;\r\n    }\r\n\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        v: v\r\n    };\r\n}\r\n\r\nfunction HSVtoRGB({ h, s, v }) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0:\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        case 1: r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        case 2: r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        case 3: r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        case 4: r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        case 5: r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        default: break;\r\n    }\r\n    return {\r\n        r, g, b\r\n    };\r\n}\r\n\r\nRGBA.prototype.toJSON = function () {\r\n    return {\r\n        r: this._r,\r\n        g: this._g,\r\n        b: this._b,\r\n        a: this._a\r\n    };\r\n};\r\n\r\nRGBA.prototype.changeValue = function (percentage = 0.0) {\r\n    let { h, s, v } = RGBtoHSV({ r: this._r, g: this._g, b: this._b });\r\n\r\n    v *= (1.0 + percentage);\r\n    v = Math.min(1.0, Math.max(0.0, v));\r\n    const { r, g, b } = HSVtoRGB({ h, s, v });\r\n\r\n    return RGBA.new(r, g, b, this._a);\r\n};\r\n\r\n/**\r\n * Red\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.RED = RGBA.new(1, 0, 0, 1);\r\n/**\r\n * Lime\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.LIME = RGBA.new(0, 1, 0, 1);\r\n/**\r\n * Blue\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.BLUE = RGBA.new(0, 0, 1, 1);\r\n/**\r\n * White\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.WHITE = RGBA.new(1, 1, 1, 1);\r\n/**\r\n * Black\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.BLACK = RGBA.new(0, 0, 0, 1);\r\n/**\r\n * Yellow\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.YELLOW = RGBA.new(1, 1, 0, 1);\r\n/**\r\n * Fuchsia\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.FUCHSIA = RGBA.new(1, 0, 1, 1);\r\n/**\r\n * Aqua\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.AQUA = RGBA.new(0, 1, 1, 1);\r\n/**\r\n * Green\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.GREEN = RGBA.new(0, 0.5, 0, 1);\r\n/**\r\n * Purple\r\n * @constant\r\n * @default\r\n */\r\nRGBA.PURPLE = RGBA.new(0.5, 0, 0.5, 1);\r\n/**\r\n * Orange\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.ORANGE = RGBA.new(1, 0.647, 0, 1);\r\n/**\r\n * Salmon\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.SALMON = RGBA.new(0.98, 0.5, 0.447, 1);\r\n/**\r\n * Teal\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.TEAL = RGBA.new(0, 0.5, 0.5, 1);\r\n\r\n/**\r\n * Gray\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.GRAY = RGBA.new(0.5, 0.5, 0.5, 1);\r\n/**\r\n * Grey\r\n * @constant\r\n * @type {RGBA}\r\n * @alias RGBA.GRAY\r\n * @default\r\n */\r\nRGBA.GREY = RGBA.GRAY;\r\n/**\r\n * Violet\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.VIOLET = RGBA.new(0.93, 0.51, 0.93, 1);\r\n\r\n/**\r\n * Amber\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.AMBER = RGBA.new(1, 0.749, 0, 1);\r\n\r\n\r\n/**\r\n * Android green\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.ANDROID_GREEN = RGBA.new(0.643, 0.776, 0.223, 1);\r\n\r\n/**\r\n * Ball blue\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.BALL_BLUE = RGBA.new(0.129, 0.670, 0.803, 1);\r\n\r\n/**\r\n * Bittersweet\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.BITTERSWEET = RGBA.new(0.996, 0.435, 0.368, 1);\r\n\r\n/**\r\n * Brilliant rose\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.BRILLIANT_ROSE = RGBA.new(1, 0.333, 0.639, 1);\r\n\r\n\r\n/**\r\n * Celadon\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.CELADON = RGBA.new(0.674, 0.882, 0.686, 1);\r\n\r\n/**\r\n * Ceil\r\n * @constant\r\n * @type {RGBA}\r\n * @default\r\n */\r\nRGBA.CEIL = RGBA.new(0.572, 0.631, 0.811, 1);\r\n\r\n/**\r\n * List containing default colors\r\n * @type {Array<RGBA>}\r\n */\r\nRGBA.DEFAULT_COLORS = [\r\n    RGBA.RED, RGBA.LIME, RGBA.BLUE, RGBA.WHITE,\r\n    RGBA.BLACK, RGBA.YELLOW, RGBA.FUCHSIA, RGBA.AQUA, RGBA.GREEN, RGBA.PURPLE,\r\n    RGBA.ORANGE, RGBA.SALMON, RGBA.TEAL, RGBA.GRAY, RGBA.VIOLET,\r\n    RGBA.AMBER, RGBA.ANDROID_GREEN, RGBA.BALL_BLUE, RGBA.BITTERSWEET,\r\n    RGBA.BRILLIANT_ROSE, RGBA.CELADON, RGBA.CEIL\r\n];\r\n\r\nRGBA.getIndexColor = function (i) {\r\n    return RGBA.DEFAULT_COLORS[i % RGBA.DEFAULT_COLORS.length].cp();\r\n};\r\n\r\n\r\nexport {\r\n    RGBA\r\n};\r\n","/**\r\n * Class for a dash array\r\n * @class\r\n * @param {Array | object*} dashes The dash array as per svg-specification\r\n */\r\nfunction DashArray() {\r\n    var args = Array.prototype.slice.call(arguments);\r\n\r\n    if (args.length === 1 && args[0] instanceof Array) {\r\n        args = args[0];\r\n    }\r\n    /** @member {Array} */\r\n    this.dashes = args;\r\n}\r\n/**\r\n * Creates a new DashArray instance\r\n * @function\r\n * @param {Array | object*} dashes The dash array as per svg-specification\r\n * @return {DashArray}\r\n */\r\nDashArray.new = function () {\r\n    return new DashArray(...arguments);\r\n};\r\n\r\n/**\r\n * Copies this\r\n * @function\r\n * @return {DashArray}\r\n */\r\nDashArray.prototype.copy = function () {\r\n    return DashArray.new(this.dashes.concat());\r\n};\r\n\r\n/**\r\n * Copies this\r\n * @function\r\n * @alias DashArray.prototype.copy\r\n * @return {DashArray}\r\n */\r\nDashArray.prototype.cp = DashArray.prototype.copy;\r\n\r\n/**\r\n * Creates a string representation of this\r\n * @return {string}\r\n */\r\nDashArray.prototype.toString = function () {\r\n    var d = this.dashes;\r\n    if (d.length === 0) {\r\n        return '[]';\r\n    }\r\n    var s = '[';\r\n    for (var i = 0; i < d.length - 1; i++) {\r\n        s += d[i] + ', ';\r\n    }\r\n\r\n    s += d[d.length - 1];\r\n    s += ']';\r\n    return s;\r\n};\r\n\r\nDashArray.prototype.toSVG = function () {\r\n    var d = this.dashes;\r\n    if (d.length === 0) {\r\n        return '';\r\n    }\r\n    var s = 'stroke-dasharray=\"';\r\n    for (var i = 0; i < d.length - 1; i++) {\r\n        s += d[i] + ', ';\r\n    }\r\n\r\n    s += d[d.length - 1];\r\n\r\n    s += '\"';\r\n    return s;\r\n};\r\n\r\nDashArray.SOLID = DashArray.new();\r\nDashArray.DASH_EVEN = DashArray.new(5, 5);\r\nDashArray.DASH_EVEN_SPACED = DashArray.new(5, 10);\r\nDashArray.DASH_ODD = DashArray.new(5, 5, 1, 5);\r\n\r\n\r\nexport {\r\n    DashArray\r\n};\r\n","import {\r\n    Data\r\n} from './utils.js';\r\nimport {\r\n    DashArray\r\n} from './style.js';\r\n\r\nimport {\r\n    RGBA\r\n} from './color.js';\r\n\r\nclass CanvasOutput {\r\n    constructor(screen) {\r\n        this.screen = screen;\r\n\r\n    }\r\n\r\n    static new(screen) {\r\n        return new CanvasOutput(screen);\r\n    }\r\n\r\n    initFrame() {\r\n        this.screen.clear();\r\n    }\r\n\r\n    finishFrame() {\r\n        // noop\r\n    }\r\n\r\n    getWidth() {\r\n        return this.screen.w();\r\n    }\r\n    getHeight() {\r\n        return this.screen.h();\r\n    }\r\n\r\n    download(filename) {\r\n        const a = document.createElement('a');\r\n        a.href = this.screen.ctx().canvas.toDataURL();\r\n        a.download = filename + '.png';\r\n        a.click();\r\n    }\r\n\r\n    drawLineStrip(points, data) {\r\n        data = data ? data : Data.new();\r\n        if (points.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var ctx = this.screen.ctx();\r\n        ctx.save();\r\n\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        ctx.strokeStyle = strokeStyle.toString();\r\n        var linewidth = data.get('lineWidth', 1);\r\n        ctx.lineWidth = linewidth;\r\n        ctx.beginPath();\r\n\r\n        ctx.moveTo(points[0][0], points[0][1]);\r\n        for (let i = 1; i < points.length; i++) {\r\n            let pi = points[i];\r\n            ctx.lineTo(pi[0], pi[1]);\r\n        }\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n\r\n    drawArc(p, r, alpha_min, alpha_max, data) {\r\n        data = data ? data : Data.new();\r\n        var ctx = this.screen.ctx();\r\n        ctx.save();\r\n\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        var fillStyle = data.get('fillStyle', RGBA.WHITE);\r\n        var dashArray = data.get('dashArray', DashArray.SOLID);\r\n\r\n        if (strokeStyle.a() === 0 && fillStyle.a() === 0) {\r\n            return;\r\n        }\r\n        var linewidth = data.get('lineWidth', 1);\r\n        ctx.beginPath();\r\n        ctx.arc(p[0], p[1], r, alpha_min, alpha_max);\r\n        ctx.strokeStyle = strokeStyle.toString();\r\n        ctx.fillStyle = fillStyle.toString();\r\n        ctx.lineWidth = linewidth.toString();\r\n        ctx.setLineDash(dashArray.dashes);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n\r\n    }\r\n\r\n    drawText(p, text, data) {\r\n        data = data ? data : Data.new();\r\n        var ctx = this.screen.ctx();\r\n        var fillStyle = data.get('fillStyle', RGBA.WHITE);\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n\r\n        var font = data.get('font', ctx.font);\r\n        ctx.save();\r\n\r\n        // manually reflip screen for text...\r\n        const flipped = this.screen.flip();\r\n        if (flipped) {\r\n            this.screen.flip(false);\r\n        }\r\n        ctx.font = font;\r\n        ctx.strokeStyle = strokeStyle.toString();\r\n        ctx.fillStyle = fillStyle.toString();\r\n\r\n        const h = this.getHeight();\r\n        const y = flipped ? h - 1 - p[1] : p[1];\r\n        ctx.fillText(text, p[0], y);\r\n        ctx.strokeText(text, p[0], y);\r\n        if (flipped) {\r\n            this.screen.flip(flipped);\r\n        }\r\n        ctx.restore();\r\n\r\n    }\r\n\r\n    drawPoly(points, data) {\r\n        data = data ? data : Data.new();\r\n        var ctx = this.screen.ctx();\r\n        ctx.save();\r\n        ctx.lineCap = \"round\";\r\n        var p = points;\r\n\r\n        var fillStyle = data.get('fillStyle', RGBA.WHITE);\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        var lineWidth = data.get('lineWidth', 1);\r\n        var dashArray = data.get('dashArray', DashArray.SOLID);\r\n        ctx.fillStyle = fillStyle.toString();\r\n\r\n        if (fillStyle.a() > 0) {\r\n            // fill first\r\n            ctx.beginPath();\r\n\r\n            var p0 = p[0];\r\n            ctx.moveTo(p0[0], p0[1]);\r\n            for (let i = 1; i < p.length; i++) {\r\n                let pi = p[i];\r\n                //\r\n                ctx.lineTo(pi[0], pi[1]);\r\n            }\r\n            ctx.closePath();\r\n            ctx.fill();\r\n            ctx.strokeStyle = fillStyle.toString();\r\n\r\n            ctx.lineWidth = 0.5;\r\n            if (fillStyle.a() === 1) {\r\n                ctx.stroke();\r\n            }\r\n            // lines second\r\n        }\r\n\r\n        if (strokeStyle.a() > 0) {\r\n            // normal lines\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.setLineDash(dashArray.dashes);\r\n            ctx.strokeStyle = strokeStyle.toString();\r\n            ctx.beginPath();\r\n            for (let i = 0; i < p.length; i++) {\r\n\r\n                let idx = (i + 1) % p.length;\r\n                let pi = p[idx];\r\n                let pb = p[i];\r\n\r\n                ctx.moveTo(pb[0], pb[1]);\r\n                ctx.lineTo(pi[0], pi[1]);\r\n\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n\r\n\r\nclass SVGOutput {\r\n    constructor(w, h, flipy) {\r\n        this.w = w;\r\n        this.h = h;\r\n        this.flipy = flipy !== undefined ? flipy : true;\r\n\r\n        this.svg = \"\";\r\n    }\r\n\r\n    static new(w, h, flipy) {\r\n        return new SVGOutput(w, h, flipy);\r\n    }\r\n\r\n    initFrame() {\r\n\r\n        var doc = '<svg version=\"1.1\" baseProfile=\"full\" ';\r\n        doc += 'width=\"' + this.w + '\" ';\r\n        doc += 'height=\"' + this.h + '\" ';\r\n        doc += 'shape-rendering=\"geometricPrecision\" ';\r\n        doc += 'xmlns=\"http://www.w3.org/2000/svg\">\\n';\r\n        this.svg = doc;\r\n\r\n    }\r\n\r\n    y(py) {\r\n        if (this.flipy) {\r\n            return this.h - py;\r\n        }\r\n        else {\r\n            return py;\r\n        }\r\n    }\r\n\r\n    finishFrame() {\r\n        this.svg += '</svg>';\r\n    }\r\n\r\n    getWidth() {\r\n        return this.w;\r\n    }\r\n\r\n    getHeight() {\r\n        return this.h;\r\n    }\r\n\r\n    download(filename) {\r\n\r\n        var a = document.createElement('a');\r\n        var blob = new Blob([this.svg], {\r\n            'type': 'image/svg+xml'\r\n        });\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.download = filename + '.svg';\r\n        a.click();\r\n\r\n\r\n    }\r\n\r\n    drawText(p, text, data) {\r\n\r\n        data = data ? data : Data.new();\r\n        var options = data.get(\"svgOptions\", {});\r\n        var textEl = '<text ';\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        var fillStyle = data.get('fillStyle', RGBA.BLACK);\r\n        var linewidth = data.get('lineWidth', 1);\r\n\r\n        if (strokeStyle.a() === 0 && fillStyle.a() === 0) {\r\n            return;\r\n        }\r\n\r\n        textEl += 'style=\"';\r\n        textEl += strokeStyle.toSVG('stroke');\r\n        textEl += fillStyle.toSVG('fill');\r\n        textEl += '\"';\r\n        textEl += ' ';\r\n        if (options.scalingStroke) {\r\n\r\n            textEl += 'vector-effect=\"non-scaling-stroke\" ';\r\n        }\r\n        textEl += 'stroke-width=\"' + linewidth + 'px\"';\r\n        textEl += ' ';\r\n        textEl += ' ';\r\n\r\n\r\n        textEl += 'x=\"' + p[0] + '\" ';\r\n        textEl += 'y=\"' + this.y(p[1]) + '\" ';\r\n\r\n        textEl += '>\\n';\r\n        textEl += text;\r\n        textEl += '\\n</text>';\r\n\r\n        this.svg += textEl + '\\n';\r\n    }\r\n\r\n    drawLineStrip = function (points, data) {\r\n\r\n        if (points.length === 0) {\r\n            return;\r\n        }\r\n        data = data ? data : Data.new();\r\n\r\n        var line = '<polyline ';\r\n        line += 'stroke-linecap=\"round\" ';\r\n        line += 'fill=\"none\" ';\r\n\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        var linewidth = data.get('lineWidth', 1);\r\n        var dashArray = data.get('dashArray', DashArray.SOLID);\r\n        var attributes = data.get(\"attributes\", {});\r\n\r\n        if (strokeStyle.a() === 0) {\r\n            return;\r\n        }\r\n\r\n        line += 'style=\"';\r\n        line += strokeStyle.toSVG('stroke');\r\n        line += '\"';\r\n        line += ' ';\r\n        line += 'stroke-width=\"' + linewidth + 'px\" ';\r\n        line += dashArray.toSVG();\r\n        line += ' ';\r\n        for (let a in attributes) {\r\n            line += a + '=\"';\r\n            line += attributes[a];\r\n            line += '\" ';\r\n        }\r\n\r\n        line += 'points=\"';\r\n\r\n        for (let i = 0; i < points.length; i++) {\r\n            let pi = points[i];\r\n\r\n            line += pi[0] + ',' + this.y(pi[1]) + ' ';\r\n        }\r\n\r\n        line += '\"';\r\n        line += '/>';\r\n\r\n        this.svg += line + '\\n';\r\n    }\r\n\r\n    drawArc(p, r, alpha_min, alpha_max, data) {\r\n\r\n        data = data ? data : Data.new();\r\n        var attributes = data.get(\"attributes\", {});\r\n        var circle = '<circle ';\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        var fillStyle = data.get('fillStyle', RGBA.WHITE);\r\n        var dashArray = data.get('dashArray', DashArray.SOLID);\r\n        if (strokeStyle.a() === 0 && fillStyle.a() === 0) {\r\n            return '';\r\n        }\r\n\r\n        var linewidth = data.get('lineWidth', 1);\r\n\r\n        circle += 'style=\"';\r\n        circle += fillStyle.toSVG('fill');\r\n        circle += strokeStyle.toSVG('stroke');\r\n        circle += '\"';\r\n        circle += ' ';\r\n        circle += 'stroke-width=\"' + linewidth + 'px\"';\r\n        circle += ' ';\r\n        circle += dashArray.toSVG();\r\n        circle += ' ';\r\n\r\n        for (let a in attributes) {\r\n            circle += a + '=\"';\r\n            circle += attributes[a];\r\n            circle += '\" ';\r\n        }\r\n\r\n        circle += 'r=\"' + r + '\"';\r\n        circle += ' ';\r\n\r\n\r\n        circle += 'cx=\"' + p[0] + '\" ';\r\n        circle += 'cy=\"' + this.y(p[1]) + '\" ';\r\n\r\n        circle += '/>';\r\n\r\n        this.svg += circle + '\\n';\r\n    }\r\n\r\n    drawPoly(points, data) {\r\n\r\n        data = data ? data : Data.new();\r\n\r\n        var fillStyle = data.get('fillStyle', RGBA.WHITE);\r\n        var strokeStyle = data.get('strokeStyle', RGBA.BLACK);\r\n        var dashArray = data.get('dashArray', DashArray.SOLID);\r\n        var linewidth = data.get('lineWidth', 1);\r\n\r\n        var attributes = data.get(\"attributes\", {});\r\n        if (fillStyle.a() === 0 && strokeStyle.a() === 0) {\r\n            return;\r\n        }\r\n\r\n        var doc = '';\r\n        var polyFill = '<polygon ';\r\n\r\n        var pp = points;\r\n\r\n\r\n        polyFill += 'style=\"';\r\n        polyFill += fillStyle.toSVG('fill');\r\n        polyFill += ' ';\r\n\r\n        polyFill += strokeStyle.toSVG('stroke');\r\n        polyFill += '\"';\r\n\r\n        polyFill += ' ';\r\n        polyFill += 'shape-rendering=\"crispEdges\"';\r\n        polyFill += ' ';\r\n\r\n        polyFill += ' ';\r\n        polyFill += 'stroke-width=\"';\r\n        polyFill += linewidth;\r\n        polyFill += '\"';\r\n        polyFill += ' ';\r\n\r\n        polyFill += dashArray.toSVG();\r\n        polyFill += ' ';\r\n\r\n        for (let a in attributes) {\r\n            polyFill += a + '=\"';\r\n            polyFill += attributes[a];\r\n            polyFill += '\" ';\r\n        }\r\n\r\n        polyFill += 'points=\"';\r\n\r\n\r\n\r\n        for (let j = 0; j < pp.length; j++) {\r\n            var point = pp[j];\r\n            polyFill += point[0] + ',' + this.y(point[1]) + ' ';\r\n        }\r\n        polyFill += '\"/>';\r\n        doc += polyFill + \"\\n\";\r\n\r\n        this.svg += doc;\r\n\r\n    }\r\n\r\n    begin_group() {\r\n        this.svg += '<g>\\n';\r\n    }\r\n\r\n    end_group() {\r\n        this.svg += '</g>\\n';\r\n    }\r\n    add_svg(svg) {\r\n        this.svg += svg;\r\n        this.svg += '\\n';\r\n    }\r\n}\r\n\r\nexport {\r\n    CanvasOutput,\r\n    SVGOutput\r\n};\r\n","import * as mat from './lib/jsmatrix.js';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useEventHandler } from './components.js';\r\n\r\nfunction makeCamera({ pos, dir, up }) {\r\n\r\n\r\n    dir = mat.normalize(dir);\r\n    const right = mat.normalize(mat.cross(dir, up));\r\n    // up = mat.cross(right, dir);\r\n\r\n    return {\r\n        pos, dir, right, up\r\n    };\r\n}\r\n\r\nfunction moveCamera({ pos, dir, right, up }, move) {\r\n\r\n    return { pos: mat.add(pos, move), dir, right, up };\r\n};\r\n\r\n/**\r\n * Moves the camera t units in the longitudinal direction.\r\n * Positive values move the camera forward, negative ones backward\r\n * @param {number} t The amount to move\r\n */\r\nfunction moveCameraLongitudinal(cam, t) {\r\n\r\n    const { dir } = cam;\r\n    return moveCamera(cam, mat.scale(dir, t));\r\n};\r\n\r\n/**\r\n * Moves the camera t units in the lateral direction.\r\n * Positive values move the camera to the right, negative ones to the left\r\n * @param {number} t The amount to move\r\n */\r\nfunction moveCameraLateral(cam, t) {\r\n    const { right } = cam;\r\n    return moveCamera(cam, mat.scale(right, t));\r\n\r\n};\r\n\r\n/**\r\n * Moves the camera t units in the normal direction.\r\n * Positive values move the camera upwards, negative ones downwards\r\n * @param {number} t The amount to move\r\n */\r\nfunction moveCameraNormal(cam, t) {\r\n\r\n    const { up } = cam;\r\n    return moveCamera(cam, mat.scale(up, t));\r\n\r\n};\r\n\r\nfunction event2Coordinate(e, flipy) {\r\n    flipy = mat.optional(flipy, false);\r\n    const rect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - rect.left; //x position within the element.\r\n    let y = e.clientY - rect.top;  //y position within the element.\r\n    if (flipy) {\r\n        y = rect.height - 1 - y;\r\n    }\r\n    return mat.VecF32.from([x, y]);\r\n}\r\n\r\n\r\nfunction useFirstPersonController({ setCam, camUp = mat.Z, canvas, speed = 0.1 }) {\r\n\r\n    const [mouse, setMouse] = useState(\r\n        {\r\n            lastPos: mat.VecF32.from([0, 0]),\r\n            currentPos: mat.VecF32.from([0, 0]),\r\n            pressed: false\r\n        }\r\n    );\r\n    const [keyMap, setKeyMap] = useState({});\r\n\r\n    const mouseMove = useCallback(evt => {\r\n\r\n        const mpos = event2Coordinate(evt);\r\n\r\n        setMouse(current => {\r\n            return {\r\n                lastPos: current.currentPos,\r\n                currentPos: mpos,\r\n                pressed: current.pressed\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const mouseDown = useCallback(evt => {\r\n\r\n        setMouse(current => {\r\n            return {\r\n                lastPos: current.lastPos,\r\n                currentPos: current.currentPos,\r\n                pressed: true\r\n            }\r\n        })\r\n    }, []);\r\n    const mouseUp = useCallback(() => {\r\n\r\n        setMouse(current => {\r\n            return {\r\n                lastPos: current.lastPos,\r\n                currentPos: current.currentPos,\r\n                pressed: false\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const keyDown = useCallback(evt => {\r\n        const key = evt.key;\r\n\r\n        setKeyMap(k => {\r\n            const newMap = Object.assign({}, k);\r\n            newMap[key] = true;\r\n            return newMap;\r\n        });\r\n    }, []);\r\n\r\n    const keyUp = useCallback(e => {\r\n        const key = e.key;\r\n        setKeyMap(k => {\r\n            const newMap = Object.assign({}, k);\r\n            newMap[key] = false;\r\n            return newMap;\r\n        });\r\n    }, []);\r\n\r\n    useEventHandler({\r\n        element: canvas,\r\n        eventName: \"mousedown\",\r\n        handleEvent: mouseDown\r\n    });\r\n    useEventHandler({\r\n        element: canvas,\r\n        eventName: \"mouseup\",\r\n        handleEvent: mouseUp\r\n    });\r\n    useEventHandler({\r\n        element: canvas,\r\n        eventName: \"mousemove\",\r\n        handleEvent: mouseMove\r\n    });\r\n\r\n    useEventHandler({\r\n        element: canvas,\r\n        eventName: \"keydown\",\r\n        handleEvent: keyDown\r\n    });\r\n    useEventHandler({\r\n        element: canvas,\r\n        eventName: \"keyup\",\r\n        handleEvent: keyUp\r\n    });\r\n    useEventHandler({\r\n        element: canvas,\r\n        eventName: \"focusout\",\r\n        handleEvent: () => {\r\n            setKeyMap(() => [])\r\n        }\r\n    });\r\n\r\n    const updateKeys = useCallback((dt) => {\r\n        const movement = dt * speed;\r\n        setCam(currentCam => {\r\n            let newCam = makeCamera(currentCam);\r\n            let changed = false;\r\n            if (keyMap[\"w\"]) { // w\r\n                newCam = moveCameraLongitudinal(newCam, movement);\r\n                changed = true;\r\n            }\r\n            if (keyMap[\"s\"]) { // s\r\n                newCam = moveCameraLongitudinal(newCam, -movement);\r\n                changed = true;\r\n            }\r\n            if (keyMap[\"d\"]) { // d\r\n                newCam = moveCameraLateral(newCam, movement);\r\n                changed = true;\r\n            }\r\n            if (keyMap[\"a\"]) { // a\r\n                newCam = moveCameraLateral(newCam, -movement);\r\n                changed = true;\r\n            }\r\n            if (keyMap[\"q\"]) { // q\r\n                newCam = moveCameraNormal(newCam, -movement);\r\n                changed = true;\r\n            }\r\n            if (keyMap[\"e\"]) { // e\r\n                newCam = moveCameraNormal(newCam, movement);\r\n                changed = true;\r\n            }\r\n\r\n            if (!changed) {\r\n                return currentCam;\r\n            }\r\n\r\n            return {\r\n                pos: newCam.pos,\r\n                dir: newCam.dir,\r\n                up: newCam.up\r\n            };\r\n        });\r\n    }, [keyMap, setCam, speed]);\r\n\r\n    useEffect(() => {\r\n        updateKeys(50 / 1000);\r\n        const interval = setInterval(() => {\r\n            updateKeys(50 / 1000);\r\n        }, 50);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n\r\n    }, [updateKeys]);\r\n\r\n    useEffect(() => {\r\n        if (!mouse.pressed) {\r\n            return;\r\n        }\r\n\r\n        const delta = mat.fromTo(mouse.lastPos, mouse.currentPos);\r\n        setCam(currentCam => {\r\n            let { theta, phi } = mat.cartesianToSpherical(currentCam.dir);\r\n\r\n            phi -= delta.at(0) * 0.01;\r\n\r\n            phi = phi % (2.0 * Math.PI);\r\n            if (phi < 0) {\r\n                phi += 2.0 * Math.PI;\r\n            }\r\n\r\n            theta += delta.at(1) * 0.01;\r\n            const rad1 = mat.deg2rad(1.0);\r\n            theta = Math.max(rad1, Math.min(Math.PI - rad1, theta));\r\n            return {\r\n                pos: currentCam.pos,\r\n                dir: mat.spherical(theta, phi, 1),\r\n                up: currentCam.up\r\n            }\r\n        }\r\n        );\r\n    }, [mouse, setCam])\r\n}\r\nexport {\r\n    useFirstPersonController\r\n};\r\n","\r\n\r\n\r\nfunction zoom_scale(level, subdivision = 10, base = 10) {\r\n    const pow = Math.floor(level / (subdivision - 1));\r\n    const curLevel = Math.pow(base, pow - 1);\r\n    const intra_size = 1 + level % (subdivision - 1);\r\n\r\n\r\n    return curLevel * intra_size;\r\n}\r\n\r\nconst MIN_GRID_SIZE = zoom_scale(0);\r\nconst GRID_RESOLUTION = 20;\r\n\r\nfunction computeViewportHalfSize(level, gridResolution = 40, subdivision, base) {\r\n    return zoom_scale(level, subdivision, base) * gridResolution / 2;\r\n}\r\n\r\nexport {\r\n    MIN_GRID_SIZE,\r\n    GRID_RESOLUTION,\r\n    computeViewportHalfSize,\r\n    zoom_scale,\r\n}","import * as mat from './lib/jsmatrix';\r\nimport { MatF32, VecF32 } from './lib/jsmatrix';\r\n\r\nimport {\r\n    distanceSquaredPointLineSegment,\r\n    transformPoints,\r\n    pointInBounds2d,\r\n    computeBounds,\r\n    intersectLinePlane,\r\n    pointInside,\r\n    mat2points,\r\n    insidePoly\r\n} from './pointUtils.js'\r\n\r\nimport {\r\n    Data, genID, copy\r\n} from './utils.js';\r\n\r\nimport {\r\n    MIN_GRID_SIZE\r\n} from './commonView.js';\r\n\r\n\r\nfunction createProperties({\r\n    z = 0,\r\n    showBoundVanishingLines = false,\r\n    showBoundGridBottom = true,\r\n    showBoundGridTop = true,\r\n    showSideGridFront = true,\r\n    showSideGridBack = false,\r\n    gridCellLength = MIN_GRID_SIZE,\r\n    gridCellHeight = MIN_GRID_SIZE,\r\n    displayCellLength = true,\r\n    sideGridStart = 0\r\n}) {\r\n\r\n    return {\r\n        z,\r\n        showBoundVanishingLines,\r\n        showBoundGridBottom,\r\n        showBoundGridTop,\r\n        showSideGridFront,\r\n        showSideGridBack,\r\n        gridCellLength,\r\n        displayCellLength,\r\n        gridCellHeight,\r\n        sideGridStart\r\n    };\r\n}\r\n\r\n\r\nclass Transform {\r\n    constructor(t = VecF32.from([0, 0, 0]),\r\n        alpha = 0,\r\n        scale = VecF32.from([1, 1, 1])) {\r\n        this.t = t;\r\n        this.alpha = alpha;\r\n        this.scale = scale;\r\n        this.update();\r\n\r\n    }\r\n\r\n    static new(t, alpha, scale) {\r\n        return new Transform(t, alpha, scale);\r\n    }\r\n    toMat() {\r\n        return this.m;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            t: mat.toJSON(this.t),\r\n            alpha: this.alpha,\r\n            scale: mat.toJSON(this.scale)\r\n        };\r\n    }\r\n\r\n    update() {\r\n        this.m = mat.mult(\r\n            mat.translation(this.t),\r\n            mat.mult(\r\n                mat.axisAngle4(mat.Z, this.alpha),\r\n                mat.scaling(this.scale)\r\n            )\r\n        );\r\n    }\r\n    setAlpha(alpha) {\r\n        this.alpha = alpha;\r\n        this.update();\r\n    }\r\n    setTranslation(t) {\r\n        this.t = t;\r\n        this.update();\r\n    }\r\n\r\n    setScale(s) {\r\n        this.scale = s;\r\n        this.update();\r\n    }\r\n\r\n    copy() {\r\n        return Transform.new(this.t, this.alpha, this.scale);\r\n    }\r\n}\r\n\r\nclass DrawObject {\r\n\r\n    /**\r\n     * \r\n     * @param {*} drawable \r\n     * @param {Data} styleData \r\n     * @param {*} M \r\n     * @param {DisplayOptions} options \r\n     */\r\n    constructor(drawable, styleData, transform, options, id) {\r\n        this.drawable = drawable;\r\n        this.styleData = styleData !== undefined ? styleData : Data.new();\r\n\r\n        this.setTransform(mat.optional(transform, Transform.new()));\r\n\r\n        this.options = createProperties(options !== undefined ? options : {});\r\n        this.id = mat.optional(id, genID());\r\n    }\r\n\r\n    static new(drawable, styleData, transform, options, id) {\r\n        return new DrawObject(drawable, styleData, transform, options, id);\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            drawobject: {\r\n                drawable: this.drawable,\r\n                transform: this.transform,\r\n                properties: this.options,\r\n                styleData: this.styleData,\r\n                id: this.id\r\n            }\r\n        };\r\n    }\r\n\r\n    draw(output, VP, clipplanes) {\r\n        VP = VP !== undefined ? VP : MatF32.id(4, 4);\r\n        this.drawableWorld.draw(output, this.styleData, VP, clipplanes);\r\n    }\r\n\r\n    setTransform(transform) {\r\n        this.transform = transform;\r\n        const draw = this.drawable;\r\n        const center = draw.center;\r\n\r\n        this.M = mat.mult(mat.translation(center),\r\n            mat.mult(this.transform.toMat(), mat.translation(mat.neg(center))));\r\n\r\n\r\n        this.drawableWorld = this.drawable.transform(this.M);\r\n        this.xyboundsWorld = transformPoints(this.drawable.xybounds, this.M);\r\n\r\n    }\r\n    clone() {\r\n        return DrawObject.new(this.drawable.clone(),\r\n            this.styleData.copy(), this.transform.copy(), copy(this.options));\r\n    }\r\n\r\n}\r\n\r\nclass Displayable {\r\n    constructor(drawable, styleData, z, id) {\r\n        this.drawable = drawable;\r\n        this.styleData = styleData;\r\n        this.z = z;\r\n        this.id = mat.optional(id, genID());\r\n    }\r\n    static new(drawable, styleData, z, id) {\r\n        return new Displayable(drawable, styleData, z, id);\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Polygon {\r\n\r\n    constructor(points) {\r\n\r\n        this.points = points;\r\n        const [bmin, bmax] = computeBounds(points);\r\n        this.bmin = bmin;\r\n        this.bmax = bmax;\r\n        this.center = mat.scale(mat.add(bmin, bmax), 0.5);\r\n\r\n\r\n        const xybounds = MatF32.uninitialized(3, 4);\r\n        mat.insert(mat.col(xybounds, 0), bmin);\r\n        mat.insert(mat.col(xybounds, 1), VecF32.from([bmax.at(0), bmin.at(1), bmin.at(2)]));\r\n        mat.insert(mat.col(xybounds, 2), bmax);\r\n        mat.insert(mat.col(xybounds, 3), VecF32.from([bmin.at(0), bmax.at(1), bmin.at(2)]));\r\n\r\n        this.xybounds = xybounds;\r\n\r\n    }\r\n\r\n    static new(points) {\r\n        return new Polygon(points);\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            type: \"Polygon\",\r\n            points: mat.toJSON(this.points)\r\n        }\r\n    }\r\n\r\n    transform(M) {\r\n        let p = this.points;\r\n\r\n        p = mat.PaddedView.new(p, 4, p.cols(), 1, 1);\r\n        p = mat.mult(M, p);\r\n        p = mat.homogenize(p);\r\n\r\n        return Polygon.new(MatF32.copy(mat.block(p, 0, 0, 3, p.cols())));\r\n    }\r\n\r\n    draw(output, styleData) {\r\n\r\n        let p = this.points;\r\n\r\n        let drawpoints = mat2points(p);\r\n\r\n\r\n        output.drawPoly(drawpoints, styleData);\r\n    }\r\n\r\n\r\n    clip(plane) {\r\n        const outputList = [];\r\n        const inputPoints = this.points;\r\n        const numIn = inputPoints.cols();\r\n\r\n        let A = mat.col(inputPoints, numIn - 1);\r\n\r\n        const pushPoint = (p, list) => list.push(...mat.toArray(p));\r\n        let num = 0;\r\n        for (let i = 0; i < numIn; i++) {\r\n            const B = mat.col(inputPoints, i);\r\n\r\n\r\n            if (pointInside(B, plane)) {\r\n                if (pointInside(A, plane)) {\r\n                    pushPoint(B, outputList);\r\n                    num++;\r\n                }\r\n                else {\r\n                    const [S,] = intersectLinePlane(A, B, plane);\r\n                    pushPoint(S, outputList);\r\n                    num++;\r\n                    pushPoint(B, outputList);\r\n                    num++;\r\n                }\r\n            }\r\n            else {\r\n                if (pointInside(A, plane)) {\r\n                    const [S,] = intersectLinePlane(A, B, plane);\r\n                    pushPoint(S, outputList);\r\n                    num++;\r\n                }\r\n            }\r\n\r\n            A = B;\r\n        }\r\n\r\n        if (num === 0) {\r\n            return null;\r\n        }\r\n\r\n        return Polygon.new(MatF32.from(outputList, 3, num));\r\n\r\n    }\r\n\r\n    clone() {\r\n        return Polygon.new(mat.copy(this.points));\r\n    }\r\n\r\n    isInsideXY(p, tolerance) {\r\n        const points = this.points;\r\n\r\n        if (!pointInBounds2d(p, this.bmin, this.bmax)) {\r\n            return false;\r\n        }\r\n\r\n        const inside = insidePoly(p, points);\r\n        if (inside) {\r\n            return true;\r\n        }\r\n\r\n        // if point is ouside, check if distance lies withing tolerance\r\n        const num = points.cols();\r\n        const t2 = tolerance * tolerance;\r\n        const ci = i => MatF32.copy(mat.subvec(mat.col(points, i), 0, 2));\r\n\r\n        for (let i = 0; i < num; i++) {\r\n            const a = ci(i);\r\n            const b = ci((i + 1) % num);\r\n\r\n            const d2 = distanceSquaredPointLineSegment(p, a, b);\r\n            if (d2 < t2) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass LineStrip {\r\n    constructor(points) {\r\n        this.points = points;\r\n        const [bmin, bmax] = computeBounds(points);\r\n        this.bmin = bmin;\r\n        this.bmax = bmax;\r\n        this.center = mat.scale(mat.add(bmin, bmax), 0.5);\r\n\r\n\r\n        const xybounds = MatF32.uninitialized(3, 4);\r\n        mat.insert(mat.col(xybounds, 0), bmin);\r\n        mat.insert(mat.col(xybounds, 1), VecF32.from([bmax.at(0), bmin.at(1), bmin.at(2)]));\r\n        mat.insert(mat.col(xybounds, 2), bmax);\r\n        mat.insert(mat.col(xybounds, 3), VecF32.from([bmin.at(0), bmax.at(1), bmin.at(2)]));\r\n\r\n        this.xybounds = xybounds;\r\n\r\n    }\r\n\r\n    static new(points) {\r\n        return new LineStrip(points);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            type: \"LineStrip\",\r\n            points: mat.toJSON(this.points)\r\n        }\r\n    }\r\n\r\n    transform(M) {\r\n        let p = this.points;\r\n\r\n        p = mat.PaddedView.new(p, 4, p.cols(), 1, 1);\r\n        p = mat.mult(M, p);\r\n        p = mat.homogenize(p);\r\n\r\n        return LineStrip.new(MatF32.copy(mat.block(p, 0, 0, 3, p.cols())));\r\n    }\r\n\r\n    draw(output, styleData) {\r\n\r\n        let p = this.points;\r\n        let drawpoints = mat2points(p);\r\n\r\n\r\n        output.drawLineStrip(drawpoints, styleData);\r\n    }\r\n\r\n\r\n    clip(plane) {\r\n        const outputList = [];\r\n\r\n        const inputPoints = this.points;\r\n        const numIn = inputPoints.cols();\r\n\r\n\r\n        let num = 0;\r\n        const pushPoint = (p) => {\r\n            outputList.push(...mat.toArray(p));\r\n            num++;\r\n        };\r\n        for (let i = 1; i < numIn; i++) {\r\n\r\n            // TODO\r\n            const A = mat.col(inputPoints, i - 1);\r\n            const B = mat.col(inputPoints, i);\r\n\r\n\r\n            if (pointInside(B, plane)) {\r\n                if (pointInside(A, plane)) {\r\n                    if (i === 1) {\r\n                        pushPoint(A);\r\n                    }\r\n                    pushPoint(B);\r\n                }\r\n                else {\r\n                    const [S,] = intersectLinePlane(A, B, plane);\r\n                    pushPoint(S);\r\n                    pushPoint(B);\r\n                }\r\n            }\r\n            else {\r\n                if (pointInside(A, plane)) {\r\n                    if (i === 1) {\r\n                        pushPoint(A);\r\n                    }\r\n                    const [S,] = intersectLinePlane(A, B, plane);\r\n                    pushPoint(S);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (num === 0) {\r\n            return null;\r\n        }\r\n\r\n        return LineStrip.new(MatF32.from(outputList, 3, num));\r\n\r\n    }\r\n\r\n    clone() {\r\n        return LineStrip.new(mat.copy(this.points));\r\n    }\r\n\r\n    isInsideXY(p, tolerance) {\r\n\r\n        const vtol = VecF32.from([tolerance, tolerance, tolerance]);\r\n        if (!pointInBounds2d(p, mat.sub(this.bmin, vtol), mat.add(this.bmax, vtol))) {\r\n            return false;\r\n        }\r\n        const points = this.points;\r\n        const num = points.cols();\r\n\r\n        const t2 = tolerance * tolerance;\r\n\r\n        for (let i = 0; i < num - 1; i++) {\r\n            const a = VecF32.copy(mat.subvec(mat.col(points, i), 0, 2));\r\n            const b = VecF32.copy(mat.subvec(mat.col(points, i + 1), 0, 2));\r\n            if (distanceSquaredPointLineSegment(p, a, b) < t2) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nclass Point {\r\n    constructor(point, radius) {\r\n        this.points = point;\r\n        this.bmin = point;\r\n        this.bmax = point;\r\n        this.center = point;\r\n        this.radius = mat.optional(radius, 2);\r\n\r\n        const xybounds = MatF32.uninitialized(3, 4);\r\n        mat.insert(mat.col(xybounds, 0), point);\r\n        mat.insert(mat.col(xybounds, 1), point);\r\n        mat.insert(mat.col(xybounds, 2), point);\r\n        mat.insert(mat.col(xybounds, 3), point);\r\n\r\n        this.xybounds = xybounds;\r\n    }\r\n\r\n    static new(point, radius) {\r\n        return new Point(point, radius);\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            type: \"Point\",\r\n            points: mat.toJSON(this.points),\r\n            radius: this.radius\r\n        }\r\n    }\r\n    transform(M) {\r\n        let p = this.points;\r\n\r\n        p = mat.PaddedView.new(p, 4, p.cols(), 1, 1);\r\n        p = mat.mult(M, p);\r\n        p = mat.homogenize(p);\r\n\r\n        return Point.new(MatF32.copy(mat.block(p, 0, 0, 3, p.cols())), this.radius);\r\n    }\r\n\r\n    draw(output, styleData) {\r\n\r\n        let p = this.points;\r\n        output.drawArc(mat.toArray(p), this.radius, 0, Math.PI * 2, styleData);\r\n    }\r\n\r\n\r\n    clip(plane) {\r\n        const p = this.points;\r\n        if (pointInside(p, plane)) {\r\n            return Point.new(p, this.radius);\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n    clone() {\r\n        return Point.new(mat.copy(this.points), this.radius);\r\n    }\r\n\r\n    isInsideXY(p, tolerance) {\r\n        return mat.norm2Squared(mat.sub(p, this.points)) < tolerance * tolerance;\r\n\r\n    }\r\n\r\n}\r\n\r\nclass Text {\r\n    constructor(point, text) {\r\n        this.points = point;\r\n        this.bmin = point;\r\n        this.bmax = point;\r\n        this.center = point;\r\n        this.text = text;\r\n\r\n        const xybounds = MatF32.uninitialized(3, 4);\r\n        mat.insert(mat.col(xybounds, 0), point);\r\n        mat.insert(mat.col(xybounds, 1), point);\r\n        mat.insert(mat.col(xybounds, 2), point);\r\n        mat.insert(mat.col(xybounds, 3), point);\r\n\r\n        this.xybounds = xybounds;\r\n    }\r\n\r\n    static new(point, text) {\r\n        return new Text(point, text);\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            type: \"Text\",\r\n            points: mat.toJSON(this.points),\r\n            text: this.text\r\n        }\r\n    }\r\n    transform(M) {\r\n        let p = this.points;\r\n\r\n        p = mat.PaddedView.new(p, 4, p.cols(), 1, 1);\r\n        p = mat.mult(M, p);\r\n        p = mat.homogenize(p);\r\n\r\n        return Text.new(MatF32.copy(mat.block(p, 0, 0, 3, p.cols())), this.text);\r\n    }\r\n\r\n    draw(output, styleData) {\r\n\r\n        let p = this.points;\r\n        output.drawText(mat.toArray(p), this.text, styleData);\r\n    }\r\n\r\n\r\n    clip(plane) {\r\n        const p = this.points;\r\n        if (pointInside(p, plane)) {\r\n            return Text.new(p, this.text);\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n    clone() {\r\n        return Text.new(mat.copy(this.points), this.text);\r\n    }\r\n\r\n    isInsideXY(p, tolerance) {\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    Transform,\r\n    DrawObject,\r\n    Displayable,\r\n    Polygon,\r\n    LineStrip,\r\n    Point,\r\n    Text,\r\n    createProperties\r\n\r\n};","import * as mat from './lib/jsmatrix';\r\n\r\nfunction computeTransformedDistanceSquared(M, a, b) {\r\n    b = mat.optional(b, mat.zeros(a.rows(), a.cols(), a.type()));\r\n\r\n    const am = mat.mult(M, mat.hvec(a));\r\n    const bm = mat.mult(M, mat.hvec(b));\r\n\r\n    return mat.norm2Squared(\r\n        mat.sub(mat.subvec(mat.homogenize(am), 0, 3),\r\n            mat.subvec(mat.homogenize(bm), 0, 3)));\r\n\r\n}\r\n\r\n\r\nexport {\r\n    computeTransformedDistanceSquared\r\n};","import React, { useState, useRef, useEffect } from 'react';\r\n\r\n\r\nimport * as mat from './lib/jsmatrix';\r\nimport { MatF32, VecF32 } from './lib/jsmatrix';\r\nimport { addz } from './pointUtils.js';\r\nimport {\r\n    computeTransformedDistanceSquared\r\n} from './viewUtils.js';\r\nimport reactCSS from 'reactcss'\r\nimport { SketchPicker } from 'react-color';\r\nimport {\r\n    DrawObject,\r\n    Polygon,\r\n    LineStrip,\r\n    Point,\r\n    createProperties,\r\n    Transform,\r\n    Text\r\n} from './geom.js';\r\n\r\nimport {\r\n    zoom_scale,\r\n    MIN_GRID_SIZE,\r\n} from './commonView.js';\r\n\r\n\r\nimport {\r\n    Data, copy\r\n} from './utils.js';\r\nimport {\r\n    RGBA\r\n} from './color.js';\r\n\r\nimport {\r\n    closestVertex,\r\n    isClockwise,\r\n    normal2D,\r\n    findIntersectSet,\r\n    simplifyLine,\r\n} from './pointUtils.js';\r\n\r\nimport {\r\n    AngleSlider,\r\n    CheckBox,\r\n    NumberInput,\r\n    NumberInputTimeout\r\n} from './inputComponents.js';\r\nimport { ACTION_MOUSE_MOVE, ACTION_MOUSE_CLICK_LEFT, ACTION_MOUSE_DOWN_LEFT, ACTION_MOUSE_UP_LEFT, ACTION_MOUSE_UP_RIGHT } from './actions';\r\n\r\nconst EDIT_STATE_WAITING = 0;\r\nconst EDIT_STATE_ADDING_POINTS = 1;\r\n\r\nclass CreatePointTool {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new CreatePointTool();\r\n    }\r\n\r\n    reset() {\r\n        this.state = EDIT_STATE_WAITING;\r\n        this.currentObject = [];\r\n        this.hoverIndex = -1;\r\n    }\r\n\r\n    updateVis(toolState) {\r\n\r\n        const overlay = [];\r\n        const { mouse, viewTransforms } = toolState;\r\n        const { snappedMousePosWorld } = mouse;\r\n        const { setOverlayObjects } = toolState.overlay;\r\n        {\r\n            const cursorStyle = Data.new({\r\n                fillStyle: RGBA.PURPLE.cp().a(0.5)\r\n            });\r\n\r\n            overlay.push(\r\n                DrawObject.new(Point.new(addz(snappedMousePosWorld), 5), cursorStyle, Transform.new(),\r\n                    createProperties({\r\n                        z: Infinity\r\n                    }))\r\n            );\r\n        }\r\n\r\n\r\n        const co = this.currentObject;\r\n\r\n        const previewPoints = [...co, addz(snappedMousePosWorld)];\r\n        if (previewPoints.length === 2) {\r\n\r\n            overlay.push(\r\n                DrawObject.new(LineStrip.new(MatF32.fromCols(previewPoints)),\r\n                    Data.new({\r\n                        strokeStyle: RGBA.RED.cp().a(0.5)\r\n                    }))\r\n            );\r\n        } else if (previewPoints.length > 2) {\r\n\r\n            overlay.push(\r\n                DrawObject.new(Polygon.new(MatF32.fromCols(previewPoints)),\r\n                    Data.new({\r\n                        strokeStyle: RGBA.RED.cp().a(0.5),\r\n                        fillStyle: RGBA.LIME.cp().a(0.5),\r\n                    }))\r\n            );\r\n        }\r\n        const currentStyle = Data.new({\r\n            fillStyle: RGBA.VIOLET.cp().a(0.5)\r\n        });\r\n\r\n        const hoverPoint = Data.new({\r\n            fillStyle: RGBA.RED\r\n        });\r\n\r\n        for (let i = 0; i < co.length; i++) {\r\n            const oi = co[i];\r\n            const st = i === this.hoverIndex ? hoverPoint : currentStyle;\r\n            overlay.push(\r\n                DrawObject.new(Point.new(oi, 5), st, Transform.new(),\r\n                    createProperties({\r\n                        z: Infinity\r\n                    }))\r\n            );\r\n        }\r\n\r\n        if (co.length > 0) {\r\n            const lastPoint = co[co.length - 1];\r\n            const dir = mat.fromTo(lastPoint, addz(snappedMousePosWorld));\r\n            const mid = mat.add(lastPoint, mat.scale(dir, 0.5));\r\n            const n = normal2D(dir);\r\n            mat.normalize(n, n);\r\n            const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([5, 0, 0]));\r\n            const r = Math.sqrt(r2);\r\n            const textpos = mat.add(mid, mat.scale(n, -r));\r\n\r\n            overlay.push(DrawObject.new(Text.new(textpos, mat.norm(dir).toFixed(2)),\r\n                Data.new(), Transform.new(), createProperties({\r\n                    z: Infinity\r\n                })));\r\n\r\n        }\r\n\r\n        setOverlayObjects(() => overlay);\r\n\r\n    }\r\n\r\n    render(toolState) {\r\n\r\n        return null;\r\n\r\n\r\n\r\n    }\r\n    update(toolState, action) {\r\n        const { type: actionType } = action;\r\n        const { mouse, context, viewTransforms } = toolState;\r\n        const { snappedMousePosWorld } = mouse;\r\n        const { objects, setObjects, viewport } = context;\r\n\r\n        const { requestVisUpdate } = toolState;\r\n\r\n        if (this.state === EDIT_STATE_WAITING) {\r\n\r\n            if (actionType === ACTION_MOUSE_CLICK_LEFT) {\r\n                const editPoints = [addz(snappedMousePosWorld, 0)];\r\n\r\n                this.state = EDIT_STATE_ADDING_POINTS;\r\n                this.currentObject = editPoints;\r\n                requestVisUpdate();\r\n\r\n            } else if (actionType === ACTION_MOUSE_MOVE) {\r\n                requestVisUpdate();\r\n            }\r\n\r\n        }\r\n        else if (this.state === EDIT_STATE_ADDING_POINTS) {\r\n\r\n            if (actionType === ACTION_MOUSE_CLICK_LEFT) {\r\n                const co = this.currentObject;\r\n                const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([5, 5, 0]));\r\n\r\n                let closest = closestVertex(co, r2, addz(snappedMousePosWorld, 0));\r\n\r\n                if (closest >= 0) {\r\n\r\n                    const cellSize = zoom_scale(viewport.zoomLevel);\r\n                    if (closest === 0 && co.length > 2) {\r\n\r\n                        const clockWise = isClockwise(co);\r\n                        const polypoints = clockWise ? co.reverse() : co;\r\n                        const poly = Polygon.new(MatF32.fromCols(polypoints));\r\n                        const color = RGBA.getIndexColor(Math.round(Math.random() * RGBA.DEFAULT_COLORS.length)).cp().a(0.75);\r\n                        const dobj = DrawObject.new(poly, Data.new({\r\n                            fillStyle: color,\r\n                            strokeStyle: color.changeValue(-0.5)\r\n                        }),\r\n                            Transform.new(), createProperties({\r\n                                gridCellLength: cellSize,\r\n                                gridCellHeight: cellSize\r\n                            })\r\n                        );\r\n\r\n                        this.reset();\r\n                        setObjects(() => [...objects, dobj]);\r\n                        requestVisUpdate();\r\n\r\n                    }\r\n                    else if (closest === co.length - 1) {\r\n                        const line = LineStrip.new(MatF32.fromCols(co));\r\n                        const color = RGBA.getIndexColor(Math.round(Math.random() * RGBA.DEFAULT_COLORS.length)).cp().a(0.75);\r\n\r\n                        const dobj = DrawObject.new(line, Data.new(\r\n                            {\r\n                                strokeStyle: color,\r\n                                lineWidth: 2\r\n                            }\r\n                        ), Transform.new(),\r\n                            createProperties({\r\n                                gridCellLength: cellSize,\r\n                                gridCellHeight: cellSize\r\n                            }));\r\n\r\n                        this.reset();\r\n                        setObjects(() => [...objects, dobj]);\r\n                        requestVisUpdate();\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    this.currentObject.push(addz(snappedMousePosWorld, 0));\r\n                    requestVisUpdate();\r\n                }\r\n            }\r\n            else if (actionType === ACTION_MOUSE_MOVE) {\r\n                const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([5, 5, 0]));\r\n\r\n                let closest = closestVertex(this.currentObject, r2, addz(snappedMousePosWorld, 0));\r\n                this.hoverIndex = closest;\r\n                requestVisUpdate();\r\n            } else if (actionType === ACTION_MOUSE_UP_RIGHT) {\r\n                this.reset();\r\n                requestVisUpdate();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n//*********************************************************\r\nconst CREATE_RECT_STATE_WAITING = 0;\r\nconst CREATE_RECT_STATE_DOWN = 1;\r\nclass CreateRectTool {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new CreateRectTool();\r\n    }\r\n\r\n    reset() {\r\n        this.state = CREATE_RECT_STATE_WAITING;\r\n        this.currentStart = null;\r\n    }\r\n\r\n    updateVis(toolState) {\r\n\r\n        const overlay = [];\r\n        const { mouse, viewTransforms } = toolState;\r\n        const { snappedMousePosWorld } = mouse;\r\n        const { setOverlayObjects } = toolState.overlay;\r\n        const cursorStyle = Data.new({\r\n            fillStyle: RGBA.PURPLE.cp().a(0.5)\r\n        });\r\n\r\n        overlay.push(\r\n            DrawObject.new(Point.new(addz(snappedMousePosWorld), 5), cursorStyle, Transform.new(),\r\n                createProperties({\r\n                    z: Infinity\r\n                }))\r\n        );\r\n        if (this.state === CREATE_RECT_STATE_DOWN) {\r\n            const p0 = this.currentStart;\r\n            const p1 = addz(snappedMousePosWorld, 0);\r\n\r\n            const bmin = mat.cwiseMin(p0, p1);\r\n            const bmax = mat.cwiseMax(p0, p1);\r\n            const d = mat.fromTo(bmin, bmax);\r\n            const b1 = mat.add(bmin, mat.scale(mat.X, d.at(0)));\r\n            const b3 = mat.add(bmin, mat.scale(mat.Y, d.at(1)));\r\n            const polypoints = MatF32.fromCols([\r\n                bmin,\r\n                b1,\r\n                bmax,\r\n                b3\r\n            ]);\r\n\r\n            const poly = Polygon.new(polypoints);\r\n            const dobj = DrawObject.new(poly, Data.new({\r\n                strokeStyle: RGBA.RED.cp().a(0.5),\r\n                fillStyle: RGBA.LIME.cp().a(0.5),\r\n            }));\r\n            overlay.push(dobj);\r\n\r\n            // show length\r\n            const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([5, 0, 0]));\r\n            const r = Math.sqrt(r2);\r\n            {\r\n                const mid = mat.add(bmin, mat.scale(mat.X, 0.5 * d.at(0)));\r\n                const n = mat.Y;\r\n                const textpos = mat.add(mid, mat.scale(n, -r));\r\n\r\n                overlay.push(DrawObject.new(Text.new(textpos, d.at(0).toFixed(2)),\r\n                    Data.new(), Transform.new(), createProperties({\r\n                        z: Infinity\r\n                    })));\r\n\r\n            }\r\n            {\r\n                const mid = mat.add(bmax, mat.scale(mat.Y, -0.5 * d.at(1)));\r\n                const n = mat.X;\r\n                const textpos = mat.add(mid, mat.scale(n, r));\r\n\r\n                overlay.push(DrawObject.new(Text.new(textpos, d.at(1).toFixed(2)),\r\n                    Data.new(), Transform.new(), createProperties({\r\n                        z: Infinity\r\n                    })));\r\n\r\n            }\r\n\r\n        }\r\n        setOverlayObjects(() => overlay);\r\n\r\n    }\r\n\r\n    render(toolState) {\r\n\r\n        return null;\r\n\r\n\r\n\r\n    }\r\n    update(toolState, action) {\r\n        const { type: actionType } = action;\r\n        const { mouse, context, viewTransforms } = toolState;\r\n        const { snappedMousePosWorld } = mouse;\r\n        const { objects, setObjects, viewport } = context;\r\n\r\n        const { requestVisUpdate } = toolState;\r\n\r\n\r\n        if (this.state === CREATE_RECT_STATE_WAITING) {\r\n\r\n            if (actionType === ACTION_MOUSE_DOWN_LEFT) {\r\n                const editPoints = addz(snappedMousePosWorld, 0);\r\n\r\n                this.state = CREATE_RECT_STATE_DOWN;\r\n                this.currentStart = editPoints;\r\n                requestVisUpdate();\r\n\r\n            }\r\n\r\n        }\r\n        else if (this.state === CREATE_RECT_STATE_DOWN) {\r\n\r\n            if (actionType === ACTION_MOUSE_UP_LEFT) {\r\n                const p0 = this.currentStart;\r\n                const p1 = addz(snappedMousePosWorld, 0);\r\n\r\n                const bmin = mat.cwiseMin(p0, p1);\r\n                const bmax = mat.cwiseMax(p0, p1);\r\n                const d = mat.fromTo(bmin, bmax);\r\n                const r2 = computeTransformedDistanceSquared(\r\n                    viewTransforms.MCanvas2Viewport, VecF32.from([4, 0, 0]));\r\n                const dx = d.at(0);\r\n                const dy = d.at(1);\r\n                if (dx * dx < r2 || dy * dy < r2) {\r\n                    // points to close together\r\n                    this.reset();\r\n                    requestVisUpdate();\r\n                }\r\n                else {\r\n                    // create points\r\n\r\n\r\n                    const polypoints = [\r\n                        bmin,\r\n                        mat.add(bmin, mat.scale(mat.X, d.at(0))),\r\n                        bmax,\r\n                        mat.add(bmin, mat.scale(mat.Y, d.at(1)))\r\n                    ];\r\n\r\n                    const color = RGBA.getIndexColor(\r\n                        Math.round(Math.random() * RGBA.DEFAULT_COLORS.length)).cp().a(0.75);\r\n\r\n                    const poly = Polygon.new(MatF32.fromCols(polypoints));\r\n                    const cellsize = zoom_scale(viewport.zoomLevel);\r\n                    const dobj = DrawObject.new(poly, Data.new({\r\n                        fillStyle: color,\r\n                        strokeStyle: color.changeValue(-0.5)\r\n                    }), Transform.new(), createProperties({\r\n                        gridCellLength: cellsize,\r\n                        gridCellHeight: cellsize\r\n\r\n\r\n                    }));\r\n\r\n                    this.reset();\r\n                    setObjects(() => [...objects, dobj]);\r\n\r\n                }\r\n                this.reset();\r\n                requestVisUpdate();\r\n\r\n            } else if (actionType === ACTION_MOUSE_MOVE) {\r\n                requestVisUpdate();\r\n            }\r\n            else if (actionType === ACTION_MOUSE_UP_RIGHT) {\r\n                this.reset();\r\n                requestVisUpdate();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction PropertyWindow(props) {\r\n    const obj = props.object;\r\n\r\n    const [combineCellSize, setCombineCellSize] = useState(true);\r\n\r\n    if (!obj) {\r\n        return <div>\r\n            No Object selected\r\n      </div>\r\n    }\r\n\r\n    const data = obj.styleData;\r\n    const fillColor = data.get(\"fillStyle\", RGBA.WHITE);\r\n    const strokeColor = data.get(\"strokeStyle\", RGBA.WHITE);\r\n\r\n    const alpha = obj.transform.alpha;\r\n    const scale = obj.transform.scale;\r\n\r\n\r\n    const z = obj.options.z;\r\n\r\n    const onAlphaChange = value => {\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            values: {\r\n                alpha: value\r\n            }\r\n        })\r\n    };\r\n\r\n    const onScaleChange = (sx, sy) => {\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            values: {\r\n                scale: VecF32.from([sx, sy, 1])\r\n            }\r\n        })\r\n    };\r\n\r\n    const onBoundChange = (type, e) => {\r\n        const options = {};\r\n        options[type] = e;\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            options: options\r\n        });\r\n    }\r\n\r\n    const onVanishChange = e => {\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            options: {\r\n                showBoundVanishingLines: e\r\n            }\r\n        });\r\n    };\r\n\r\n    const handlePropertyChange = (prop, value) => {\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            options: {\r\n                [prop]: value\r\n            }\r\n        });\r\n    }\r\n    const onFillColorChange = color => {\r\n        const rgb = color.rgb;\r\n        const newcolor = RGBA.new(rgb.r / 255, rgb.g / 255, rgb.b / 255, rgb.a);\r\n        const newData = data.copy();\r\n        newData.set(\"fillStyle\", newcolor);\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            values: {\r\n                styleData: newData\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    const onStrokeColorChange = color => {\r\n        const rgb = color.rgb;\r\n        const newcolor = RGBA.new(rgb.r / 255, rgb.g / 255, rgb.b / 255, rgb.a);\r\n        const newData = data.copy();\r\n        newData.set(\"strokeStyle\", newcolor);\r\n        props.onChange({\r\n            object: obj,\r\n            index: props.index,\r\n            values: {\r\n                styleData: newData\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    const cellSizeSetters = <>\r\n        <NumberInputTimeout value={obj.options.gridCellLength}\r\n            valueName=\"Grid cell length\"\r\n            timeout={250}\r\n            size={6}\r\n            handleChange={\r\n                v => {\r\n                    const size = Math.max(MIN_GRID_SIZE / 4, v);\r\n                    handlePropertyChange(\"gridCellLength\", size);\r\n                    if (combineCellSize) {\r\n                        handlePropertyChange(\"gridCellHeight\",\r\n                            size);\r\n                    }\r\n                }} />\r\n        <NumberInputTimeout value={obj.options.gridCellHeight}\r\n            valueName=\"Grid cell height\"\r\n            timeout={250}\r\n            size={6}\r\n            handleChange={\r\n                v => {\r\n                    const size = Math.max(MIN_GRID_SIZE / 4, v);\r\n\r\n                    handlePropertyChange(\"gridCellHeight\", size);\r\n                    if (combineCellSize) {\r\n                        handlePropertyChange(\"gridCellLength\",\r\n                            size);\r\n                    }\r\n                }} />\r\n    </>;\r\n\r\n    return <div>\r\n        <span className=\"title\">\r\n            Object properties (\r\n            <button onClick={() => props.handleDelete(obj, props.index)}>Delete</button>\r\n            )\r\n        </span>\r\n        <div className=\"flex-container\">\r\n            <div className=\"flex-entry\">\r\n                <span className=\"subtitle\">\r\n                    Transform\r\n                </span>\r\n                <AngleSlider angle={alpha} angleName=\"Angle\"\r\n                    handleChange={onAlphaChange}\r\n                    precision={4}\r\n                />\r\n                <NumberInput value={z} valueName=\"Height \"\r\n                    size={6}\r\n                    handleChange={v => handlePropertyChange(\"z\", Math.max(0, v))} />\r\n                <NumberInput value={scale.at(0)} valueName=\"Scale x \"\r\n                    size={6}\r\n                    handleChange={v => onScaleChange(v, scale.at(1))} />\r\n                <NumberInput value={scale.at(1)} valueName=\"Scale y \"\r\n                    size={6}\r\n                    handleChange={v => onScaleChange(scale.at(0), v)} />\r\n            </div>\r\n\r\n            <div className=\"flex-entry\">\r\n                <span className=\"subtitle\">\r\n                    Grid size\r\n                </span>\r\n                <CheckBox checked={combineCellSize} labelText=\"Use square cells\"\r\n                    handleChange={c => setCombineCellSize(() => c)} />\r\n                {cellSizeSetters}\r\n                <NumberInputTimeout value={obj.options.sideGridStart}\r\n                    valueName=\"Grid cell start\"\r\n                    timeout={500}\r\n                    size={6}\r\n                    handleChange={\r\n                        v => {\r\n                            handlePropertyChange(\"sideGridStart\",\r\n                                Math.max(0, Math.min(z, v)));\r\n                        }} />\r\n            </div>\r\n            <div className=\"flex-entry\">\r\n                <span className=\"subtitle\">\r\n                    Grid display\r\n                </span>\r\n                <CheckBox checked={obj.options.displayCellLength}\r\n                    handleChange={c => handlePropertyChange(\"displayCellLength\", c)}\r\n                    labelText=\"Cell length\"\r\n                />\r\n                <CheckBox checked={obj.options.showBoundGridBottom}\r\n                    handleChange={c => onBoundChange(\"showBoundGridBottom\", c)}\r\n                    labelText=\"Bottom grid\"\r\n                />\r\n                <CheckBox checked={obj.options.showBoundGridTop}\r\n                    handleChange={c => onBoundChange(\"showBoundGridTop\", c)}\r\n                    labelText=\"Top grid\"\r\n                />\r\n                <CheckBox checked={obj.options.showSideGridFront}\r\n                    handleChange={c => onBoundChange(\"showSideGridFront\", c)}\r\n                    labelText=\"Front grid\"\r\n                />\r\n                <CheckBox checked={obj.options.showSideGridBack}\r\n                    handleChange={c => onBoundChange(\"showSideGridBack\", c)}\r\n                    labelText=\"Rear grid\"\r\n                />\r\n                <CheckBox checked={obj.options.showBoundVanishingLines}\r\n                    handleChange={c => onVanishChange(c)}\r\n                    labelText=\"Vanishing lines\"\r\n                />\r\n            </div>\r\n            <div className=\"flex-entry\">\r\n                <span className=\"subtitle\">\r\n                    Color\r\n                </span>\r\n                <div>\r\n                    Fill color:\r\n        <ColorPicker color={fillColor} handleChange={onFillColorChange}></ColorPicker>\r\n                </div>\r\n                <div>\r\n                    Stroke color:\r\n        <ColorPicker color={strokeColor} handleChange={onStrokeColorChange}></ColorPicker>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div >\r\n}\r\nfunction ColorPicker(props) {\r\n    const [displayPicker, setDisplayPicker] = useState(false);\r\n\r\n    const color = props.color;\r\n    const handleChange = props.handleChange;\r\n\r\n    const handleClick = () => {\r\n        setDisplayPicker(!displayPicker);\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setDisplayPicker(false);\r\n    };\r\n\r\n    const styles = reactCSS({\r\n        'default': {\r\n            color: {\r\n                width: '36px',\r\n                height: '14px',\r\n                borderRadius: '2px',\r\n                background: color.toString(),\r\n            },\r\n            swatch: {\r\n                padding: '5px',\r\n                background: '#fff',\r\n                borderRadius: '1px',\r\n                boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                display: 'inline-block',\r\n                cursor: 'pointer',\r\n            },\r\n            popover: {\r\n                position: 'absolute',\r\n                zIndex: '2',\r\n            },\r\n            cover: {\r\n                position: 'fixed',\r\n                top: '0px',\r\n                right: '0px',\r\n                bottom: '0px',\r\n                left: '0px',\r\n                transform: 'translate(-100%, 0%)'\r\n            },\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div style={styles.swatch} onClick={handleClick}>\r\n                <div style={styles.color} />\r\n            </div>\r\n            {displayPicker ? <div className=\"color-popover\">\r\n                <div className=\"color-cover\" onClick={handleClose} />\r\n                <div className=\"color-container\">\r\n                    <SketchPicker color={\r\n                        {\r\n                            r: Math.round(255 * color.r()),\r\n                            g: Math.round(255 * color.g()),\r\n                            b: Math.round(255 * color.b()),\r\n                            a: color.a()\r\n                        }\r\n                    } onChange={handleChange} />\r\n                </div>\r\n            </div> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst SELECT_WAITING = 4;\r\nconst SELECT_SELECTED = 5;\r\nconst SELECT_DRAGGING = 6;\r\nconst SELECT_DRAGGING_FINISHED = 7;\r\nclass SelectEditTool {\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new SelectEditTool();\r\n    }\r\n    reset() {\r\n        this.state = SELECT_WAITING;\r\n        this.currentSelectIndex = -1;\r\n        this.hoverIndex = -1;\r\n        this.moveDownMouseWorld = VecF32.from([0, 0]);\r\n    }\r\n\r\n    render(toolState) {\r\n        // TODO maybe use additional component\r\n        const { context } = toolState;\r\n        const { objects, setObjects, viewport } = context;\r\n\r\n        const selIdx = this.currentSelectIndex;\r\n        const { requestVisUpdate } = toolState;\r\n\r\n\r\n        let handleDelete = (object, index) => {\r\n            const newObjects = [...objects];\r\n            newObjects.splice(index, 1);\r\n            setObjects(() => newObjects);\r\n            this.reset();\r\n            requestVisUpdate();\r\n\r\n        };\r\n\r\n        const changeHandler = data => {\r\n            const { index, object, options, values } = data;\r\n\r\n            if (options !== undefined) {\r\n                const newOptions = copy(object.options);\r\n                Object.assign(newOptions, data.options);\r\n                object.options = newOptions;\r\n            }\r\n\r\n            if (values) {\r\n                if (values.alpha !== undefined) {\r\n                    const trans = object.transform.copy();\r\n                    trans.setAlpha(values.alpha);\r\n                    object.setTransform(trans);\r\n                }\r\n\r\n                if (values.scale !== undefined) {\r\n                    const trans = object.transform.copy();\r\n                    trans.setScale(values.scale);\r\n                    object.setTransform(trans);\r\n                }\r\n\r\n                if (values.styleData !== undefined) {\r\n                    object.styleData = values.styleData;\r\n                }\r\n            }\r\n            setObjects(() => {\r\n                const objectsNew = [...objects];\r\n                objectsNew[index] = object;\r\n                return objectsNew;\r\n            });\r\n            requestVisUpdate();\r\n\r\n        };\r\n\r\n        const handleClearAll = () => {\r\n            this.reset();\r\n            context.setObjects(() => []);\r\n        };\r\n        const handleNoObject = (\r\n            <div>\r\n                <span className=\"title\">No object selected</span>\r\n                <button onClick={handleClearAll}\r\n                >Clear all</button>\r\n            </div>\r\n        );\r\n        return <div>\r\n            {selIdx >= 0 ?\r\n                <PropertyWindow object={selIdx >= 0 ? objects[selIdx] : null\r\n                } index={selIdx}\r\n                    onChange={changeHandler} handleDelete={handleDelete}\r\n                    viewport={viewport}></PropertyWindow > :\r\n                handleNoObject\r\n            }\r\n        </div>\r\n\r\n    }\r\n\r\n    updateVis(toolState) {\r\n\r\n        const { setOverlayObjects } = toolState.overlay;\r\n        const { mouse, context, viewTransforms } = toolState;\r\n        const { mousePosWorld } = mouse;\r\n        const { objects } = context;\r\n        const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([6, 6, 0]));\r\n\r\n        const overlay = [];\r\n        if (this.currentSelectIndex >= 0) {\r\n            const obj = objects[this.currentSelectIndex];\r\n            const drawableWorld = obj.drawableWorld;\r\n            const center = mat.copy(mat.subvec(mat.mult(obj.M, mat.hvec(obj.drawable.center, 1)), 0, 3));\r\n            const centerxy = mat.copy(mat.subvec(center, 0, 2));\r\n            const pDrawable = Point.new(center, 6);\r\n            const styleData = Data.new();\r\n            if (mat.norm2Squared(mat.sub(centerxy, mousePosWorld)) < r2) {\r\n                styleData.set(\"fillStyle\", RGBA.RED);\r\n\r\n            }\r\n            const style = Data.new({\r\n                strokeStyle: RGBA.GREEN.cp().a(1),\r\n                fillStyle: RGBA.WHITE.cp().a(0.5),\r\n                lineWidth: (4 * obj.styleData.get(\"lineWidth\", 1))\r\n            });\r\n\r\n            overlay.push(DrawObject.new(\r\n                drawableWorld, style, Transform.new(),\r\n                createProperties({ z: obj.options.z }), obj.id - 0.5));\r\n\r\n\r\n            overlay.push(DrawObject.new(\r\n                pDrawable, styleData, Transform.new(),\r\n                createProperties({ z: Infinity })));\r\n\r\n        }\r\n\r\n        if (this.hoverIndex >= 0) {\r\n            const obj = objects[this.hoverIndex];\r\n\r\n            let drawableWorld = obj.drawableWorld;\r\n            const style = Data.new({\r\n                strokeStyle: RGBA.RED.cp().a(1),\r\n                fillStyle: RGBA.WHITE.cp().a(0.5),\r\n                lineWidth: (2 * obj.styleData.get(\"lineWidth\", 1))\r\n            });\r\n\r\n            overlay.push(DrawObject.new(\r\n                drawableWorld, style, Transform.new(),\r\n                createProperties({ z: obj.options.z }), obj.id - 0.85));\r\n        }\r\n        setOverlayObjects(() => overlay);\r\n    }\r\n\r\n    update(toolState, action) {\r\n\r\n        const { type: actionType } = action;\r\n        const { mouse, context, viewTransforms } = toolState;\r\n        const { mousePosWorld } = mouse;\r\n        const { objects, setObjects } = context;\r\n\r\n        const { requestVisUpdate } = toolState;\r\n\r\n        const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([4, 4, 0]));\r\n        const r = Math.sqrt(r2);\r\n\r\n\r\n\r\n        if (this.state === SELECT_WAITING) {\r\n            const intersectSet = findIntersectSet(objects, mousePosWorld, r);\r\n\r\n            if (intersectSet.length !== 0) {\r\n\r\n                const objIndex = intersectSet[0].index;\r\n\r\n                if (actionType === ACTION_MOUSE_CLICK_LEFT) {\r\n                    this.currentSelectIndex = objIndex;\r\n                    this.state = SELECT_SELECTED;\r\n                    requestVisUpdate();\r\n\r\n\r\n                }\r\n                else if (actionType === ACTION_MOUSE_MOVE) {\r\n                    this.hoverIndex = objIndex;\r\n                    requestVisUpdate();\r\n\r\n\r\n                }\r\n            } else {\r\n                this.hoverIndex = -1\r\n                requestVisUpdate();\r\n\r\n\r\n            }\r\n        } else if (this.state === SELECT_SELECTED) {\r\n            const intersectSet = findIntersectSet(objects, mousePosWorld, r);\r\n\r\n            if (actionType === ACTION_MOUSE_CLICK_LEFT) {\r\n\r\n\r\n                // check if already selected\r\n                if (intersectSet.length === 0) {\r\n\r\n                    // Outside -> go back\r\n                    this.reset();\r\n                    requestVisUpdate();\r\n\r\n                    return;\r\n                }\r\n                let curIdx = -1;\r\n                for (let i = 0; i < intersectSet.length; i++) {\r\n                    if (intersectSet[i].index === this.currentSelectIndex) {\r\n                        curIdx = i;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // when the intersect set contains our current object, jump to the next one\r\n                // if not, jump to the top of the set\r\n                const selectIdx = curIdx >= 0 ? intersectSet[(curIdx + 1) % intersectSet.length].index : intersectSet[0].index;\r\n\r\n                this.currentSelectIndex = selectIdx;\r\n                requestVisUpdate();\r\n\r\n\r\n            } else if (actionType === ACTION_MOUSE_DOWN_LEFT) {\r\n                const currentObject = objects[this.currentSelectIndex];\r\n                const center = mat.subvec(currentObject.drawableWorld.center, 0, 2);\r\n\r\n                if (mat.norm2Squared(mat.sub(center, mousePosWorld)) < r2) {\r\n                    this.moveDownMouseWorld = mousePosWorld;\r\n                    this.state = SELECT_DRAGGING;\r\n                    requestVisUpdate();\r\n\r\n\r\n                }\r\n            } else if (actionType === ACTION_MOUSE_MOVE) {\r\n                if (intersectSet.length !== 0) {\r\n\r\n                    this.hoverIndex = intersectSet[0].index;\r\n                    requestVisUpdate();\r\n\r\n\r\n                }\r\n                else {\r\n                    this.hoverIndex = -1;\r\n                    requestVisUpdate();\r\n\r\n\r\n\r\n                }\r\n\r\n            }\r\n        } else if (this.state === SELECT_DRAGGING) {\r\n            if (actionType === ACTION_MOUSE_MOVE) {\r\n                const oi = objects[this.currentSelectIndex];\r\n                const oit = oi.transform;\r\n\r\n                const tOld = oit.t;\r\n\r\n                const dt = mat.fromTo(this.moveDownMouseWorld, mousePosWorld);\r\n\r\n                this.moveDownMouseWorld = mousePosWorld;\r\n                const dt3 = VecF32.from([dt.at(0), dt.at(1), 0]);\r\n                oit.setTranslation(mat.add(tOld, dt3));\r\n                oi.setTransform(oit);\r\n                // TODO better copy object\r\n                setObjects(() => {\r\n                    const objectsNew = [...objects];\r\n                    objectsNew[this.currentSelectIndex] = oi;\r\n                    return objectsNew;\r\n                });\r\n                requestVisUpdate();\r\n\r\n\r\n            }\r\n            else if (actionType === ACTION_MOUSE_UP_LEFT) {\r\n                this.state = SELECT_DRAGGING_FINISHED;\r\n                this.moveDownMouseWorld = VecF32.from([0, 0]);\r\n                requestVisUpdate();\r\n\r\n\r\n            }\r\n        }\r\n        else if (this.state === SELECT_DRAGGING_FINISHED) {\r\n            this.state = SELECT_SELECTED;\r\n            requestVisUpdate();\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst VIEW_STATE_WAITING = 8;\r\nconst VIEW_STATE_DRAGGING_VIEW = 9;\r\n\r\n\r\nclass ViewEditTool {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new ViewEditTool();\r\n    }\r\n\r\n    render(toolState) {\r\n        const { context, requestVisUpdate } = toolState;\r\n        const { objects, setViewport } = context;\r\n        const handleCenter = () => {\r\n            requestVisUpdate();\r\n\r\n            if (objects.length === 0) {\r\n                setViewport(cur => {\r\n                    const vp = Object.assign({}, cur);\r\n                    vp.center = VecF32.from([0, 0, 0]);\r\n                    return vp;\r\n                });\r\n                return;\r\n            }\r\n            const bmax = VecF32.from([-Infinity, -Infinity, -Infinity]);\r\n            const bmin = VecF32.from([Infinity, Infinity, Infinity]);\r\n\r\n            for (let i = 0; i < objects.length; i++) {\r\n                const oi = objects[i];\r\n                const dw = oi.drawableWorld;\r\n                mat.cwiseMax(bmax, dw.bmax, bmax);\r\n                mat.cwiseMin(bmin, dw.bmin, bmin);\r\n            }\r\n\r\n            const center = mat.scale(mat.add(bmin, bmax), 0.5);\r\n            setViewport(cur => {\r\n                const vp = Object.assign({}, cur);\r\n                vp.center = center;\r\n                return vp;\r\n            });\r\n\r\n        };\r\n        return <button onClick={handleCenter}>Center view</button>;\r\n    }\r\n\r\n    reset() {\r\n        this.state = VIEW_STATE_WAITING;\r\n        this.lastMousePos = VecF32.from([0, 0]);\r\n    }\r\n\r\n    updateVis(toolState) {\r\n        const overlay = [];\r\n        const { setOverlayObjects } = toolState.overlay;\r\n        const { context } = toolState;\r\n\r\n        const { cam, viewport } = context;\r\n\r\n        const viewMin = mat.sub(viewport.center, viewport.halfSize);\r\n        const viewMax = mat.add(viewport.center, viewport.halfSize);\r\n\r\n        const camPos = cam.pos;\r\n\r\n        const clampedPos = mat.cwiseMin(viewMax, camPos);\r\n        mat.cwiseMax(clampedPos, viewMin, clampedPos);\r\n\r\n\r\n        const outside = clampedPos.at(0) !== camPos.at(0) || clampedPos.at(1) !== camPos.at(1);\r\n\r\n        let camBGStyle = Data.new({\r\n            fillStyle: RGBA.YELLOW.cp().a(0.25),\r\n            strokeStyle: RGBA.BLACK\r\n        });\r\n\r\n\r\n        if (outside) {\r\n            // camera outside\r\n            camBGStyle.set(\"fillStyle\", RGBA.RED.cp().a(0.25));\r\n        }\r\n\r\n        const pcenter = Point.new(clampedPos, 10);\r\n\r\n        overlay.push(DrawObject.new(pcenter, camBGStyle, Transform.new(),\r\n            createProperties({ z: Infinity })));\r\n\r\n        setOverlayObjects(() => overlay);\r\n\r\n    }\r\n\r\n    update(toolState, action) {\r\n        const { mouse, context, viewTransforms, requestVisUpdate } = toolState;\r\n        const { type: actionType } = action;\r\n\r\n        if (this.state === VIEW_STATE_WAITING) {\r\n            if (actionType === ACTION_MOUSE_DOWN_LEFT) {\r\n\r\n                // check if close to camPos\r\n\r\n                this.lastMousePos = mouse.mousePosCanvas;\r\n                this.state = VIEW_STATE_DRAGGING_VIEW;\r\n                requestVisUpdate();\r\n\r\n            }\r\n        }\r\n        else if (this.state === VIEW_STATE_DRAGGING_VIEW) {\r\n            if (actionType === ACTION_MOUSE_MOVE) {\r\n\r\n                const lastMousePos = this.lastMousePos;\r\n                context.setViewport(current => {\r\n                    const currentCenter = current.center;\r\n\r\n                    const deltaCanvas = mat.fromTo(mouse.mousePosCanvas, lastMousePos);\r\n                    this.lastMousePos = mouse.mousePosCanvas;\r\n                    const deltaWorld = mat.subvec(mat.mult(viewTransforms.MCanvas2Viewport,\r\n                        mat.hvec(addz(deltaCanvas, 0), 0))\r\n                        , 0, 3\r\n                    );\r\n                    return {\r\n                        center: mat.add(currentCenter, deltaWorld),\r\n                        halfSize: current.halfSize,\r\n                        zoomLevel: current.zoomLevel\r\n                    };\r\n                });\r\n                requestVisUpdate();\r\n\r\n            }\r\n            else if (actionType === ACTION_MOUSE_UP_LEFT) {\r\n                this.state = VIEW_STATE_WAITING;\r\n                requestVisUpdate();\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass CameraEditTool {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new CameraEditTool();\r\n    }\r\n\r\n    render(toolState) {\r\n\r\n        const { context } = toolState;\r\n        const { cam, setCam, perspective, setPerspective } = context;\r\n        const { pos: camPos, dir: camDir } = cam;\r\n        const { fov } = perspective;\r\n        const camZ = camPos.at(2);\r\n\r\n        const { r, theta, phi } = mat.cartesianToSpherical(camDir);\r\n\r\n        const handleAngleChange = (theta, phi) => {\r\n            setCam(currentCam => {\r\n                return {\r\n                    pos: currentCam.pos,\r\n                    dir: mat.spherical(theta, phi, r),\r\n                    up: currentCam.up\r\n                };\r\n            });\r\n        };\r\n\r\n        const handleCamChange = (x, y, z) => {\r\n            setCam(currentCam => {\r\n                return {\r\n                    pos: VecF32.from([x, y, z]),\r\n                    dir: currentCam.dir,\r\n                    up: currentCam.up\r\n                };\r\n            });\r\n        };\r\n        return <div>\r\n            <span className=\"title\">\r\n                Camera properties ( <button onClick={\r\n                    () => {\r\n                        setCam(() => {\r\n                            return {\r\n                                pos: VecF32.from([-0.4, -1.5, 1]),\r\n                                dir: VecF32.from([0.4, 1.5, -1]),\r\n                                up: mat.Z\r\n                            }\r\n                        });\r\n                        setPerspective(cur => (\r\n                            {\r\n                                fov: mat.deg2rad(90),\r\n                                aspect: cur.aspect\r\n                            }));\r\n                    }\r\n                }>Reset</button>)\r\n            </span>\r\n            <div className=\"flex-container\">\r\n                <div className=\"flex-entry\">\r\n                    <span className=\"subtitle\">\r\n                        Camera position\r\n                    </span>\r\n                    <NumberInput value={camPos.at(0)} valueName=\"X\"\r\n                        handleChange={\r\n                            v => handleCamChange(v, camPos.at(1), camPos.at(2))\r\n                        }\r\n                    />\r\n                    <NumberInput value={camPos.at(1)} valueName=\"Y\"\r\n                        handleChange={\r\n                            v => handleCamChange(camPos.at(0), v, camPos.at(2))\r\n                        }\r\n                    />\r\n                    <NumberInput value={camZ} valueName=\"Height\"\r\n                        handleChange={\r\n                            v => handleCamChange(camPos.at(0), camPos.at(1), v)\r\n                        }\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"flex-entry\">\r\n                    <span className=\"subtitle\">\r\n                        Camera Orientation\r\n                    </span>\r\n                    <AngleSlider angle={phi} angleName=\"Longitude\"\r\n                        handleChange={a => handleAngleChange(theta, a)} />\r\n                    <AngleSlider\r\n                        angle={theta} angleName=\"Latitude\" handleChange={a => handleAngleChange(a, phi)}\r\n                        angleMin={1} angleMax={179} clockwise={false}\r\n                    />\r\n                    <AngleSlider angle={fov} angleName=\"Field of vision\" handleChange={a => setPerspective(cur => (\r\n                        {\r\n                            fov: a,\r\n                            aspect: cur.aspect\r\n                        })\r\n                    )}\r\n                        angleMin={1} angleMax={179} clockwise={false} />\r\n                </div>\r\n            </div>\r\n        </div >\r\n    }\r\n\r\n    reset() {\r\n    }\r\n\r\n    updateVis(toolState) {\r\n    }\r\n\r\n    update(toolState, action) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction jsonMatToMat(entry) {\r\n    return MatF32.from(entry.data, entry.rows, entry.cols);\r\n}\r\n\r\nfunction jsonReviver(key, val) {\r\n    if (key === \"drawable\") {\r\n        const { type, points } = val;\r\n        if (type === \"Polygon\") {\r\n            return Polygon.new(jsonMatToMat(points));\r\n\r\n        } else if (type === \"LineStrip\") {\r\n            return LineStrip.new(jsonMatToMat(points));\r\n        }\r\n        else if (type === \"Point\") {\r\n            return Point.new(jsonMatToMat(points), val.radius);\r\n\r\n        } else if (type === \"Text\") {\r\n            return Text.new(jsonMatToMat(points), val.text);\r\n        }\r\n    }\r\n    else if (key === \"transform\") {\r\n        const { t, alpha, scale } = val;\r\n        return Transform.new(jsonMatToMat(t), alpha, jsonMatToMat(scale));\r\n    }\r\n    else if (key === \"drawobject\") {\r\n        const { drawable, transform, properties, styleData, id } = val;\r\n\r\n        return DrawObject.new(drawable, Data.new(styleData), transform, properties, id);\r\n    }\r\n    else if (key === \"fillStyle\") {\r\n        const { r, g, b, a } = val;\r\n        return RGBA.new(r, g, b, a);\r\n    }\r\n    else if (key === \"strokeStyle\") {\r\n        const { r, g, b, a } = val;\r\n        return RGBA.new(r, g, b, a);\r\n    }\r\n    else if (key === \"objects\") {\r\n        return val.map(e => e.drawobject);\r\n    }\r\n    else if (key === \"cam\") {\r\n        const { pos, dir, up } = val;\r\n        return {\r\n            pos: jsonMatToMat(pos),\r\n            dir: jsonMatToMat(dir),\r\n            up: jsonMatToMat(up),\r\n        }\r\n    }\r\n\r\n    return val;\r\n}\r\n\r\n\r\nfunction LoadSaveComponent({ objects, setObjects, cam, setCam }) {\r\n    const [showLoadWindow, setShowLoadWindow] = useState(false);\r\n    const textRef = useRef(null);\r\n\r\n    const onLoadClick = () => {\r\n        const text = textRef.current.value;\r\n        const scene = JSON.parse(text, jsonReviver);\r\n        setObjects(current => [...current, ...scene.objects]);\r\n        setCam(() => scene.cam);\r\n        setShowLoadWindow(false);\r\n    }\r\n    const window = (\r\n        <div>\r\n            <div className=\"fullscreen transparent\" onClick={\r\n                () => setShowLoadWindow(() => false)\r\n            } />\r\n            <div className=\"load-window\">\r\n                <span className=\"title\">\r\n                    Type in your json object here:\r\n                </span>\r\n                <div>\r\n                    <textarea ref={textRef} rows={10} cols={80}></textarea>\r\n                </div>\r\n                <button onClick={onLoadClick}>Load</button>\r\n                <button onClick={() => setShowLoadWindow(false)}>Close</button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const handleClickSave = () => {\r\n        var a = document.createElement('a');\r\n        var blob = new Blob([JSON.stringify({\r\n            objects, cam: {\r\n                pos: mat.toJSON(cam.pos),\r\n                dir: mat.toJSON(cam.dir),\r\n                up: mat.toJSON(cam.up)\r\n            }\r\n        })], {\r\n            type: 'application/json'\r\n        });\r\n        a.href = URL.createObjectURL(blob);\r\n        const currentTime = new Date();\r\n        const formattedTime = currentTime.getFullYear() + \"-\" +\r\n            (currentTime.getMonth() + 1) + \"-\" +\r\n            currentTime.getDate()\r\n\r\n        a.download = formattedTime + \"_scene.json\";\r\n        a.click();\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <button onClick={handleClickSave}>Save to JSON</button>\r\n            <button onClick={() => setShowLoadWindow(true)}>Load from JSON</button>\r\n            {showLoadWindow ? window : null}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nclass LoadSaveTool {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new LoadSaveTool();\r\n    }\r\n\r\n    reset() {\r\n    }\r\n\r\n    updateVis(toolState) {\r\n\r\n    }\r\n\r\n    render(toolState) {\r\n\r\n        const { context } = toolState;\r\n        const { objects, setObjects, cam, setCam } = context;\r\n        return <LoadSaveComponent objects={objects} setObjects={setObjects}\r\n            cam={cam} setCam={setCam}\r\n        ></LoadSaveComponent>;\r\n\r\n    }\r\n    update(toolState, action) {\r\n\r\n    }\r\n\r\n}\r\n\r\nconst FREEHAND_STATE_WAITING = 0;\r\nconst FREEHAND_STATE_MOUSEDOWN = 1;\r\n\r\nclass FreeHandPolyTool {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    static new() {\r\n        return new FreeHandPolyTool();\r\n    }\r\n\r\n    reset() {\r\n        this.state = FREEHAND_STATE_WAITING;\r\n        this.currentObject = [];\r\n    }\r\n\r\n    updateVis(toolState) {\r\n\r\n        const overlay = [];\r\n        const { mouse } = toolState;\r\n        const { mousePosWorld } = mouse;\r\n        const { setOverlayObjects } = toolState.overlay;\r\n        {\r\n            const cursorStyle = Data.new({\r\n                fillStyle: RGBA.PURPLE.cp().a(0.5)\r\n            });\r\n\r\n            overlay.push(\r\n                DrawObject.new(Point.new(addz(mousePosWorld), 5), cursorStyle, Transform.new(),\r\n                    createProperties({\r\n                        z: Infinity\r\n                    }))\r\n            );\r\n        }\r\n\r\n\r\n        const co = this.currentObject;\r\n\r\n        const previewPoints = [...co, addz(mousePosWorld)];\r\n        if (previewPoints.length === 2) {\r\n\r\n            overlay.push(\r\n                DrawObject.new(LineStrip.new(MatF32.fromCols(previewPoints)),\r\n                    Data.new({\r\n                        strokeStyle: RGBA.RED.cp().a(0.5)\r\n                    }))\r\n            );\r\n        } else if (previewPoints.length > 2) {\r\n\r\n            overlay.push(\r\n                DrawObject.new(Polygon.new(MatF32.fromCols(previewPoints)),\r\n                    Data.new({\r\n                        strokeStyle: RGBA.RED.cp().a(0.5),\r\n                        fillStyle: RGBA.LIME.cp().a(0.5),\r\n                    }))\r\n            );\r\n        }\r\n\r\n        setOverlayObjects(() => overlay);\r\n\r\n    }\r\n\r\n    render(toolState) {\r\n\r\n        return null;\r\n\r\n\r\n\r\n    }\r\n    update(toolState, action) {\r\n        const { type: actionType } = action;\r\n        const { mouse, context, viewTransforms } = toolState;\r\n        const { mousePosWorld } = mouse;\r\n        const { objects, setObjects, viewport } = context;\r\n\r\n        const { requestVisUpdate } = toolState;\r\n\r\n        if (this.state === FREEHAND_STATE_WAITING) {\r\n\r\n            if (actionType === ACTION_MOUSE_DOWN_LEFT) {\r\n                const editPoints = [addz(mousePosWorld, 0)];\r\n\r\n                this.state = FREEHAND_STATE_MOUSEDOWN;\r\n                this.currentObject = editPoints;\r\n                requestVisUpdate();\r\n\r\n            } else if (actionType === ACTION_MOUSE_MOVE) {\r\n                requestVisUpdate();\r\n            }\r\n\r\n        }\r\n        else if (this.state === FREEHAND_STATE_MOUSEDOWN) {\r\n\r\n            if (actionType === ACTION_MOUSE_UP_LEFT) {\r\n                const co = this.currentObject;\r\n\r\n                if (co.length > 2) {\r\n                    const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([1, 1, 0]));\r\n                    const r = Math.sqrt(r2);\r\n                    const clockWise = isClockwise(co);\r\n                    let polypoints = clockWise ? co.reverse() : co;\r\n                    polypoints = simplifyLine(polypoints, r).map(v => addz(v));\r\n                    const poly = Polygon.new(MatF32.fromCols(polypoints));\r\n                    const color = RGBA.getIndexColor(Math.round(Math.random() * RGBA.DEFAULT_COLORS.length)).cp().a(0.75);\r\n\r\n                    const cellsize = zoom_scale(viewport.zoomLevel);\r\n                    const dobj = DrawObject.new(poly, Data.new({\r\n                        fillStyle: color,\r\n                        strokeStyle: color.changeValue(-0.5)\r\n                    }), Transform.new(), createProperties({\r\n                        gridCellLength: cellsize,\r\n                        gridCellHeight: cellsize\r\n\r\n                    }));\r\n\r\n                    this.reset();\r\n                    setObjects(() => [...objects, dobj]);\r\n\r\n                }\r\n                this.reset();\r\n                requestVisUpdate();\r\n\r\n            } else if (actionType === ACTION_MOUSE_MOVE) {\r\n                const co = this.currentObject;\r\n\r\n                const r2 = computeTransformedDistanceSquared(viewTransforms.MCanvas2Viewport, VecF32.from([1, 1, 0]));\r\n                const d2 = mat.norm2Squared(mat.sub(mat.subvec(co[co.length - 1], 0, 2), mousePosWorld));\r\n\r\n                if (d2 < r2) {\r\n                    requestVisUpdate();\r\n                    return;\r\n                }\r\n                this.currentObject.push(addz(mousePosWorld, 0));\r\n\r\n                requestVisUpdate();\r\n            }\r\n            else if (actionType === ACTION_MOUSE_UP_RIGHT) {\r\n                this.reset();\r\n                requestVisUpdate();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction useViewportMove({\r\n    enabled = true,\r\n    borderSize = 10,\r\n    speed = 1.0,\r\n    mouse,\r\n    viewTransforms,\r\n    setViewport }) {\r\n\r\n    const [moveState, setMoveState] = useState({\r\n        dx: 0, dy: 0, moving: false\r\n    });\r\n    const { canvasSize } = viewTransforms;\r\n\r\n    const { mousePosCanvas: mp } = mouse;\r\n\r\n    let { dx: curdx, dy: curdy, moving: curmoving } = moveState;\r\n    useEffect(() => {\r\n        if (!curmoving) {\r\n            return;\r\n        }\r\n        const interval = 100;\r\n\r\n        const handle = setInterval(() => {\r\n\r\n            setViewport(current => {\r\n                const currentCenter = current.center;\r\n\r\n                const cellsize = zoom_scale(current.zoomLevel);\r\n\r\n                const l = speed * interval / 1000 * cellsize;\r\n                const deltaWorld = VecF32.from([l * curdx, l * curdy, 0]);\r\n\r\n                return {\r\n                    center: mat.add(currentCenter, deltaWorld),\r\n                    halfSize: current.halfSize,\r\n                    zoomLevel: current.zoomLevel\r\n                };\r\n            });\r\n\r\n\r\n        }, interval);\r\n        return () => {\r\n            clearInterval(handle);\r\n        }\r\n    }, [curmoving, curdx, curdy, setViewport, viewTransforms, speed]);\r\n\r\n\r\n    const x = mp.at(0);\r\n    const y = mp.at(1);\r\n\r\n    useEffect(() => {\r\n        // check sides\r\n        let dx = 0;\r\n        let dy = 0;\r\n        if (mouse.inside) {\r\n            if (x < borderSize) {\r\n                dx -= 1;\r\n            } else if (x > canvasSize.width - borderSize) {\r\n                dx += 1;\r\n            }\r\n            if (y < borderSize) {\r\n                dy -= 1;\r\n            } else if (y > canvasSize.height - borderSize) {\r\n                dy += 1;\r\n            }\r\n        }\r\n\r\n        const moving = dx !== 0 || dy !== 0;\r\n        setMoveState(() => ({\r\n            moving,\r\n            dx, dy\r\n        }));\r\n    }, [x, y, canvasSize.width, canvasSize.height, borderSize, mouse.inside]);\r\n\r\n\r\n}\r\n\r\nexport {\r\n    CreatePointTool,\r\n    CreateRectTool,\r\n    SelectEditTool,\r\n    ViewEditTool,\r\n    LoadSaveTool,\r\n    FreeHandPolyTool,\r\n    CameraEditTool,\r\n    useViewportMove\r\n}","const ACTION_MOUSE_CLICK_RIGHT = 1;\r\nconst ACTION_MOUSE_MOVE = 2;\r\nconst ACTION_MOUSE_DOWN_RIGHT = 3;\r\nconst ACTION_MOUSE_UP_RIGHT = 4;\r\nconst ACTION_MOUSE_CLICK_LEFT = 5;\r\nconst ACTION_MOUSE_DOWN_LEFT = 6;\r\nconst ACTION_MOUSE_UP_LEFT = 7;\r\n\r\n\r\nexport {\r\n    ACTION_MOUSE_MOVE,\r\n    ACTION_MOUSE_CLICK_RIGHT,\r\n    ACTION_MOUSE_DOWN_RIGHT,\r\n    ACTION_MOUSE_UP_RIGHT,\r\n    ACTION_MOUSE_CLICK_LEFT,\r\n    ACTION_MOUSE_DOWN_LEFT,\r\n    ACTION_MOUSE_UP_LEFT\r\n};","import React, { useState, useEffect, useCallback, useContext } from 'react';\n\nimport './App.css';\nimport * as mat from './lib/jsmatrix';\nimport { MatF32, VecF32 } from './lib/jsmatrix';\nimport {\n  CheckBox, ValueSlider, NumberInput\n} from './inputComponents.js';\n\nimport {\n  computeFrustumPlanes,\n  intersectLinePlane,\n  planeFromPointNormal,\n  transformPlane,\n  pointInside,\n  addz\n} from './pointUtils.js'\n\nimport { HelpWindow } from \"./HelpWindow.js\";\n\nimport { useEventHandler } from './components.js';\nimport {\n  Data,\n  formatNumber\n} from './utils.js';\nimport {\n  RGBA\n} from './color.js';\nimport { CanvasOutput, SVGOutput } from './renderoutput.js';\nimport { Screen } from './utils.js'\nimport { useFirstPersonController } from './camera';\nimport {\n  Displayable,\n  Polygon,\n  LineStrip,\n  Point,\n  Text\n} from './geom.js'\n\nimport {\n  zoom_scale,\n  computeViewportHalfSize\n} from './commonView.js';\n\nimport {\n  CreatePointTool,\n  CreateRectTool,\n  SelectEditTool,\n  ViewEditTool,\n  LoadSaveTool,\n  FreeHandPolyTool,\n  CameraEditTool,\n  useViewportMove\n} from './tools.js';\nimport { ACTION_MOUSE_CLICK_LEFT, ACTION_MOUSE_UP_LEFT, ACTION_MOUSE_UP_RIGHT, ACTION_MOUSE_DOWN_LEFT, ACTION_MOUSE_DOWN_RIGHT, ACTION_MOUSE_MOVE } from './actions';\n\nconst MAX_ZOOM = 50;\n\nfunction updateViewportAspect(current, zoom) {\n  const { center: c, halfSize: h } = current;\n  const hw = h.at(0);\n  const hh = h.at(1);\n  const aspect = hw / hh;\n  // old max size\n  const size = computeViewportHalfSize(zoom);\n  if (hw > hh) {\n    const newHalfSize = VecF32.from([size, size / aspect, 0]);\n    return {\n      center: c,\n      halfSize: newHalfSize,\n      zoomLevel: zoom\n    }\n  }\n  else {\n    const newHalfSize = VecF32.from([size * aspect, size, 0]);\n\n    return {\n      center: c,\n      halfSize: newHalfSize,\n      zoomLevel: zoom\n    }\n  }\n}\n\nfunction clipDrawable(d, clipplanes) {\n\n  if (clipplanes) {\n\n    for (let i = 0; i < clipplanes.length; i++) {\n      const plane = clipplanes[i];\n      d = d.clip(plane);\n      if (!d) {\n        return null;\n      }\n    }\n  }\n\n  return d;\n\n}\n\n\nfunction useComponentRef() {\n  const [element, setElement] = useState(null)\n  const ref = useCallback(e => {\n    setElement(e);\n  }, []);\n\n  return [element, ref];\n}\n\n\n\n\n\nfunction event2Coordinate(e, flipy) {\n  flipy = mat.optional(flipy, true);\n  const rect = e.target.getBoundingClientRect();\n  const x = e.clientX - rect.left; //x position within the element.\n  let y = e.clientY - rect.top;  //y position within the element.\n  if (flipy) {\n    y = rect.height - 1 - y;\n  }\n  return VecF32.from([x, y]);\n}\n\n\nfunction transformMouse(mp, M) {\n  const mp4 = VecF32.from([mp.at(0), mp.at(1), 0, 1]);\n  const pWorld = VecF32.copy(mat.subvec(mat.mult(M, mp4), 0, 2));\n  return pWorld;\n}\n\n\nfunction ToolSelect(props) {\n\n  const onToolChange = props.onToolChange;\n  const currentTool = props.tool;\n  return (\n    <>\n      <span className=\"title\">\n        Tools\n      </span>\n      <div className=\"toolselect-buttons\">\n        <button disabled={currentTool === TOOL_CREATE_RECT} onClick={() => { onToolChange(TOOL_CREATE_RECT); }}>Rectangle</button>\n        <button disabled={currentTool === TOOL_CREATE} onClick={() => { onToolChange(TOOL_CREATE); }}>Points</button>\n        <button disabled={currentTool === TOOL_FREEDRAW} onClick={() => { onToolChange(TOOL_FREEDRAW); }}>Freehand</button>\n        <button disabled={currentTool === TOOL_SELECT} onClick={() => { onToolChange(TOOL_SELECT); }}>Select</button>\n        <button disabled={currentTool === TOOL_VIEW} onClick={() => { onToolChange(TOOL_VIEW); }}>Move viewport</button>\n        <button disabled={currentTool === TOOL_CAMERA} onClick={() => { onToolChange(TOOL_CAMERA); }}>Camera</button>\n        <button disabled={currentTool === TOOL_LOAD_SAVE} onClick={() => { onToolChange(TOOL_LOAD_SAVE); }}>Load/Save</button>\n      </div>\n    </>\n  );\n}\n\nconst TOOL_CREATE = 0;\nconst TOOL_SELECT = 1;\nconst TOOL_VIEW = 2;\nconst TOOL_FREEDRAW = 3;\nconst TOOL_LOAD_SAVE = 4;\nconst TOOL_CREATE_RECT = 5;\nconst TOOL_CAMERA = 6;\n\n\n\n\nconst STATE_CANVAS_DRAG_WAITING = 0;\nconst STATE_CANVAS_DRAG_DRAGGING = 1;\nfunction useCanvasDrag({ canvas, context, viewTransforms }) {\n\n  const [dragState, setDragState] = useState(STATE_CANVAS_DRAG_WAITING);\n\n  const [lastMousePos, setLastMousePos] = useState(VecF32.from([0, 0]));\n\n  const handleMouseMove = useCallback((e) => {\n    if (dragState !== STATE_CANVAS_DRAG_DRAGGING) {\n      return;\n    }\n    const currentPos = event2Coordinate(e);\n    setLastMousePos(() => currentPos);\n    context.setViewport(current => {\n      const currentCenter = current.center;\n      const deltaCanvas = mat.fromTo(currentPos, lastMousePos);\n      const deltaWorld = mat.subvec(mat.mult(viewTransforms.MCanvas2Viewport,\n        mat.hvec(addz(deltaCanvas, 0), 0))\n        , 0, 3\n      );\n      return {\n        center: mat.add(currentCenter, deltaWorld),\n        halfSize: current.halfSize,\n        zoomLevel: current.zoomLevel\n      };\n    });\n  }, [context, dragState, lastMousePos, viewTransforms]);\n  const handleMouseDown = useCallback((e) => {\n    if (e.button !== 1) {\n      return;\n    }\n    setLastMousePos(() => event2Coordinate(e));\n    setDragState(() => STATE_CANVAS_DRAG_DRAGGING);\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  const handleMouseUp = useCallback((e) => {\n    if (e.button !== 1) {\n      return;\n    }\n\n    setDragState(() => STATE_CANVAS_DRAG_WAITING);\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n\n  useEventHandler({\n    element: canvas,\n    eventName: \"mousedown\",\n    handleEvent: handleMouseDown\n  });\n\n  useEventHandler({\n    element: canvas,\n    eventName: \"mouseup\",\n    handleEvent: handleMouseUp\n  });\n\n  useEventHandler({\n    element: canvas,\n    eventName: \"mousemove\",\n    handleEvent: handleMouseMove\n  });\n\n  useEventHandler({\n    element: canvas,\n    eventName: \"mouseleave\",\n    handleEvent: () => {\n      setDragState(() => STATE_CANVAS_DRAG_WAITING)\n    }\n  });\n\n  useEffect(() => {\n    setDragState(() => STATE_CANVAS_DRAG_WAITING);\n  }, [canvas]);\n\n}\n\nfunction EditCanvas(props) {\n\n  const [canvas, canvasRef] = useComponentRef();\n  const context = useContext(ModelContext);\n\n  const [tool, setTool] = useState(TOOL_CREATE_RECT);\n  const [mouse, setMouse] = useState({\n    mousePosCanvas: VecF32.from([Infinity, Infinity]),\n    mousePosWorld: VecF32.from([Infinity, Infinity]),\n    snappedMousePosCanvas: VecF32.from([Infinity, Infinity]),\n    snappedMousePosWorld: VecF32.from([Infinity, Infinity]),\n    inside: false\n  });\n\n  const [overlayObjects, setOverlayObjects] = useState([]);\n\n  const [currentTool, setCurrentTool] = useState(CreatePointTool.new());\n\n  const [snapToGrid, setSnapToGrid] = useState(true);\n  const [viewTransforms, setViewTransforms] = useState({\n    MNormalized2Canvas: MatF32.id(4, 4),\n    MViewport2Normalized: MatF32.id(4, 4),\n    MViewPort2Canvas: MatF32.id(4, 4),\n    MCanvas2Viewport: MatF32.id(4, 4),\n    canvasSize:\n    {\n      width: 0,\n      height: 0\n    }\n  })\n\n  const [toolVisNeedsUpdate, setToolVisNeedsUpdate] = useState(0);\n\n  const requestVisUpdate = () => setToolVisNeedsUpdate(v => v + 1);\n\n  const [toolState, setToolState] = useState(\n\n    {\n      mouse: mouse,\n      overlay: {\n        overlayObjects: overlayObjects,\n        setOverlayObjects: setOverlayObjects\n      },\n      viewTransforms: viewTransforms,\n      context: context,\n      requestVisUpdate: requestVisUpdate\n    }\n  );\n\n  useCanvasDrag({\n    canvas, context, viewTransforms\n  });\n\n  useViewportMove({\n    viewTransforms, setViewport: context.setViewport,\n    mouse,\n    speed: 10.0\n  });\n\n  useEffect(() => {\n    setToolState(() => {\n      return {\n        mouse: mouse,\n        overlay: {\n          setOverlayObjects: setOverlayObjects\n        },\n        viewTransforms: viewTransforms,\n        context: context,\n        requestVisUpdate: requestVisUpdate\n      }\n    });\n  }, [mouse, context, viewTransforms]);\n\n  const resetTool = (tool) => {\n    setOverlayObjects([]);\n    if (tool === TOOL_CREATE) {\n      setCurrentTool(() => CreatePointTool.new());\n    } else if (tool === TOOL_SELECT) {\n      setCurrentTool(() => SelectEditTool.new());\n    } else if (tool === TOOL_VIEW) {\n      setCurrentTool(ViewEditTool.new());\n    } else if (tool === TOOL_FREEDRAW) {\n      setCurrentTool(FreeHandPolyTool.new());\n    } else if (tool === TOOL_LOAD_SAVE) {\n      setCurrentTool(LoadSaveTool.new());\n    } else if (tool === TOOL_CREATE_RECT) {\n      setCurrentTool(CreateRectTool.new());\n    } else if (tool === TOOL_CAMERA) {\n      setCurrentTool(CameraEditTool.new());\n    }\n  };\n\n  useEffect(() => {\n    // reset specific tool\n    // currently only create has states\n    resetTool(tool);\n  }, [tool]);\n\n  const { viewport, setViewport } = context;\n  // const { center: viewc, halfSize: viewh } = viewport;\n\n\n  useEffect(() => {\n    // init stuff\n  }, []);\n\n\n\n\n  useEffect(() => {\n    if (!canvas) {\n      return;\n    }\n    const { center, halfSize } = viewport;\n    const transforms = {};\n    const wh = canvas.width / 2;\n    const hh = canvas.height / 2;\n    transforms.MNormalized2Canvas = mat.mult(\n      mat.translation(VecF32.from([wh, hh, 0])),\n      mat.scaling(VecF32.from([wh, hh, 1])));\n\n    const sx = halfSize.at(0) !== 0 ? 1 / halfSize.at(0) : 0;\n    const sy = halfSize.at(1) !== 0 ? 1 / halfSize.at(1) : 0;\n\n    transforms.MViewport2Normalized = mat.mult(mat.scaling(VecF32.from([sx, sy, 1])),\n      mat.translation(mat.neg(center)));\n\n    transforms.MViewPort2Canvas = mat.mult(transforms.MNormalized2Canvas, transforms.MViewport2Normalized);\n    transforms.MCanvas2Viewport = mat.inv(transforms.MViewPort2Canvas);\n    transforms.canvasSize = {\n      width: canvas.width,\n      height: canvas.height\n    };\n    setViewTransforms(transforms);\n\n  }, [canvas, viewport]);\n\n  const onResize = useCallback((width, height) => {\n    const aspect = width / height;\n\n\n    setViewport(viewport => {\n      const { center: c, halfSize: h } = viewport;\n      const hw = h.at(0);\n      const hh = h.at(1);\n      // old max size\n      const size = Math.max(hw, hh);\n      if (width > height) {\n        const newHalfSize = VecF32.from([size, size / aspect, 0]);\n        return {\n          center: c,\n          halfSize: newHalfSize,\n          zoomLevel: viewport.zoomLevel\n        }\n      }\n      else {\n        const newHalfSize = VecF32.from([size * aspect, size, 0]);\n\n        return {\n          center: c,\n          halfSize: newHalfSize,\n          zoomLevel: viewport.zoomLevel\n        }\n      }\n    });\n\n  }, [setViewport]);\n\n  const { objects } = props;\n  // Rendering\n  useEffect(() => {\n    if (!canvas) {\n      return;\n    }\n    const boundgridData = Data.new(\n      {\n        strokeStyle: RGBA.new(0.2, 0.2, 0.2, 0.6),\n      }\n    );\n\n    const { center: viewc, halfSize: viewh } = viewport;\n\n    const output = CanvasOutput.new(Screen.new().canvas(canvas));\n    output.initFrame();\n\n\n    const MView = viewTransforms.MViewPort2Canvas;\n    const displayObjects = [];\n\n    const floorGridData = Data.new({\n      strokeStyle: RGBA.AQUA.cp().a(0.45)\n    });\n\n    const floorgrid = [];\n    {\n      const bmin = mat.sub(viewc, viewh);\n      let bx = bmin.at(0);\n      let by = bmin.at(1);\n      const cellSize = zoom_scale(viewport.zoomLevel);\n      bx = cellSize * Math.floor(bx / cellSize);\n      by = cellSize * Math.floor(by / cellSize);\n\n      bmin.set(bx, 0);\n      bmin.set(by, 0);\n\n      const dx = 2.0 * viewh.at(0);\n      const dy = 2.0 * viewh.at(1);\n\n      const numX = Math.ceil(dx / cellSize) + 1;\n      const numY = Math.ceil(dy / cellSize) + 1;\n      const vx = mat.scale(mat.X, cellSize * numX);\n      const vy = mat.scale(mat.Y, cellSize * numY);\n\n      for (let i = 0; i <= numX; i++) {\n        const p0 = VecF32.from([bx + i * cellSize, by, 0]);\n        const p1 = mat.add(p0, vy);\n        floorgrid.push(LineStrip.new(MatF32.fromCols([p0, p1])));\n      }\n\n      for (let i = 0; i <= numY; i++) {\n        const p0 = VecF32.from([bx, by + i * cellSize, 0]);\n        const p1 = mat.add(p0, vx);\n        floorgrid.push(LineStrip.new(MatF32.fromCols([p0, p1])));\n      }\n    }\n\n    for (let j = 0; j < floorgrid.length; j++) {\n      const lj = floorgrid[j];\n      prepareAndAdd(displayObjects, lj, floorGridData, [], MView, -1);\n    }\n\n    if (objects) {\n      // draw bounds\n      for (let i = 0; i < objects.length; i++) {\n        const dp = objects[i].xyboundsWorld;\n\n        const boundData = Data.new({\n          fillStyle: RGBA.new(0, 0, 0, 0),\n          strokeStyle: RGBA.RED.cp().a(0.5)\n        });\n        prepareAndAdd(displayObjects, Polygon.new(dp), boundData, [], MView, objects[i].options.z);\n\n\n\n      }\n\n      for (let i = 0; i < objects.length; i++) {\n        const oi = objects[i];\n\n        const bb = oi.xyboundsWorld;\n\n        if (oi.options.showBoundGridBottom || oi.options.showBoundGridTop) {\n          // const lines = createSideGrid(mat.col(bb, 0), mat.col(bb, 1), mat.col(bb, 2), mat.col(bb, 3), null);\n          // lines.forEach(l => {\n          //   prepareAndAdd(displayObjects, l, boundgridData, [], MView, oi.options.z);\n          // });\n\n          const polySideGrids = createConstantLengthGrid({\n            points: MatF32.fromCols([mat.col(bb, 0), mat.col(bb, 1)]),\n            upDir: mat.normalize(mat.cross(mat.Z,\n              mat.fromTo(mat.col(bb, 0), mat.col(bb, 1)))),\n            upHeight: mat.norm(mat.sub(mat.col(bb, 3), mat.col(bb, 0))),\n            cellLength: objects[i].options.gridCellLength,\n            cullOptions: CULL_NONE\n          });\n\n          prepareAll({\n            queue: displayObjects, drawables: polySideGrids,\n            styleData: boundgridData, M: MView\n          });\n        }\n\n      }\n\n\n      for (let i = 0; i < objects.length; i++) {\n        const oi = objects[i];\n        prepareAndAdd(displayObjects, oi.drawableWorld, oi.styleData, [], MView, oi.options.z, oi.id);\n\n      }\n    }\n\n    overlayObjects.forEach(o => {\n      prepareAndAdd(displayObjects, o.drawableWorld, o.styleData, [], MView, Infinity, o.options.z, o.id);\n    });\n\n    displayObjects.sort((a, b) => a.z === b.z ? a.id - b.id : a.z - b.z);\n\n    for (let i = 0; i < displayObjects.length; i++) {\n      const di = displayObjects[i];\n      di.drawable.draw(output, di.styleData);\n    }\n\n    output.finishFrame();\n\n  }, [objects, overlayObjects, viewTransforms, viewport, canvas]);\n\n\n  const handleAction = action => {\n\n    currentTool.update(toolState, action);\n\n  };\n  useEffect(() => {\n    currentTool.updateVis(toolState);\n  }, [currentTool, toolState, toolVisNeedsUpdate]);\n\n  const snapMousePos = pWorld => {\n    if (snapToGrid) {\n      const cellSize = zoom_scale(viewport.zoomLevel);\n\n      let x = pWorld.at(0);\n      let y = pWorld.at(1);\n\n      x = cellSize * Math.floor(x / cellSize);\n      y = cellSize * Math.floor(y / cellSize);\n      return VecF32.from([x, y]);\n    }\n    else {\n      return pWorld;\n    }\n  }\n\n  const onClick = e => {\n    if (e.button === 0) {\n      handleAction({\n        type: ACTION_MOUSE_CLICK_LEFT\n      });\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n  };\n\n  const onMouseDown = e => {\n\n    let action;\n    switch (e.button) {\n      case 0: action = ACTION_MOUSE_DOWN_LEFT;\n        break;\n      case 2: action = ACTION_MOUSE_DOWN_RIGHT;\n        break;\n      default:\n        return;\n    }\n    handleAction({\n      type: action\n    });\n    e.stopPropagation();\n    e.preventDefault();\n\n\n\n  };\n\n  const onMouseUp = e => {\n    let action;\n    switch (e.button) {\n      case 0: action = ACTION_MOUSE_UP_LEFT;\n        break;\n      case 2: action = ACTION_MOUSE_UP_RIGHT;\n        break;\n      default:\n        return;\n    }\n    handleAction({\n      type: action\n    });\n    e.stopPropagation();\n    e.preventDefault();\n\n\n  };\n\n  const onMouseMove = (e) => {\n\n    const mp = event2Coordinate(e);\n    const mpWorld = transformMouse(mp, viewTransforms.MCanvas2Viewport);\n    const mpWorldSnapped = snapMousePos(mpWorld);\n    const mpSnapped = transformMouse(mpWorldSnapped, viewTransforms.MViewPort2Canvas);\n\n    const mouseNew = {\n      mousePosCanvas: mp,\n      snappedMousePosCanvas: mpSnapped,\n      mousePosWorld: mpWorld,\n      snappedMousePosWorld: mpWorldSnapped,\n      inside: true\n    };\n\n    setMouse(() => mouseNew);\n\n    handleAction({\n      type: ACTION_MOUSE_MOVE,\n      mouse: mouseNew\n    });\n\n  };\n\n  const onMouseLeave = e => {\n    setMouse(current => {\n      const mouseNew = Object.assign({}, current);\n      mouseNew.inside = false;\n      return mouseNew;\n    });\n  };\n\n  const onMouseEnter = e => {\n    const mp = event2Coordinate(e);\n    const mpWorld = transformMouse(mp, viewTransforms.MCanvas2Viewport);\n    const mpWorldSnapped = snapMousePos(mpWorld);\n    const mpSnapped = transformMouse(mpWorldSnapped, viewTransforms.MViewPort2Canvas);\n\n    const mouseNew = {\n      mousePosCanvas: mp,\n      snappedMousePosCanvas: mpSnapped,\n      mousePosWorld: mpWorld,\n      snappedMousePosWorld: mpWorldSnapped,\n      inside: true\n    };\n\n    setMouse(() => mouseNew);\n\n  };\n\n  const handleZoom = s => setViewport(cur => {\n\n    const newzoom = s;\n\n    return updateViewportAspect(cur, newzoom);\n  });\n\n  const handleZoomUpdate = s => setViewport(cur => {\n\n    const newzoom = Math.min(Math.max(0, cur.zoomLevel + s), MAX_ZOOM);\n    return updateViewportAspect(cur, newzoom);\n  });\n\n  return (<>\n    <div className=\"edit-container\">\n      <div className=\"edit-entry\">\n        <canvas ref={canvasRef} width={props.width} height={props.height}\n          onClick={onClick} onMouseMove={onMouseMove}\n          onMouseLeave={onMouseLeave} onMouseEnter={onMouseEnter}\n          onMouseDown={onMouseDown} onMouseUp={onMouseUp}\n          onWheel={e => {\n            handleZoomUpdate(e.deltaY >= 0 ? 1 : -1);\n            e.preventDefault();\n          }}\n        >Canvas not supported</canvas>\n      </div>\n      <div className=\"edit-sidebar\">\n        <div className=\"edit-sidebar-entry\">\n          <span className=\"title\">\n            Options\n          </span>\n          <HelpWindow />\n          <CanvasResizer canvas={canvas}\n            buttonName=\"Resize edit canvas\"\n            handleSizeChange={\n              (w, h) => {\n                onResize(w, h);\n              }\n            }\n          />\n          <CheckBox checked={snapToGrid} labelText=\"Snap cursor to grid\"\n            handleChange={setSnapToGrid} />\n        </div>\n        <div className=\"edit-sidebar-entry\">\n          <ToolSelect tool={tool} onToolChange={tool => {\n            setTool(tool);\n          }}></ToolSelect>\n        </div>\n        <div className=\"edit-sidebar-entry\">\n          <span className=\"title\">\n            Viewport\n          </span>\n          <div>\n            <div>\n              Grid cell length: {formatNumber(zoom_scale(viewport.zoomLevel), 4)}\n            </div>\n            <div>\n              <ValueSlider valueName=\"Zoom level\"\n                min={0} max={50} step={1} precision={0}\n                value={viewport.zoomLevel}\n                handleChange={handleZoom}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"edit-container\">\n      {currentTool.render(toolState)}\n    </div>\n  </>\n  );\n}\n\n\nconst CULL_NONE = 0;\nconst CULL_BACK = 1;\nconst CULL_FRONT = 2;\nconst CULL_FRONT_AND_BACK = 3;\n\nfunction options2CullTypeSide(options) {\n  if (options.showSideGridFront && options.showSideGridBack) {\n    return CULL_NONE;\n  }\n\n  if (options.showSideGridFront) {\n    return CULL_BACK;\n  }\n\n  if (options.showSideGridBack) {\n    return CULL_FRONT;\n  }\n\n  return CULL_FRONT_AND_BACK;\n\n}\n\n\nfunction doCull(a, n, camPos, cullType) {\n  if (!camPos) {\n    return false;\n  }\n  if (cullType === CULL_NONE) {\n    return false;\n  }\n\n  if (cullType === CULL_FRONT_AND_BACK) {\n    return true;\n  }\n  const d = mat.dot(n, mat.fromTo(camPos, a));\n\n  return cullType === CULL_BACK ? d > 0 : d < 0;\n\n}\n\nfunction prepareAll({ queue, drawables, styleData = Data.new(), clipplanes = [], M }) {\n\n  drawables.forEach(d => prepareAndAdd(queue, d, styleData, clipplanes, M));\n}\n\nfunction createConstantLengthGrid({ points, upDir = mat.Z, upHeight, cellLength = 0.25, cellHeight = cellLength, camPos, cullOptions = CULL_NONE }) {\n\n  // only draw if there is elevation\n  if (upHeight === 0) {\n    return [];\n  }\n\n  if (cullOptions === CULL_FRONT_AND_BACK) {\n    return [];\n  }\n\n  const n = points.cols();\n\n  // in case of line, do not close\n\n  const zticks = [];\n  let zOffset = 0;\n  while (zOffset < upHeight) {\n    zticks.push(zOffset);\n    zOffset += cellHeight;\n  }\n  zticks.push(upHeight);\n\n  const topOffset = mat.scale(upDir, upHeight);\n  const result = [];\n  // for lines, do not go back\n  const maxSteps = n === 2 ? n - 1 : n;\n  for (let i = 0; i < maxSteps; i++) {\n    const a = mat.col(points, i);\n    const b = mat.col(points, (i + 1) % n);\n    const d = mat.add(a, topOffset);\n    const sideLength = mat.norm(mat.sub(a, b));\n\n    const ticks = [];\n    let offset = 0;\n    while (offset < sideLength) {\n      ticks.push(offset);\n      offset += cellLength;\n    }\n    ticks.push(sideLength);\n    const lines = createSideGridFromTicks(a, b, d, ticks, zticks, camPos, cullOptions);\n    result.push(...lines);\n  }\n  return result;\n}\n\nfunction createSideGridFromTicks(a, b, d, tticks, zticks, camPos, cullType) {\n\n  const v0 = mat.fromTo(a, b);\n  const v1 = mat.fromTo(a, d);\n\n  const l0 = mat.norm(v0);\n  const l1 = mat.norm(v1);\n\n  if (l0 < 1E-7 || l1 < 1E-7) {\n    // singular side\n    return [];\n  }\n  const n = mat.cross(v0, v1);\n\n\n  const lines = [];\n\n  if (!doCull(a, n, camPos, cullType)) {\n    for (let i = 0; i < tticks.length; i++) {\n      const tx = tticks[i];\n      const p0 = mat.add(a, mat.scale(v0, tx / l0));\n      const p1 = mat.add(p0, v1);\n      lines.push(LineStrip.new(MatF32.fromCols([p0, p1])));\n    }\n\n    for (let i = 0; i < zticks.length; i++) {\n      const tx = zticks[i];\n      const p0 = mat.add(a, mat.scale(v1, tx / l1));\n      const p1 = mat.add(p0, v0);\n      lines.push(LineStrip.new(MatF32.fromCols([p0, p1])));\n    }\n  }\n  return lines;\n}\n\nfunction prepareAndAdd(queue, drawable, data, clipplanes, M, overwriteZ, id) {\n  drawable = clipDrawable(drawable, clipplanes);\n  if (drawable) {\n    if (M) {\n      drawable = drawable.transform(M);\n    }\n    const drawableDisplayable = Displayable.new(drawable, data,\n      mat.optional(overwriteZ, drawable.center.at(2)), id);\n    queue.push(drawableDisplayable);\n  }\n};\n\nfunction makePerspectiveBoundDrawables(object, backgroundQueue, foregroundQueue, clipplanes, VP, camPos, data) {\n\n  const bbLower = object.xyboundsWorld;\n\n  const li = (i) => mat.col(bbLower, i);\n\n\n  const z = object.options.z;\n\n  if (object.options.showBoundGridBottom) {\n\n\n    const polySideGrids = createConstantLengthGrid({\n      points: MatF32.fromCols([li(0), li(1)]),\n      upDir: mat.normalize(mat.cross(mat.Z,\n        mat.fromTo(li(0), li(1)))), upHeight: mat.norm(mat.sub(li(3), li(0))),\n      cellLength: object.options.gridCellLength,\n      camPos: camPos,\n      cullOptions: CULL_NONE\n    });\n    prepareAll({\n      queue: backgroundQueue, drawables: polySideGrids,\n      styleData: data,\n      clipplanes: clipplanes, M: VP\n    });\n  }\n\n  if (z && z > 0) {\n\n    const bbUpper = MatF32.copy(bbLower);\n    // translate\n    mat.fill(mat.row(bbUpper, 2), z);\n\n    const ui = (i) => mat.col(bbUpper, i);\n\n    // put upper grid in background queue if needed\n\n    if (object.options.showBoundGridTop) {\n      // const upperGrid = createSideGrid(ui(0), ui(1), ui(2), ui(3), camPos, CULL_NONE);\n      // upperGrid.forEach(g => prepareAndAdd(backgroundQueue, g, data, clipplanes, VP));\n\n      const polySideGrids = createConstantLengthGrid({\n        points: MatF32.fromCols([ui(0), ui(1)]),\n        upDir: mat.normalize(mat.cross(mat.Z,\n          mat.fromTo(ui(0), ui(1)))), upHeight: mat.norm(mat.sub(ui(3), ui(0))),\n        cellLength: object.options.gridCellLength,\n        camPos: camPos,\n        cullOptions: CULL_NONE\n      });\n\n      prepareAll({\n        queue: backgroundQueue, drawables: polySideGrids,\n        styleData: data,\n        clipplanes: clipplanes, M: VP\n      });\n\n    }\n  }\n\n\n\n}\n\nfunction createVanishingLinePoints(queue, aWorld, bWorld, nearPlane, clipplanesWindow, VP, dataPoint, dataLine) {\n\n  const dirWorld = mat.fromTo(aWorld, bWorld);\n  // point behind near plane\n  // project onto it\n  if (!pointInside(aWorld, nearPlane)) {\n    [aWorld,] = intersectLinePlane(aWorld, dirWorld, nearPlane);\n  }\n  if (!pointInside(bWorld, nearPlane)) {\n    [bWorld,] = intersectLinePlane(bWorld, dirWorld, nearPlane);\n  }\n  const dirH = mat.mult(VP, mat.hvec(dirWorld, 0));\n  const aH = mat.subvec(mat.homogenize(mat.mult(VP,\n    mat.hvec(aWorld))), 0, 3);\n  const bH = mat.subvec(mat.homogenize(mat.mult(VP,\n    mat.hvec(bWorld))), 0, 3);\n\n  if (Math.abs(dirH.at(3)) < 1E-7) {\n    // TOOD handle points at infinity\n    // Just draw parallel lines up to some length?\n\n    return [];\n  }\n  const vp = MatF32.copy(mat.subvec(mat.homogenize(dirH), 0, 3));\n\n  const isBBehind = mat.dot(mat.fromTo(aH, bH), mat.fromTo(aH, vp)) < 0;\n\n  const vanishingPoint = Point.new(vp, 3);\n  prepareAndAdd(queue, vanishingPoint, dataPoint, clipplanesWindow);\n  const p0 = isBBehind ? bH : aH;\n  let vanishingLine = LineStrip.new(MatF32.fromCols([p0, vp]));\n\n  prepareAndAdd(queue, vanishingLine, dataLine, clipplanesWindow);\n\n}\n\n\nfunction createBoundVanishing(queue, object, nearPlane, clipplanesWindow, cam, VP, dataPoint, dataLine) {\n  const bbLower = object.xyboundsWorld;\n\n  const li = (i) => mat.col(bbLower, i);\n\n  for (let i = 0; i < bbLower.cols(); i++) {\n    const p0 = li(i);\n\n    const p1 = li((i + 1) % bbLower.cols());\n\n    createVanishingLinePoints(queue, p0, p1, nearPlane, clipplanesWindow, VP, dataPoint, dataLine);\n  }\n\n  const z = object.options.z;\n  if (z && z > 0) {\n\n    const bbUpper = MatF32.copy(bbLower);\n    // translate\n    mat.fill(mat.row(bbUpper, 2), z);\n\n    const ui = (i) => mat.col(bbUpper, i);\n\n    for (let i = 0; i < bbUpper.cols(); i++) {\n      const p0 = ui(i);\n      const p1 = ui((i + 1) % bbUpper.cols());\n\n      createVanishingLinePoints(queue, p0, p1, nearPlane, clipplanesWindow, VP, dataPoint, dataLine);\n    }\n  }\n}\n\n\n\nfunction perspectiveRender(output, { objects, drawFloorGrid }, { viewport, cam },\n  frustumPlanes, clipplanes, VP, linewidthScale = 0) {\n  const backgroundQueue = [];\n  const foregroundQueue = [];\n\n\n  const boundgridData = Data.new(\n    {\n      strokeStyle: RGBA.new(0.2, 0.2, 0.2, 0.6),\n\n    }\n  );\n\n\n\n  const W = mat.viewport(0, 0, output.getWidth(), output.getHeight());\n  const WVP = mat.mult(W, VP);\n\n\n  const clipplanesWindow = clipplanes.map(p => transformPlane(p, WVP));\n\n  const { pos: camPos } = cam;\n\n  // create text clipplanes for left/right\n  let planeLeft = frustumPlanes[0];\n  let planeRight = frustumPlanes[1];\n\n  const textClipPlanes = [planeLeft, planeRight];\n\n  // find left and right clip point (assuming horizon is not flipped on side)\n  {\n    const horizonPoints = [];\n    // vanishing line\n    const horizonPointsHom = [mat.mult(WVP, VecF32.from([1, 0, 0, 0])),\n    mat.mult(WVP, VecF32.from([0, 1, 0, 0])),\n    mat.mult(WVP, VecF32.from([1, 1, 0, 0]))];\n\n    for (let i = 0; i < horizonPointsHom.length; i++) {\n      const vph = horizonPointsHom[i];\n      if (Math.abs(vph.at(3)) < 1E-7) {\n        continue;\n      }\n      const vp = mat.subvec(mat.homogenize(vph), 0, 3);\n      horizonPoints.push(vp);\n    }\n\n    if (horizonPoints.length > 1) {\n      const vx = horizonPoints[0];\n      const vz = horizonPoints[1];\n\n      // in window coordinates\n      const [sleft,] = intersectLinePlane(vx, vz, planeFromPointNormal(VecF32.from([0, 0, 0]), VecF32.from([1, 0, 0])));\n      const [sright,] = intersectLinePlane(vx, vz, planeFromPointNormal(VecF32.from([output.getWidth(), 0, 0]), VecF32.from([1, 0, 0])));\n\n      const horizonDrawable = LineStrip.new(\n        MatF32.from([sleft.at(0), sleft.at(1), 0, sright.at(0), sright.at(1), 0], 3, 2)\n      );\n      const horizon = Displayable.new(horizonDrawable, Data.new({\n        strokeStyle: RGBA.BLACK\n      }), horizonDrawable.center.at(2));\n\n      backgroundQueue.push(horizon);\n\n    }\n\n  }\n\n\n  const floorGridData = Data.new({\n    strokeStyle: RGBA.AQUA.cp().a(0.45)\n  });\n\n  const { center: fc, halfSize: fh } = viewport;\n\n  const floorgrid = [];\n\n  if (drawFloorGrid) {\n    const bmin = mat.sub(fc, fh);\n    let bx = bmin.at(0);\n    let by = bmin.at(1);\n    const cellSize = zoom_scale(viewport.zoomLevel);\n    bx = cellSize * Math.floor(bx / cellSize);\n    by = cellSize * Math.floor(by / cellSize);\n\n    const dx = 2.0 * fh.at(0);\n    const dy = 2.0 * fh.at(1);\n\n    const numX = Math.ceil(dx / cellSize) + 1;\n    const numY = Math.ceil(dy / cellSize) + 1;\n    const vx = mat.scale(mat.X, cellSize * numX);\n    const vy = mat.scale(mat.Y, cellSize * numY);\n\n    for (let i = 0; i <= numX; i++) {\n      const p0 = VecF32.from([bx + i * cellSize, by, 0]);\n      const p1 = mat.add(p0, vy);\n      floorgrid.push(LineStrip.new(MatF32.fromCols([p0, p1])));\n    }\n\n    for (let i = 0; i <= numY; i++) {\n      const p0 = VecF32.from([bx, by + i * cellSize, 0]);\n      const p1 = mat.add(p0, vx);\n      floorgrid.push(LineStrip.new(MatF32.fromCols([p0, p1])));\n    }\n  }\n\n\n\n  for (let i = 0; i < floorgrid.length; i++) {\n    prepareAndAdd(backgroundQueue, floorgrid[i], floorGridData, clipplanes, WVP);\n  }\n\n\n\n  if (objects) {\n\n    const vanishingLineData = Data.new({\n      strokeStyle: RGBA.GRAY.cp().a(0.4)\n    });\n\n\n    for (let i = 0; i < objects.length; i++) {\n\n      const oi = objects[i];\n\n      const drawableWorld = oi.drawableWorld;\n\n      makePerspectiveBoundDrawables(oi, backgroundQueue, foregroundQueue, clipplanes, WVP, camPos, boundgridData);\n\n      let gpoints = mat.copy(oi.drawableWorld.points);\n      const zStart = oi.options.sideGridStart;\n      let zHeight = oi.options.z;\n      if (zStart !== 0) {\n        mat.fill(mat.row(gpoints, 2), zStart);\n        zHeight = Math.max(0, zHeight - zStart);\n      }\n      const polySideGrids = createConstantLengthGrid({\n        points: gpoints,\n        upDir: mat.Z, upHeight: zHeight,\n        cellLength: oi.options.gridCellLength,\n        cellHeight: oi.options.gridCellHeight,\n        camPos: camPos,\n        cullOptions: options2CullTypeSide(oi.options)\n      });\n      prepareAll({\n        queue: foregroundQueue, drawables: polySideGrids,\n        styleData: oi.styleData,\n        clipplanes: clipplanes, M: WVP\n      });\n\n      {\n        // draw object itself\n        let dObj = oi.drawableWorld;\n        prepareAndAdd(foregroundQueue, dObj, oi.styleData, clipplanes, WVP);\n      }\n\n      // vanishing lines\n      if (oi.options.showBoundVanishingLines) {\n        createBoundVanishing(backgroundQueue, oi, frustumPlanes[4], clipplanesWindow, cam, WVP,\n          Data.new(), vanishingLineData);\n      }\n\n      const z = oi.options.z;\n      if (z && z > 0) {\n        const TZ = mat.translation(VecF32.from([0, 0, z]));\n        const drawTrans = drawableWorld.transform(TZ);\n\n        prepareAndAdd(foregroundQueue, drawTrans, oi.styleData, clipplanes, WVP);\n\n        // draw lines between vertices\n        const pw = drawableWorld.points;\n        const pt = drawTrans.points;\n        const n = pw.cols();\n        const lineData = oi.styleData.copy();\n\n        lineData.set(\"lineWidth\", lineData.get(\"lineWidth\", 1) * 2);\n        for (let j = 0; j < n; j++) {\n          const line = LineStrip.new(MatF32.fromCols([mat.col(pw, j), mat.col(pt, j)]));\n\n          prepareAndAdd(foregroundQueue, line, lineData, clipplanes, WVP);\n        }\n\n        // set length markers\n\n        if (oi.options.displayCellLength) {\n\n          const culltype = options2CullTypeSide(oi.options);\n          // find closest poly point\n          let noCullLast = false;\n          for (let j = 0; j < n; j++) {\n            const pj = mat.col(pw, j);\n            const pjn = mat.col(pw, (j + 1) % n);\n            const normal = mat.cross(mat.fromTo(pj, pjn), mat.Z);\n            if (doCull(pj, normal, camPos, culltype)) {\n              if (!noCullLast) {\n                noCullLast = false;\n                continue;\n\n              }\n              noCullLast = false;\n\n            } else {\n              noCullLast = true;\n            }\n            let clipped = false;\n\n            for (let k = 0; k < textClipPlanes.length; k++) {\n              if (!pointInside(pj, textClipPlanes[k])) {\n                clipped = true;\n                break;\n              }\n            }\n\n            if (clipped) {\n              const pjz = mat.copy(pj);\n              pjz.set(z, 2);\n              clipped = false;\n              for (let k = 0; k < textClipPlanes.length; k++) {\n                if (!pointInside(pjz, textClipPlanes[k])) {\n                  clipped = true;\n                  break;\n                }\n              }\n            }\n            if (clipped) {\n              continue;\n            }\n            const { gridCellHeight } = oi.options;\n            const textStart = mat.copy(pj);\n            const zStart = oi.options.sideGridStart;\n            textStart.set(zStart, 2);\n\n            const numZ = Math.ceil((z - zStart) / gridCellHeight);\n            for (let j = 0; j <= numZ; j++) {\n              const zOffset = j * gridCellHeight;\n              const point = mat.add(textStart, mat.scale(mat.Z, zOffset));\n              prepareAndAdd(foregroundQueue, Text.new(point, formatNumber(zOffset, 3)),\n                oi.styleData, [frustumPlanes[4]], WVP);\n            }\n\n          }\n        }\n      }\n    }\n  }\n\n  backgroundQueue.sort((a, b) => b.z - a.z);\n  foregroundQueue.sort((a, b) => b.z - a.z);\n\n  const isScaleLineWidth = linewidthScale !== 0;\n  const scale = isScaleLineWidth ? Math.max(1, Math.round(linewidthScale / 2)) : 1;\n  for (let i = 0; i < backgroundQueue.length; i++) {\n    const di = backgroundQueue[i];\n    let style = di.styleData;\n    if (isScaleLineWidth) {\n      style = style.copy();\n      style.set(\"lineWidth\", style.get(\"lineWidth\", 1) * scale);\n    }\n    di.drawable.draw(output, style);\n  }\n\n  for (let i = 0; i < foregroundQueue.length; i++) {\n    const di = foregroundQueue[i];\n    let style = di.styleData;\n    if (isScaleLineWidth) {\n      style = style.copy();\n      style.set(\"lineWidth\", style.get(\"lineWidth\", 1) * scale);\n    }\n    di.drawable.draw(output, style);\n  }\n\n}\n\nfunction PerspectiveView(props) {\n  const context = useContext(ModelContext);\n  const { objects } = props;\n  const { viewport, cam } = context;\n  const [canvas, canvasRef] = useComponentRef();\n  const [imageSizeMultiplier, setImageSizeMultiplier] = useState(2);\n\n  const [camSpeedLevel, setCamSpeedLevel] = useState(viewport.zoomLevel);\n  const [drawFloorGrid, setDrawFloorGrid] = useState(true);\n  const camSpeed = zoom_scale(camSpeedLevel);\n\n  const V = props.V;\n  const P = props.P;\n  const VP = mat.mult(P, V);\n\n\n  let clipplanes = [];\n  const frustumPlanes = computeFrustumPlanes(VP);\n  // clipplanes.push(frustumPlanes[4]);\n  clipplanes.push(...computeFrustumPlanes(VP));\n  clipplanes.splice(5, 1);\n  // near clip in window coordinates\n  // clipplanes.push({ n: VecF32.from([1, 0, 0]), p: VecF32.from([160, 0, 0]) });\n\n\n  useFirstPersonController({\n    cam: context.cam, setCam: context.setCam,\n    camUp: mat.Z, canvas, speed: camSpeed\n  });\n\n  const { setPerspective } = context;\n  useEffect(() => {\n    if (canvas === null) {\n      return;\n    }\n    setPerspective(cur => ({\n      fov: cur.fov,\n      aspect: (canvas.width / canvas.height)\n    }));\n  }, [canvas, setPerspective]);\n\n\n  useEffect(() => {\n    if (canvas === null) {\n      return;\n    }\n    const output = CanvasOutput.new(Screen.new().canvas(canvas));\n\n    output.initFrame();\n\n    perspectiveRender(output, { objects, drawFloorGrid }, { viewport, cam }, frustumPlanes, clipplanes, VP);\n\n    output.finishFrame();\n  }, [VP, frustumPlanes, clipplanes, canvas, objects, viewport, cam, drawFloorGrid]);\n\n  const downloadSVGButton = () => {\n    if (canvas === null) {\n      return;\n    }\n    const output = SVGOutput.new(canvas.width, canvas.height);\n\n    output.initFrame();\n    perspectiveRender(output, { objects, drawFloorGrid }, context, frustumPlanes, clipplanes, VP);\n\n    output.finishFrame();\n\n    const currentTime = new Date();\n    const formattedTime = currentTime.getFullYear() + \"-\" +\n      (currentTime.getMonth() + 1) + \"-\" +\n      currentTime.getDate()\n\n    output.download(formattedTime + \"_perspective_drawing\");\n  };\n\n  const downloadHighResPNGButton = () => {\n    if (canvas === null) {\n      return;\n    }\n\n    const canvasNew = document.createElement(\"canvas\");\n    canvasNew.width = imageSizeMultiplier * canvas.width;\n    canvasNew.height = imageSizeMultiplier * canvas.height;\n    const output = CanvasOutput.new(Screen.new().canvas(canvasNew));\n\n    output.initFrame();\n    perspectiveRender(output, { objects, drawFloorGrid },\n      context, frustumPlanes, clipplanes, VP,\n      imageSizeMultiplier);\n\n    output.finishFrame();\n\n    const currentTime = new Date();\n    const formattedTime = currentTime.getFullYear() + \"-\" +\n      (currentTime.getMonth() + 1) + \"-\" +\n      currentTime.getDate()\n    output.download(formattedTime + \"_perspective_drawing\");\n  };\n  return <div>\n    <canvas tabIndex=\"-1\" ref={canvasRef}\n      width={props.width} height={props.height}\n      className=\"perspectiveCanvas\">\n      Canvas not supported\n    </canvas>\n    <div className=\"flex-container\">\n      <div className=\"flex-entry\">\n        <span className=\"title\">\n          3D Settings\n      </span>\n        <ValueSlider value={camSpeedLevel} handleChange={v => setCamSpeedLevel(v)}\n          valueName=\"Movement speed\" min={0} max={50} step={1} precision={0}\n        />\n        <CheckBox checked={drawFloorGrid} labelText=\"Draw floor grid\"\n          handleChange={v => setDrawFloorGrid(v)} />\n      </div>\n\n      <div className=\"flex-entry\">\n        <span className=\"title\">\n          Options\n        </span>\n        <CanvasResizer\n          canvas={canvas}\n          buttonName=\"Resize 3D canvas\"\n          position=\"right\"\n          handleSizeChange={\n            (w, h) => {\n              setPerspective(cur => ({\n                fov: cur.fov,\n                aspect: w / h\n              }));\n            }\n          }\n        />\n\n      </div>\n\n      <div className=\"flex-entry\">\n        <span className=\"title\">\n          Download\n          </span>\n        <ValueSlider value={imageSizeMultiplier}\n          handleChange={v => setImageSizeMultiplier(v)}\n          valueName=\"PNG size multiplier\" min={1} max={5} step={1} precision={0}\n        />\n        <button onClick={downloadSVGButton}>Download SVG</button>\n        <button onClick={downloadHighResPNGButton}>Download PNG</button>\n      </div>\n    </div>\n  </div>\n}\n\nfunction CanvasResizer({ canvas, buttonName = \"Resize Canvas\",\n  handleSizeChange, position = \"left\" }) {\n\n\n  const [show, setShow] = useState(false);\n  const [curWidth, setCurWidth] = useState(0);\n  const [curHeight, setCurHeight] = useState(0);\n\n  const width = canvas ? canvas.width : 0;\n  const height = canvas ? canvas.height : 0;\n\n  useEffect(() => {\n    setCurWidth(w => width);\n    setCurHeight(h => height);\n  }, [width, height]);\n\n\n  if (!canvas) {\n    return (\n      <div>\n        <button disabled={true}>{buttonName}</button>\n      </div >\n    );\n  }\n\n  let className = \"resize-canvas-window\";\n  if (position === \"left\") {\n    className += \" left-to\";\n  }\n  else if (position === \"right\") {\n    className += \" right-to\";\n  }\n  const window = (\n    <div className=\"popover\">\n      <div className=\"fullscreen transparent\" onClick={\n        () => setShow(() => false)\n      } />\n      <div className={className}>\n        <span className=\"title\">\n          Resize canvas\n        </span>\n        <div>\n          Width: <NumberInput\n            value={curWidth} size={4}\n            handleChange={e => setCurWidth(e)} />\n        </div>\n        <div>\n          Height: <NumberInput\n            value={curHeight} size={4}\n            handleChange={e => setCurHeight(e)}\n          />\n        </div>\n        <div>\n          <button onClick={() => {\n            canvas.width = Math.max(1, curWidth);\n            canvas.height = Math.max(1, curHeight);\n            handleSizeChange(curWidth, curHeight);\n            setShow(false);\n          }}>Update size</button>\n          <button onClick={() => setShow(false)}>Cancel</button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <button onClick={() => setShow(true)}>{buttonName}</button>\n      {show ? window : null}\n    </div>\n  );\n\n}\n\n\nconst ModelContext = React.createContext();\n\n\nfunction ObjectHandler(props) {\n  const [objects, setObjects] = useState([]);\n\n  const [cam, setCam] = useState({\n    pos: VecF32.from([-0.4, -1.5, 1]),\n    dir: VecF32.from([0.4, 1.5, -1]),\n    up: mat.Z\n  });\n  const [perspective, setPerspective] = useState({\n    fov: mat.deg2rad(90),\n    aspect: 1\n  });\n\n  const [viewport, setViewport] = useState({\n    center: VecF32.from([0, 0, 0]),\n    halfSize: VecF32.from([computeViewportHalfSize(0), computeViewportHalfSize(0), 0]),\n    zoomLevel: 0\n  });\n\n  const P = mat.perspective(perspective.fov, perspective.aspect, 0.1, 100);\n  const V = mat.lookAt(cam.pos, mat.add(cam.pos, cam.dir), mat.Z);\n\n  let changeObject = useCallback((object, index) => {\n    setObjects(objects => {\n      const objectsNew = [...objects];\n      objectsNew[index] = object;\n      return objectsNew;\n    });\n  }, []);\n\n  let onAddObject = useCallback((object) => {\n    setObjects(objects => objects.concat(object))\n  }, []);\n\n  let onDeleteObject = useCallback((object, index) => {\n    setObjects(objects => {\n      const newObjects = [...objects];\n      newObjects.splice(index, 1);\n      return newObjects;\n    });\n  }, []);\n\n\n  return <div>\n    <ModelContext.Provider value={\n      {\n        objects, setObjects,\n        cam, setCam,\n        perspective, setPerspective,\n        V,\n        P,\n        viewport, setViewport\n      }\n    }>\n      <div className=\"main-container\">\n        <div className=\"perspective-view\">\n          <PerspectiveView width=\"720\" height=\"405\" objects={objects} V={V} P={P} viewport={viewport}></PerspectiveView>\n        </div>\n        <div className=\"edit-view\">\n          <EditCanvas width=\"400\" height=\"400\"\n            objects={objects} objChangeHandler={changeObject}\n            onAddObject={onAddObject} handleDelete={onDeleteObject} />\n        </div>\n      </div>\n    </ModelContext.Provider>\n  </div>;\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        {<img src={logo} className=\"App-logo\" alt=\"logo\" />/}\n      </header> */}\n      <ObjectHandler></ObjectHandler>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}